// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "dct.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<6> dct::ap_const_lv6_0 = "000000";
const sc_logic dct::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> dct::ap_const_lv16_0 = "0000000000000000";
const sc_logic dct::ap_const_logic_1 = sc_dt::Log_1;
const bool dct::ap_true = true;

dct::dct(sc_module_name name) : sc_module(name), mVcdFile(0) {
    read_data_U0 = new read_data("read_data_U0");
    read_data_U0->ap_clk(ap_clk);
    read_data_U0->ap_rst(ap_rst);
    read_data_U0->ap_start(read_data_U0_ap_start);
    read_data_U0->ap_done(read_data_U0_ap_done);
    read_data_U0->ap_continue(read_data_U0_ap_continue);
    read_data_U0->ap_idle(read_data_U0_ap_idle);
    read_data_U0->ap_ready(read_data_U0_ap_ready);
    read_data_U0->input_r_address0(read_data_U0_input_r_address0);
    read_data_U0->input_r_ce0(read_data_U0_input_r_ce0);
    read_data_U0->input_r_q0(read_data_U0_input_r_q0);
    read_data_U0->buf_r_address0(read_data_U0_buf_r_address0);
    read_data_U0->buf_r_ce0(read_data_U0_buf_r_ce0);
    read_data_U0->buf_r_we0(read_data_U0_buf_r_we0);
    read_data_U0->buf_r_d0(read_data_U0_buf_r_d0);
    dct_2d_U0 = new dct_2d("dct_2d_U0");
    dct_2d_U0->ap_clk(ap_clk);
    dct_2d_U0->ap_rst(ap_rst);
    dct_2d_U0->ap_start(dct_2d_U0_ap_start);
    dct_2d_U0->ap_done(dct_2d_U0_ap_done);
    dct_2d_U0->ap_continue(dct_2d_U0_ap_continue);
    dct_2d_U0->ap_idle(dct_2d_U0_ap_idle);
    dct_2d_U0->ap_ready(dct_2d_U0_ap_ready);
    dct_2d_U0->in_block_address0(dct_2d_U0_in_block_address0);
    dct_2d_U0->in_block_ce0(dct_2d_U0_in_block_ce0);
    dct_2d_U0->in_block_q0(dct_2d_U0_in_block_q0);
    dct_2d_U0->in_block_address1(dct_2d_U0_in_block_address1);
    dct_2d_U0->in_block_ce1(dct_2d_U0_in_block_ce1);
    dct_2d_U0->in_block_q1(dct_2d_U0_in_block_q1);
    dct_2d_U0->out_block_address0(dct_2d_U0_out_block_address0);
    dct_2d_U0->out_block_ce0(dct_2d_U0_out_block_ce0);
    dct_2d_U0->out_block_we0(dct_2d_U0_out_block_we0);
    dct_2d_U0->out_block_d0(dct_2d_U0_out_block_d0);
    write_data_U0 = new write_data("write_data_U0");
    write_data_U0->ap_clk(ap_clk);
    write_data_U0->ap_rst(ap_rst);
    write_data_U0->ap_start(write_data_U0_ap_start);
    write_data_U0->ap_done(write_data_U0_ap_done);
    write_data_U0->ap_continue(write_data_U0_ap_continue);
    write_data_U0->ap_idle(write_data_U0_ap_idle);
    write_data_U0->ap_ready(write_data_U0_ap_ready);
    write_data_U0->buf_r_address0(write_data_U0_buf_r_address0);
    write_data_U0->buf_r_ce0(write_data_U0_buf_r_ce0);
    write_data_U0->buf_r_q0(write_data_U0_buf_r_q0);
    write_data_U0->output_r_address0(write_data_U0_output_r_address0);
    write_data_U0->output_r_ce0(write_data_U0_output_r_ce0);
    write_data_U0->output_r_we0(write_data_U0_output_r_we0);
    write_data_U0->output_r_d0(write_data_U0_output_r_d0);
    buf_2d_in_U = new dct_buf_2d_in("buf_2d_in_U");
    buf_2d_in_U->clk(ap_clk);
    buf_2d_in_U->reset(ap_rst);
    buf_2d_in_U->i_address0(buf_2d_in_i_address0);
    buf_2d_in_U->i_ce0(buf_2d_in_i_ce0);
    buf_2d_in_U->i_we0(buf_2d_in_i_we0);
    buf_2d_in_U->i_d0(buf_2d_in_i_d0);
    buf_2d_in_U->i_q0(buf_2d_in_i_q0);
    buf_2d_in_U->i_address1(buf_2d_in_i_address1);
    buf_2d_in_U->i_ce1(buf_2d_in_i_ce1);
    buf_2d_in_U->i_q1(buf_2d_in_i_q1);
    buf_2d_in_U->t_address0(buf_2d_in_t_address0);
    buf_2d_in_U->t_ce0(buf_2d_in_t_ce0);
    buf_2d_in_U->t_we0(buf_2d_in_t_we0);
    buf_2d_in_U->t_d0(buf_2d_in_t_d0);
    buf_2d_in_U->t_q0(buf_2d_in_t_q0);
    buf_2d_in_U->t_address1(buf_2d_in_t_address1);
    buf_2d_in_U->t_ce1(buf_2d_in_t_ce1);
    buf_2d_in_U->t_q1(buf_2d_in_t_q1);
    buf_2d_in_U->i_ce(buf_2d_in_U_ap_dummy_ce);
    buf_2d_in_U->t_ce(buf_2d_in_U_ap_dummy_ce);
    buf_2d_in_U->i_full_n(buf_2d_in_i_full_n);
    buf_2d_in_U->i_write(buf_2d_in_i_write);
    buf_2d_in_U->t_empty_n(buf_2d_in_t_empty_n);
    buf_2d_in_U->t_read(buf_2d_in_t_read);
    buf_2d_out_U = new dct_buf_2d_out("buf_2d_out_U");
    buf_2d_out_U->clk(ap_clk);
    buf_2d_out_U->reset(ap_rst);
    buf_2d_out_U->i_address0(buf_2d_out_i_address0);
    buf_2d_out_U->i_ce0(buf_2d_out_i_ce0);
    buf_2d_out_U->i_we0(buf_2d_out_i_we0);
    buf_2d_out_U->i_d0(buf_2d_out_i_d0);
    buf_2d_out_U->i_q0(buf_2d_out_i_q0);
    buf_2d_out_U->t_address0(buf_2d_out_t_address0);
    buf_2d_out_U->t_ce0(buf_2d_out_t_ce0);
    buf_2d_out_U->t_we0(buf_2d_out_t_we0);
    buf_2d_out_U->t_d0(buf_2d_out_t_d0);
    buf_2d_out_U->t_q0(buf_2d_out_t_q0);
    buf_2d_out_U->i_ce(buf_2d_out_U_ap_dummy_ce);
    buf_2d_out_U->t_ce(buf_2d_out_U_ap_dummy_ce);
    buf_2d_out_U->i_full_n(buf_2d_out_i_full_n);
    buf_2d_out_U->i_write(buf_2d_out_i_write);
    buf_2d_out_U->t_empty_n(buf_2d_out_t_empty_n);
    buf_2d_out_U->t_read(buf_2d_out_t_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_chn_write_dct_2d_U0_buf_2d_out);
    sensitive << ( dct_2d_U0_ap_done );

    SC_METHOD(thread_ap_chn_write_read_data_U0_buf_2d_in);
    sensitive << ( read_data_U0_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_hs_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( read_data_U0_ap_idle );
    sensitive << ( dct_2d_U0_ap_idle );
    sensitive << ( write_data_U0_ap_idle );
    sensitive << ( buf_2d_in_t_empty_n );
    sensitive << ( buf_2d_out_t_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_top_allready );

    SC_METHOD(thread_ap_sig_hs_continue);

    SC_METHOD(thread_ap_sig_hs_done);
    sensitive << ( write_data_U0_ap_done );
    sensitive << ( ap_reg_procdone_write_data_U0 );

    SC_METHOD(thread_ap_sig_top_allready);
    sensitive << ( read_data_U0_ap_ready );

    SC_METHOD(thread_buf_2d_in_U_ap_dummy_ce);

    SC_METHOD(thread_buf_2d_in_i_address0);
    sensitive << ( read_data_U0_buf_r_address0 );

    SC_METHOD(thread_buf_2d_in_i_ce0);
    sensitive << ( read_data_U0_buf_r_ce0 );

    SC_METHOD(thread_buf_2d_in_i_d0);
    sensitive << ( read_data_U0_buf_r_d0 );

    SC_METHOD(thread_buf_2d_in_i_we0);
    sensitive << ( read_data_U0_buf_r_we0 );

    SC_METHOD(thread_buf_2d_in_i_write);
    sensitive << ( read_data_U0_ap_done );

    SC_METHOD(thread_buf_2d_in_t_address0);
    sensitive << ( dct_2d_U0_in_block_address0 );

    SC_METHOD(thread_buf_2d_in_t_address1);
    sensitive << ( dct_2d_U0_in_block_address1 );

    SC_METHOD(thread_buf_2d_in_t_ce0);
    sensitive << ( dct_2d_U0_in_block_ce0 );

    SC_METHOD(thread_buf_2d_in_t_ce1);
    sensitive << ( dct_2d_U0_in_block_ce1 );

    SC_METHOD(thread_buf_2d_in_t_read);
    sensitive << ( dct_2d_U0_ap_ready );

    SC_METHOD(thread_buf_2d_out_U_ap_dummy_ce);

    SC_METHOD(thread_buf_2d_out_i_address0);
    sensitive << ( dct_2d_U0_out_block_address0 );

    SC_METHOD(thread_buf_2d_out_i_ce0);
    sensitive << ( dct_2d_U0_out_block_ce0 );

    SC_METHOD(thread_buf_2d_out_i_d0);
    sensitive << ( dct_2d_U0_out_block_d0 );

    SC_METHOD(thread_buf_2d_out_i_we0);
    sensitive << ( dct_2d_U0_out_block_we0 );

    SC_METHOD(thread_buf_2d_out_i_write);
    sensitive << ( dct_2d_U0_ap_done );

    SC_METHOD(thread_buf_2d_out_t_address0);
    sensitive << ( write_data_U0_buf_r_address0 );

    SC_METHOD(thread_buf_2d_out_t_ce0);
    sensitive << ( write_data_U0_buf_r_ce0 );

    SC_METHOD(thread_buf_2d_out_t_read);
    sensitive << ( write_data_U0_ap_ready );

    SC_METHOD(thread_dct_2d_U0_ap_continue);
    sensitive << ( dct_2d_U0_out_block_pipo_status );

    SC_METHOD(thread_dct_2d_U0_ap_start);
    sensitive << ( buf_2d_in_t_empty_n );

    SC_METHOD(thread_dct_2d_U0_in_block_q0);
    sensitive << ( buf_2d_in_t_q0 );

    SC_METHOD(thread_dct_2d_U0_in_block_q1);
    sensitive << ( buf_2d_in_t_q1 );

    SC_METHOD(thread_dct_2d_U0_out_block_pipo_status);
    sensitive << ( buf_2d_out_i_full_n );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( read_data_U0_input_r_address0 );

    SC_METHOD(thread_input_r_address1);

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( read_data_U0_input_r_ce0 );

    SC_METHOD(thread_input_r_ce1);

    SC_METHOD(thread_input_r_d0);

    SC_METHOD(thread_input_r_d1);

    SC_METHOD(thread_input_r_we0);

    SC_METHOD(thread_input_r_we1);

    SC_METHOD(thread_output_r_address0);
    sensitive << ( write_data_U0_output_r_address0 );

    SC_METHOD(thread_output_r_address1);

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( write_data_U0_output_r_ce0 );

    SC_METHOD(thread_output_r_ce1);

    SC_METHOD(thread_output_r_d0);
    sensitive << ( write_data_U0_output_r_d0 );

    SC_METHOD(thread_output_r_d1);

    SC_METHOD(thread_output_r_we0);
    sensitive << ( write_data_U0_output_r_we0 );

    SC_METHOD(thread_output_r_we1);

    SC_METHOD(thread_read_data_U0_ap_continue);
    sensitive << ( read_data_U0_buf_r_pipo_status );

    SC_METHOD(thread_read_data_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_read_data_U0_buf_r_pipo_status);
    sensitive << ( buf_2d_in_i_full_n );

    SC_METHOD(thread_read_data_U0_input_r_q0);
    sensitive << ( input_r_q0 );

    SC_METHOD(thread_write_data_U0_ap_continue);
    sensitive << ( ap_sig_hs_continue );

    SC_METHOD(thread_write_data_U0_ap_start);
    sensitive << ( buf_2d_out_t_empty_n );

    SC_METHOD(thread_write_data_U0_buf_r_q0);
    sensitive << ( buf_2d_out_t_q0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_reg_procdone_read_data_U0 = SC_LOGIC_0;
    ap_reg_procdone_dct_2d_U0 = SC_LOGIC_0;
    ap_reg_procdone_write_data_U0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dct_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    const char* dump_vcd = std::getenv("AP_WRITE_VCD");
    if (dump_vcd && string(dump_vcd) == "1" ) {
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_d0, "(port)input_r_d0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, input_r_we0, "(port)input_r_we0");
    sc_trace(mVcdFile, input_r_address1, "(port)input_r_address1");
    sc_trace(mVcdFile, input_r_ce1, "(port)input_r_ce1");
    sc_trace(mVcdFile, input_r_d1, "(port)input_r_d1");
    sc_trace(mVcdFile, input_r_q1, "(port)input_r_q1");
    sc_trace(mVcdFile, input_r_we1, "(port)input_r_we1");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_address1, "(port)output_r_address1");
    sc_trace(mVcdFile, output_r_ce1, "(port)output_r_ce1");
    sc_trace(mVcdFile, output_r_d1, "(port)output_r_d1");
    sc_trace(mVcdFile, output_r_q1, "(port)output_r_q1");
    sc_trace(mVcdFile, output_r_we1, "(port)output_r_we1");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, read_data_U0_ap_start, "read_data_U0_ap_start");
    sc_trace(mVcdFile, read_data_U0_ap_done, "read_data_U0_ap_done");
    sc_trace(mVcdFile, read_data_U0_ap_continue, "read_data_U0_ap_continue");
    sc_trace(mVcdFile, read_data_U0_ap_idle, "read_data_U0_ap_idle");
    sc_trace(mVcdFile, read_data_U0_ap_ready, "read_data_U0_ap_ready");
    sc_trace(mVcdFile, read_data_U0_input_r_address0, "read_data_U0_input_r_address0");
    sc_trace(mVcdFile, read_data_U0_input_r_ce0, "read_data_U0_input_r_ce0");
    sc_trace(mVcdFile, read_data_U0_input_r_q0, "read_data_U0_input_r_q0");
    sc_trace(mVcdFile, read_data_U0_buf_r_address0, "read_data_U0_buf_r_address0");
    sc_trace(mVcdFile, read_data_U0_buf_r_ce0, "read_data_U0_buf_r_ce0");
    sc_trace(mVcdFile, read_data_U0_buf_r_we0, "read_data_U0_buf_r_we0");
    sc_trace(mVcdFile, read_data_U0_buf_r_d0, "read_data_U0_buf_r_d0");
    sc_trace(mVcdFile, ap_chn_write_read_data_U0_buf_2d_in, "ap_chn_write_read_data_U0_buf_2d_in");
    sc_trace(mVcdFile, read_data_U0_buf_r_pipo_status, "read_data_U0_buf_r_pipo_status");
    sc_trace(mVcdFile, dct_2d_U0_ap_start, "dct_2d_U0_ap_start");
    sc_trace(mVcdFile, dct_2d_U0_ap_done, "dct_2d_U0_ap_done");
    sc_trace(mVcdFile, dct_2d_U0_ap_continue, "dct_2d_U0_ap_continue");
    sc_trace(mVcdFile, dct_2d_U0_ap_idle, "dct_2d_U0_ap_idle");
    sc_trace(mVcdFile, dct_2d_U0_ap_ready, "dct_2d_U0_ap_ready");
    sc_trace(mVcdFile, dct_2d_U0_in_block_address0, "dct_2d_U0_in_block_address0");
    sc_trace(mVcdFile, dct_2d_U0_in_block_ce0, "dct_2d_U0_in_block_ce0");
    sc_trace(mVcdFile, dct_2d_U0_in_block_q0, "dct_2d_U0_in_block_q0");
    sc_trace(mVcdFile, dct_2d_U0_in_block_address1, "dct_2d_U0_in_block_address1");
    sc_trace(mVcdFile, dct_2d_U0_in_block_ce1, "dct_2d_U0_in_block_ce1");
    sc_trace(mVcdFile, dct_2d_U0_in_block_q1, "dct_2d_U0_in_block_q1");
    sc_trace(mVcdFile, dct_2d_U0_out_block_address0, "dct_2d_U0_out_block_address0");
    sc_trace(mVcdFile, dct_2d_U0_out_block_ce0, "dct_2d_U0_out_block_ce0");
    sc_trace(mVcdFile, dct_2d_U0_out_block_we0, "dct_2d_U0_out_block_we0");
    sc_trace(mVcdFile, dct_2d_U0_out_block_d0, "dct_2d_U0_out_block_d0");
    sc_trace(mVcdFile, ap_chn_write_dct_2d_U0_buf_2d_out, "ap_chn_write_dct_2d_U0_buf_2d_out");
    sc_trace(mVcdFile, dct_2d_U0_out_block_pipo_status, "dct_2d_U0_out_block_pipo_status");
    sc_trace(mVcdFile, write_data_U0_ap_start, "write_data_U0_ap_start");
    sc_trace(mVcdFile, write_data_U0_ap_done, "write_data_U0_ap_done");
    sc_trace(mVcdFile, write_data_U0_ap_continue, "write_data_U0_ap_continue");
    sc_trace(mVcdFile, write_data_U0_ap_idle, "write_data_U0_ap_idle");
    sc_trace(mVcdFile, write_data_U0_ap_ready, "write_data_U0_ap_ready");
    sc_trace(mVcdFile, write_data_U0_buf_r_address0, "write_data_U0_buf_r_address0");
    sc_trace(mVcdFile, write_data_U0_buf_r_ce0, "write_data_U0_buf_r_ce0");
    sc_trace(mVcdFile, write_data_U0_buf_r_q0, "write_data_U0_buf_r_q0");
    sc_trace(mVcdFile, write_data_U0_output_r_address0, "write_data_U0_output_r_address0");
    sc_trace(mVcdFile, write_data_U0_output_r_ce0, "write_data_U0_output_r_ce0");
    sc_trace(mVcdFile, write_data_U0_output_r_we0, "write_data_U0_output_r_we0");
    sc_trace(mVcdFile, write_data_U0_output_r_d0, "write_data_U0_output_r_d0");
    sc_trace(mVcdFile, ap_sig_hs_continue, "ap_sig_hs_continue");
    sc_trace(mVcdFile, buf_2d_in_i_address0, "buf_2d_in_i_address0");
    sc_trace(mVcdFile, buf_2d_in_i_ce0, "buf_2d_in_i_ce0");
    sc_trace(mVcdFile, buf_2d_in_i_we0, "buf_2d_in_i_we0");
    sc_trace(mVcdFile, buf_2d_in_i_d0, "buf_2d_in_i_d0");
    sc_trace(mVcdFile, buf_2d_in_i_q0, "buf_2d_in_i_q0");
    sc_trace(mVcdFile, buf_2d_in_i_address1, "buf_2d_in_i_address1");
    sc_trace(mVcdFile, buf_2d_in_i_ce1, "buf_2d_in_i_ce1");
    sc_trace(mVcdFile, buf_2d_in_i_q1, "buf_2d_in_i_q1");
    sc_trace(mVcdFile, buf_2d_in_t_address0, "buf_2d_in_t_address0");
    sc_trace(mVcdFile, buf_2d_in_t_ce0, "buf_2d_in_t_ce0");
    sc_trace(mVcdFile, buf_2d_in_t_we0, "buf_2d_in_t_we0");
    sc_trace(mVcdFile, buf_2d_in_t_d0, "buf_2d_in_t_d0");
    sc_trace(mVcdFile, buf_2d_in_t_q0, "buf_2d_in_t_q0");
    sc_trace(mVcdFile, buf_2d_in_t_address1, "buf_2d_in_t_address1");
    sc_trace(mVcdFile, buf_2d_in_t_ce1, "buf_2d_in_t_ce1");
    sc_trace(mVcdFile, buf_2d_in_t_q1, "buf_2d_in_t_q1");
    sc_trace(mVcdFile, buf_2d_in_U_ap_dummy_ce, "buf_2d_in_U_ap_dummy_ce");
    sc_trace(mVcdFile, buf_2d_in_i_full_n, "buf_2d_in_i_full_n");
    sc_trace(mVcdFile, buf_2d_in_i_write, "buf_2d_in_i_write");
    sc_trace(mVcdFile, buf_2d_in_t_empty_n, "buf_2d_in_t_empty_n");
    sc_trace(mVcdFile, buf_2d_in_t_read, "buf_2d_in_t_read");
    sc_trace(mVcdFile, buf_2d_out_i_address0, "buf_2d_out_i_address0");
    sc_trace(mVcdFile, buf_2d_out_i_ce0, "buf_2d_out_i_ce0");
    sc_trace(mVcdFile, buf_2d_out_i_we0, "buf_2d_out_i_we0");
    sc_trace(mVcdFile, buf_2d_out_i_d0, "buf_2d_out_i_d0");
    sc_trace(mVcdFile, buf_2d_out_i_q0, "buf_2d_out_i_q0");
    sc_trace(mVcdFile, buf_2d_out_t_address0, "buf_2d_out_t_address0");
    sc_trace(mVcdFile, buf_2d_out_t_ce0, "buf_2d_out_t_ce0");
    sc_trace(mVcdFile, buf_2d_out_t_we0, "buf_2d_out_t_we0");
    sc_trace(mVcdFile, buf_2d_out_t_d0, "buf_2d_out_t_d0");
    sc_trace(mVcdFile, buf_2d_out_t_q0, "buf_2d_out_t_q0");
    sc_trace(mVcdFile, buf_2d_out_U_ap_dummy_ce, "buf_2d_out_U_ap_dummy_ce");
    sc_trace(mVcdFile, buf_2d_out_i_full_n, "buf_2d_out_i_full_n");
    sc_trace(mVcdFile, buf_2d_out_i_write, "buf_2d_out_i_write");
    sc_trace(mVcdFile, buf_2d_out_t_empty_n, "buf_2d_out_t_empty_n");
    sc_trace(mVcdFile, buf_2d_out_t_read, "buf_2d_out_t_read");
    sc_trace(mVcdFile, ap_reg_procdone_read_data_U0, "ap_reg_procdone_read_data_U0");
    sc_trace(mVcdFile, ap_sig_hs_done, "ap_sig_hs_done");
    sc_trace(mVcdFile, ap_reg_procdone_dct_2d_U0, "ap_reg_procdone_dct_2d_U0");
    sc_trace(mVcdFile, ap_reg_procdone_write_data_U0, "ap_reg_procdone_write_data_U0");
    sc_trace(mVcdFile, ap_CS, "ap_CS");
    sc_trace(mVcdFile, ap_sig_top_allready, "ap_sig_top_allready");

    }
    mHdltvinHandle.open("dct.hdltvin.dat");
    mHdltvoutHandle.open("dct.hdltvout.dat");
}

dct::~dct() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete read_data_U0;
    delete dct_2d_U0;
    delete write_data_U0;
    delete buf_2d_in_U;
    delete buf_2d_out_U;
}

void dct::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_procdone_dct_2d_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_dct_2d_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, dct_2d_U0_ap_done.read())) {
            ap_reg_procdone_dct_2d_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_procdone_read_data_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_read_data_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(read_data_U0_ap_done.read(), ap_const_logic_1)) {
            ap_reg_procdone_read_data_U0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_procdone_write_data_U0 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_hs_done.read())) {
            ap_reg_procdone_write_data_U0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, write_data_U0_ap_done.read())) {
            ap_reg_procdone_write_data_U0 = ap_const_logic_1;
        }
    }
}

void dct::thread_ap_chn_write_dct_2d_U0_buf_2d_out() {
    ap_chn_write_dct_2d_U0_buf_2d_out = dct_2d_U0_ap_done.read();
}

void dct::thread_ap_chn_write_read_data_U0_buf_2d_in() {
    ap_chn_write_read_data_U0_buf_2d_in = read_data_U0_ap_done.read();
}

void dct::thread_ap_done() {
    ap_done = ap_sig_hs_done.read();
}

void dct::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(read_data_U0_ap_idle.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, dct_2d_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, write_data_U0_ap_idle.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, buf_2d_in_t_empty_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, buf_2d_out_t_empty_n.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dct::thread_ap_ready() {
    ap_ready = ap_sig_top_allready.read();
}

void dct::thread_ap_sig_hs_continue() {
    ap_sig_hs_continue = ap_const_logic_1;
}

void dct::thread_ap_sig_hs_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, write_data_U0_ap_done.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_procdone_write_data_U0.read()))) {
        ap_sig_hs_done = ap_const_logic_1;
    } else {
        ap_sig_hs_done = ap_const_logic_0;
    }
}

void dct::thread_ap_sig_top_allready() {
    ap_sig_top_allready = read_data_U0_ap_ready.read();
}

void dct::thread_buf_2d_in_U_ap_dummy_ce() {
    buf_2d_in_U_ap_dummy_ce = ap_const_logic_1;
}

void dct::thread_buf_2d_in_i_address0() {
    buf_2d_in_i_address0 = read_data_U0_buf_r_address0.read();
}

void dct::thread_buf_2d_in_i_ce0() {
    buf_2d_in_i_ce0 = read_data_U0_buf_r_ce0.read();
}

void dct::thread_buf_2d_in_i_d0() {
    buf_2d_in_i_d0 = read_data_U0_buf_r_d0.read();
}

void dct::thread_buf_2d_in_i_we0() {
    buf_2d_in_i_we0 = read_data_U0_buf_r_we0.read();
}

void dct::thread_buf_2d_in_i_write() {
    buf_2d_in_i_write = read_data_U0_ap_done.read();
}

void dct::thread_buf_2d_in_t_address0() {
    buf_2d_in_t_address0 = dct_2d_U0_in_block_address0.read();
}

void dct::thread_buf_2d_in_t_address1() {
    buf_2d_in_t_address1 = dct_2d_U0_in_block_address1.read();
}

void dct::thread_buf_2d_in_t_ce0() {
    buf_2d_in_t_ce0 = dct_2d_U0_in_block_ce0.read();
}

void dct::thread_buf_2d_in_t_ce1() {
    buf_2d_in_t_ce1 = dct_2d_U0_in_block_ce1.read();
}

void dct::thread_buf_2d_in_t_read() {
    buf_2d_in_t_read = dct_2d_U0_ap_ready.read();
}

void dct::thread_buf_2d_out_U_ap_dummy_ce() {
    buf_2d_out_U_ap_dummy_ce = ap_const_logic_1;
}

void dct::thread_buf_2d_out_i_address0() {
    buf_2d_out_i_address0 = dct_2d_U0_out_block_address0.read();
}

void dct::thread_buf_2d_out_i_ce0() {
    buf_2d_out_i_ce0 = dct_2d_U0_out_block_ce0.read();
}

void dct::thread_buf_2d_out_i_d0() {
    buf_2d_out_i_d0 = dct_2d_U0_out_block_d0.read();
}

void dct::thread_buf_2d_out_i_we0() {
    buf_2d_out_i_we0 = dct_2d_U0_out_block_we0.read();
}

void dct::thread_buf_2d_out_i_write() {
    buf_2d_out_i_write = dct_2d_U0_ap_done.read();
}

void dct::thread_buf_2d_out_t_address0() {
    buf_2d_out_t_address0 = write_data_U0_buf_r_address0.read();
}

void dct::thread_buf_2d_out_t_ce0() {
    buf_2d_out_t_ce0 = write_data_U0_buf_r_ce0.read();
}

void dct::thread_buf_2d_out_t_read() {
    buf_2d_out_t_read = write_data_U0_ap_ready.read();
}

void dct::thread_dct_2d_U0_ap_continue() {
    dct_2d_U0_ap_continue = dct_2d_U0_out_block_pipo_status.read();
}

void dct::thread_dct_2d_U0_ap_start() {
    dct_2d_U0_ap_start = buf_2d_in_t_empty_n.read();
}

void dct::thread_dct_2d_U0_in_block_q0() {
    dct_2d_U0_in_block_q0 = buf_2d_in_t_q0.read();
}

void dct::thread_dct_2d_U0_in_block_q1() {
    dct_2d_U0_in_block_q1 = buf_2d_in_t_q1.read();
}

void dct::thread_dct_2d_U0_out_block_pipo_status() {
    dct_2d_U0_out_block_pipo_status = buf_2d_out_i_full_n.read();
}

void dct::thread_input_r_address0() {
    input_r_address0 = read_data_U0_input_r_address0.read();
}

void dct::thread_input_r_address1() {
    input_r_address1 = ap_const_lv6_0;
}

void dct::thread_input_r_ce0() {
    input_r_ce0 = read_data_U0_input_r_ce0.read();
}

void dct::thread_input_r_ce1() {
    input_r_ce1 = ap_const_logic_0;
}

void dct::thread_input_r_d0() {
    input_r_d0 = ap_const_lv16_0;
}

void dct::thread_input_r_d1() {
    input_r_d1 = ap_const_lv16_0;
}

void dct::thread_input_r_we0() {
    input_r_we0 = ap_const_logic_0;
}

void dct::thread_input_r_we1() {
    input_r_we1 = ap_const_logic_0;
}

void dct::thread_output_r_address0() {
    output_r_address0 = write_data_U0_output_r_address0.read();
}

void dct::thread_output_r_address1() {
    output_r_address1 = ap_const_lv6_0;
}

void dct::thread_output_r_ce0() {
    output_r_ce0 = write_data_U0_output_r_ce0.read();
}

void dct::thread_output_r_ce1() {
    output_r_ce1 = ap_const_logic_0;
}

void dct::thread_output_r_d0() {
    output_r_d0 = write_data_U0_output_r_d0.read();
}

void dct::thread_output_r_d1() {
    output_r_d1 = ap_const_lv16_0;
}

void dct::thread_output_r_we0() {
    output_r_we0 = write_data_U0_output_r_we0.read();
}

void dct::thread_output_r_we1() {
    output_r_we1 = ap_const_logic_0;
}

void dct::thread_read_data_U0_ap_continue() {
    read_data_U0_ap_continue = read_data_U0_buf_r_pipo_status.read();
}

void dct::thread_read_data_U0_ap_start() {
    read_data_U0_ap_start = ap_start.read();
}

void dct::thread_read_data_U0_buf_r_pipo_status() {
    read_data_U0_buf_r_pipo_status = buf_2d_in_i_full_n.read();
}

void dct::thread_read_data_U0_input_r_q0() {
    read_data_U0_input_r_q0 = input_r_q0.read();
}

void dct::thread_write_data_U0_ap_continue() {
    write_data_U0_ap_continue = ap_sig_hs_continue.read();
}

void dct::thread_write_data_U0_ap_start() {
    write_data_U0_ap_start = buf_2d_out_t_empty_n.read();
}

void dct::thread_write_data_U0_buf_r_q0() {
    write_data_U0_buf_r_q0 = buf_2d_out_t_q0.read();
}

void dct::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvoutHandle << mComma << "{"  <<  " \"input_r_address0\" :  \"" << input_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce0\" :  \"" << input_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_d0\" :  \"" << input_r_d0.read() << "\" ";
        mHdltvinHandle << mComma << "{"  <<  " \"input_r_q0\" :  \"" << input_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_we0\" :  \"" << input_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_address1\" :  \"" << input_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce1\" :  \"" << input_r_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_d1\" :  \"" << input_r_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_q1\" :  \"" << input_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_we1\" :  \"" << input_r_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address0\" :  \"" << output_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce0\" :  \"" << output_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d0\" :  \"" << output_r_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_r_q0\" :  \"" << output_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we0\" :  \"" << output_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address1\" :  \"" << output_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce1\" :  \"" << output_r_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d1\" :  \"" << output_r_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_r_q1\" :  \"" << output_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we1\" :  \"" << output_r_we1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}


// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_block_address0,
        in_block_ce0,
        in_block_q0,
        out_block_address0,
        out_block_ce0,
        out_block_we0,
        out_block_d0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] in_block_address0;
output   in_block_ce0;
input  [15:0] in_block_q0;
output  [5:0] out_block_address0;
output   out_block_ce0;
output   out_block_we0;
output  [15:0] out_block_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_block_ce0;
reg out_block_ce0;
reg out_block_we0;
reg   [3:0] ap_CS_fsm = 4'b0000;
wire   [3:0] i_4_fu_197_p2;
reg   [3:0] i_4_reg_374;
wire   [3:0] j_2_fu_209_p2;
reg   [3:0] j_2_reg_382;
wire   [3:0] i_6_fu_221_p2;
reg   [3:0] i_6_reg_390;
wire   [0:0] exitcond5_fu_215_p2;
wire   [3:0] i_5_fu_287_p2;
reg   [3:0] i_5_reg_403;
wire   [3:0] j_3_fu_299_p2;
reg   [3:0] j_3_reg_411;
wire   [3:0] i_7_fu_311_p2;
reg   [3:0] i_7_reg_419;
wire   [0:0] exitcond_fu_305_p2;
reg   [5:0] row_outbuf_address0;
reg    row_outbuf_ce0;
reg    row_outbuf_we0;
wire   [15:0] row_outbuf_d0;
wire   [15:0] row_outbuf_q0;
reg   [5:0] col_outbuf_address0;
reg    col_outbuf_ce0;
reg    col_outbuf_we0;
wire   [15:0] col_outbuf_d0;
wire   [15:0] col_outbuf_q0;
reg   [5:0] col_inbuf_address0;
reg    col_inbuf_ce0;
reg    col_inbuf_we0;
wire   [15:0] col_inbuf_d0;
wire   [15:0] col_inbuf_q0;
wire    grp_dct_1d_fu_176_ap_start;
wire    grp_dct_1d_fu_176_ap_done;
wire    grp_dct_1d_fu_176_ap_idle;
wire    grp_dct_1d_fu_176_ap_ready;
wire   [5:0] grp_dct_1d_fu_176_src_address0;
wire    grp_dct_1d_fu_176_src_ce0;
reg   [15:0] grp_dct_1d_fu_176_src_q0;
reg   [3:0] grp_dct_1d_fu_176_tmp_1;
wire   [5:0] grp_dct_1d_fu_176_dst_address0;
wire    grp_dct_1d_fu_176_dst_ce0;
wire    grp_dct_1d_fu_176_dst_we0;
wire   [15:0] grp_dct_1d_fu_176_dst_d0;
reg   [3:0] grp_dct_1d_fu_176_tmp_11;
reg   [3:0] i_reg_103;
reg   [3:0] j_reg_115;
wire   [0:0] exitcond7_fu_191_p2;
reg   [3:0] i_1_reg_127;
wire   [0:0] exitcond6_fu_203_p2;
reg   [3:0] i_2_reg_139;
reg   [3:0] j_1_reg_151;
wire   [0:0] exitcond4_fu_281_p2;
reg   [3:0] i_3_reg_163;
wire   [0:0] exitcond3_fu_293_p2;
reg    grp_dct_1d_fu_176_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_7_fu_249_p1;
wire   [63:0] tmp_s_fu_276_p1;
wire   [63:0] tmp_2_fu_339_p1;
wire   [63:0] tmp_4_fu_366_p1;
wire   [6:0] tmp_fu_231_p3;
wire   [7:0] p_addr_cast_fu_239_p1;
wire   [7:0] tmp_trn_cast_fu_227_p1;
wire   [7:0] p_addr1_fu_243_p2;
wire   [6:0] tmp_9_fu_258_p3;
wire   [7:0] p_addr6_cast_fu_266_p1;
wire   [7:0] tmp_2_trn_cast_fu_254_p1;
wire   [7:0] p_addr7_fu_270_p2;
wire   [6:0] tmp_1_fu_321_p3;
wire   [7:0] p_addr2_cast_fu_329_p1;
wire   [7:0] tmp_3_trn_cast_fu_317_p1;
wire   [7:0] p_addr3_fu_333_p2;
wire   [6:0] tmp_3_fu_348_p3;
wire   [7:0] p_addr4_cast_fu_356_p1;
wire   [7:0] tmp_4_trn_cast_fu_344_p1;
wire   [7:0] p_addr5_fu_360_p2;
reg   [3:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b0000;
parameter    ap_ST_st2_fsm_1 = 4'b1;
parameter    ap_ST_st3_fsm_2 = 4'b10;
parameter    ap_ST_st4_fsm_3 = 4'b11;
parameter    ap_ST_st5_fsm_4 = 4'b100;
parameter    ap_ST_st6_fsm_5 = 4'b101;
parameter    ap_ST_st7_fsm_6 = 4'b110;
parameter    ap_ST_st8_fsm_7 = 4'b111;
parameter    ap_ST_st9_fsm_8 = 4'b1000;
parameter    ap_ST_st10_fsm_9 = 4'b1001;
parameter    ap_ST_st11_fsm_10 = 4'b1010;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_true = 1'b1;


dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
row_outbuf_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( row_outbuf_address0 ),
    .ce0( row_outbuf_ce0 ),
    .we0( row_outbuf_we0 ),
    .d0( row_outbuf_d0 ),
    .q0( row_outbuf_q0 )
);

dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
col_outbuf_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( col_outbuf_address0 ),
    .ce0( col_outbuf_ce0 ),
    .we0( col_outbuf_we0 ),
    .d0( col_outbuf_d0 ),
    .q0( col_outbuf_q0 )
);

dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
col_inbuf_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( col_inbuf_address0 ),
    .ce0( col_inbuf_ce0 ),
    .we0( col_inbuf_we0 ),
    .d0( col_inbuf_d0 ),
    .q0( col_inbuf_q0 )
);

dct_1d grp_dct_1d_fu_176(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_dct_1d_fu_176_ap_start ),
    .ap_done( grp_dct_1d_fu_176_ap_done ),
    .ap_idle( grp_dct_1d_fu_176_ap_idle ),
    .ap_ready( grp_dct_1d_fu_176_ap_ready ),
    .src_address0( grp_dct_1d_fu_176_src_address0 ),
    .src_ce0( grp_dct_1d_fu_176_src_ce0 ),
    .src_q0( grp_dct_1d_fu_176_src_q0 ),
    .tmp_1( grp_dct_1d_fu_176_tmp_1 ),
    .dst_address0( grp_dct_1d_fu_176_dst_address0 ),
    .dst_ce0( grp_dct_1d_fu_176_dst_ce0 ),
    .dst_we0( grp_dct_1d_fu_176_dst_we0 ),
    .dst_d0( grp_dct_1d_fu_176_dst_d0 ),
    .tmp_11( grp_dct_1d_fu_176_tmp_11 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_dct_1d_fu_176_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_dct_1d_fu_176_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_dct_1d_fu_176_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond7_fu_191_p2)) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond4_fu_281_p2)))) begin
            grp_dct_1d_fu_176_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_dct_1d_fu_176_ap_ready)) begin
            grp_dct_1d_fu_176_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        i_1_reg_127 <= i_6_reg_390;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond6_fu_203_p2))) begin
        i_1_reg_127 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond6_fu_203_p2))) begin
        i_2_reg_139 <= ap_const_lv4_0;
    end else if ((~(ap_const_logic_0 == grp_dct_1d_fu_176_ap_done) & (ap_ST_st8_fsm_7 == ap_CS_fsm))) begin
        i_2_reg_139 <= i_5_reg_403;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        i_3_reg_163 <= i_7_reg_419;
    end else if (((ap_ST_st9_fsm_8 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond3_fu_293_p2))) begin
        i_3_reg_163 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_dct_1d_fu_176_ap_done))) begin
        i_reg_103 <= i_4_reg_374;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_103 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond4_fu_281_p2))) begin
        j_1_reg_151 <= ap_const_lv4_0;
    end else if (((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_305_p2))) begin
        j_1_reg_151 <= j_3_reg_411;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond7_fu_191_p2))) begin
        j_reg_115 <= ap_const_lv4_0;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(exitcond5_fu_215_p2 == ap_const_lv1_0))) begin
        j_reg_115 <= j_2_reg_382;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        i_4_reg_374 <= i_4_fu_197_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        i_5_reg_403 <= i_5_fu_287_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        i_6_reg_390 <= i_6_fu_221_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        i_7_reg_419 <= i_7_fu_311_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        j_2_reg_382 <= j_2_fu_209_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        j_3_reg_411 <= j_3_fu_299_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm or exitcond3_fu_293_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond3_fu_293_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or exitcond3_fu_293_p2)
begin
    if (((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond3_fu_293_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// col_inbuf_address0 assign process. ///
always @ (ap_CS_fsm or grp_dct_1d_fu_176_src_address0 or tmp_s_fu_276_p1)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        col_inbuf_address0 = tmp_s_fu_276_p1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        col_inbuf_address0 = grp_dct_1d_fu_176_src_address0;
    end else begin
        col_inbuf_address0 = 'bx;
    end
end

/// col_inbuf_ce0 assign process. ///
always @ (ap_CS_fsm or grp_dct_1d_fu_176_src_ce0)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        col_inbuf_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        col_inbuf_ce0 = grp_dct_1d_fu_176_src_ce0;
    end else begin
        col_inbuf_ce0 = ap_const_logic_0;
    end
end

/// col_inbuf_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        col_inbuf_we0 = ap_const_logic_1;
    end else begin
        col_inbuf_we0 = ap_const_logic_0;
    end
end

/// col_outbuf_address0 assign process. ///
always @ (ap_CS_fsm or grp_dct_1d_fu_176_dst_address0 or tmp_2_fu_339_p1)
begin
    if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        col_outbuf_address0 = tmp_2_fu_339_p1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        col_outbuf_address0 = grp_dct_1d_fu_176_dst_address0;
    end else begin
        col_outbuf_address0 = 'bx;
    end
end

/// col_outbuf_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond_fu_305_p2 or grp_dct_1d_fu_176_dst_ce0)
begin
    if (((ap_ST_st10_fsm_9 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_305_p2))) begin
        col_outbuf_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        col_outbuf_ce0 = grp_dct_1d_fu_176_dst_ce0;
    end else begin
        col_outbuf_ce0 = ap_const_logic_0;
    end
end

/// col_outbuf_we0 assign process. ///
always @ (ap_CS_fsm or grp_dct_1d_fu_176_dst_we0)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        col_outbuf_we0 = grp_dct_1d_fu_176_dst_we0;
    end else begin
        col_outbuf_we0 = ap_const_logic_0;
    end
end

/// grp_dct_1d_fu_176_src_q0 assign process. ///
always @ (ap_CS_fsm or in_block_q0 or col_inbuf_q0)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        grp_dct_1d_fu_176_src_q0 = col_inbuf_q0;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        grp_dct_1d_fu_176_src_q0 = in_block_q0;
    end else begin
        grp_dct_1d_fu_176_src_q0 = 'bx;
    end
end

/// grp_dct_1d_fu_176_tmp_1 assign process. ///
always @ (ap_CS_fsm or i_reg_103 or i_2_reg_139)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        grp_dct_1d_fu_176_tmp_1 = i_2_reg_139;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        grp_dct_1d_fu_176_tmp_1 = i_reg_103;
    end else begin
        grp_dct_1d_fu_176_tmp_1 = 'bx;
    end
end

/// grp_dct_1d_fu_176_tmp_11 assign process. ///
always @ (ap_CS_fsm or i_reg_103 or i_2_reg_139)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        grp_dct_1d_fu_176_tmp_11 = i_2_reg_139;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        grp_dct_1d_fu_176_tmp_11 = i_reg_103;
    end else begin
        grp_dct_1d_fu_176_tmp_11 = 'bx;
    end
end

/// in_block_ce0 assign process. ///
always @ (ap_CS_fsm or grp_dct_1d_fu_176_src_ce0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        in_block_ce0 = grp_dct_1d_fu_176_src_ce0;
    end else begin
        in_block_ce0 = ap_const_logic_0;
    end
end

/// out_block_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        out_block_ce0 = ap_const_logic_1;
    end else begin
        out_block_ce0 = ap_const_logic_0;
    end
end

/// out_block_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        out_block_we0 = ap_const_logic_1;
    end else begin
        out_block_we0 = ap_const_logic_0;
    end
end

/// row_outbuf_address0 assign process. ///
always @ (ap_CS_fsm or grp_dct_1d_fu_176_dst_address0 or tmp_7_fu_249_p1)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        row_outbuf_address0 = tmp_7_fu_249_p1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        row_outbuf_address0 = grp_dct_1d_fu_176_dst_address0;
    end else begin
        row_outbuf_address0 = 'bx;
    end
end

/// row_outbuf_ce0 assign process. ///
always @ (ap_CS_fsm or exitcond5_fu_215_p2 or grp_dct_1d_fu_176_dst_ce0)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (exitcond5_fu_215_p2 == ap_const_lv1_0))) begin
        row_outbuf_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        row_outbuf_ce0 = grp_dct_1d_fu_176_dst_ce0;
    end else begin
        row_outbuf_ce0 = ap_const_logic_0;
    end
end

/// row_outbuf_we0 assign process. ///
always @ (ap_CS_fsm or grp_dct_1d_fu_176_dst_we0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        row_outbuf_we0 = grp_dct_1d_fu_176_dst_we0;
    end else begin
        row_outbuf_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond5_fu_215_p2 or exitcond_fu_305_p2 or grp_dct_1d_fu_176_ap_done or exitcond7_fu_191_p2 or exitcond6_fu_203_p2 or exitcond4_fu_281_p2 or exitcond3_fu_293_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~(ap_const_lv1_0 == exitcond7_fu_191_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        ap_ST_st3_fsm_2 : 
            if (~(ap_const_logic_0 == grp_dct_1d_fu_176_ap_done)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        ap_ST_st4_fsm_3 : 
            if ((ap_const_lv1_0 == exitcond6_fu_203_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        ap_ST_st5_fsm_4 : 
            if (~(exitcond5_fu_215_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st7_fsm_6 : 
            if (~(ap_const_lv1_0 == exitcond4_fu_281_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        ap_ST_st8_fsm_7 : 
            if (~(ap_const_logic_0 == grp_dct_1d_fu_176_ap_done)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        ap_ST_st9_fsm_8 : 
            if (~(ap_const_lv1_0 == exitcond3_fu_293_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        ap_ST_st10_fsm_9 : 
            if (~(ap_const_lv1_0 == exitcond_fu_305_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        ap_ST_st11_fsm_10 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign col_inbuf_d0 = row_outbuf_q0;
assign col_outbuf_d0 = grp_dct_1d_fu_176_dst_d0;
assign exitcond3_fu_293_p2 = (j_1_reg_151 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond4_fu_281_p2 = (i_2_reg_139 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond5_fu_215_p2 = (i_1_reg_127 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond6_fu_203_p2 = (j_reg_115 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond7_fu_191_p2 = (i_reg_103 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond_fu_305_p2 = (i_3_reg_163 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_dct_1d_fu_176_ap_start = grp_dct_1d_fu_176_ap_start_ap_start_reg;
assign i_4_fu_197_p2 = (i_reg_103 + ap_const_lv4_1);
assign i_5_fu_287_p2 = (i_2_reg_139 + ap_const_lv4_1);
assign i_6_fu_221_p2 = (i_1_reg_127 + ap_const_lv4_1);
assign i_7_fu_311_p2 = (i_3_reg_163 + ap_const_lv4_1);
assign in_block_address0 = grp_dct_1d_fu_176_src_address0;
assign j_2_fu_209_p2 = (j_reg_115 + ap_const_lv4_1);
assign j_3_fu_299_p2 = (j_1_reg_151 + ap_const_lv4_1);
assign out_block_address0 = tmp_4_fu_366_p1;
assign out_block_d0 = col_outbuf_q0;
assign p_addr1_fu_243_p2 = (p_addr_cast_fu_239_p1 + tmp_trn_cast_fu_227_p1);
assign p_addr2_cast_fu_329_p1 = $unsigned(tmp_1_fu_321_p3);
assign p_addr3_fu_333_p2 = (p_addr2_cast_fu_329_p1 + tmp_3_trn_cast_fu_317_p1);
assign p_addr4_cast_fu_356_p1 = $unsigned(tmp_3_fu_348_p3);
assign p_addr5_fu_360_p2 = (p_addr4_cast_fu_356_p1 + tmp_4_trn_cast_fu_344_p1);
assign p_addr6_cast_fu_266_p1 = $unsigned(tmp_9_fu_258_p3);
assign p_addr7_fu_270_p2 = (p_addr6_cast_fu_266_p1 + tmp_2_trn_cast_fu_254_p1);
assign p_addr_cast_fu_239_p1 = $unsigned(tmp_fu_231_p3);
assign row_outbuf_d0 = grp_dct_1d_fu_176_dst_d0;
assign tmp_1_fu_321_p3 = {{i_3_reg_163}, {ap_const_lv3_0}};
assign tmp_2_fu_339_p1 = $unsigned(p_addr3_fu_333_p2);
assign tmp_2_trn_cast_fu_254_p1 = $unsigned(i_1_reg_127);
assign tmp_3_fu_348_p3 = {{j_1_reg_151}, {ap_const_lv3_0}};
assign tmp_3_trn_cast_fu_317_p1 = $unsigned(j_1_reg_151);
assign tmp_4_fu_366_p1 = $unsigned(p_addr5_fu_360_p2);
assign tmp_4_trn_cast_fu_344_p1 = $unsigned(i_3_reg_163);
assign tmp_7_fu_249_p1 = $unsigned(p_addr1_fu_243_p2);
assign tmp_9_fu_258_p3 = {{j_reg_115}, {ap_const_lv3_0}};
assign tmp_fu_231_p3 = {{i_1_reg_127}, {ap_const_lv3_0}};
assign tmp_s_fu_276_p1 = $unsigned(p_addr7_fu_270_p2);
assign tmp_trn_cast_fu_227_p1 = $unsigned(j_reg_115);


endmodule //dct_2d


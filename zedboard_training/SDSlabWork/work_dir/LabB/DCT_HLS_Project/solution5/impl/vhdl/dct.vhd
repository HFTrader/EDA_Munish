-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.3
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct is
port (
    input_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_we0 : OUT STD_LOGIC;
    input_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_we1 : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_we0 : OUT STD_LOGIC;
    output_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_r_ce1 : OUT STD_LOGIC;
    output_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC );
end;


architecture behav of dct is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dct,hls_ip_2013_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.380000,HLS_SYN_LAT=795,HLS_SYN_TPT=262,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_true : BOOLEAN := true;

    signal read_data_U0_ap_start : STD_LOGIC;
    signal read_data_U0_ap_done : STD_LOGIC;
    signal read_data_U0_ap_continue : STD_LOGIC;
    signal read_data_U0_ap_idle : STD_LOGIC;
    signal read_data_U0_ap_ready : STD_LOGIC;
    signal read_data_U0_input_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal read_data_U0_input_r_ce0 : STD_LOGIC;
    signal read_data_U0_input_r_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal read_data_U0_buf_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal read_data_U0_buf_r_ce0 : STD_LOGIC;
    signal read_data_U0_buf_r_we0 : STD_LOGIC;
    signal read_data_U0_buf_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_chn_write_read_data_U0_buf_2d_in : STD_LOGIC;
    signal read_data_U0_buf_r_pipo_status : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_ap_start : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_ap_done : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_ap_continue : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_ap_idle : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_ap_ready : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_ce0 : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_ce1 : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_ce0 : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_we0 : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_chn_write_dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf : STD_LOGIC;
    signal dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_pipo_status : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_start : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_done : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_continue : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_idle : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_ready : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_row_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_row_outbuf_ce0 : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_row_outbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_ce0 : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_we0 : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_chn_write_dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf : STD_LOGIC;
    signal dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_pipo_status : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_ap_start : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_ap_done : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_ap_continue : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_ap_idle : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_ap_ready : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_ce0 : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_ce1 : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_ce0 : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_we0 : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_chn_write_dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf : STD_LOGIC;
    signal dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_pipo_status : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_start : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_done : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_continue : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_idle : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_ready : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_col_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_col_outbuf_ce0 : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_col_outbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_ce0 : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_we0 : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_chn_write_dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out : STD_LOGIC;
    signal dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_pipo_status : STD_LOGIC;
    signal write_data_U0_ap_start : STD_LOGIC;
    signal write_data_U0_ap_done : STD_LOGIC;
    signal write_data_U0_ap_continue : STD_LOGIC;
    signal write_data_U0_ap_idle : STD_LOGIC;
    signal write_data_U0_ap_ready : STD_LOGIC;
    signal write_data_U0_buf_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal write_data_U0_buf_r_ce0 : STD_LOGIC;
    signal write_data_U0_buf_r_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal write_data_U0_output_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal write_data_U0_output_r_ce0 : STD_LOGIC;
    signal write_data_U0_output_r_we0 : STD_LOGIC;
    signal write_data_U0_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_hs_continue : STD_LOGIC;
    signal buf_2d_in_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_in_i_ce0 : STD_LOGIC;
    signal buf_2d_in_i_we0 : STD_LOGIC;
    signal buf_2d_in_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_i_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_in_i_ce1 : STD_LOGIC;
    signal buf_2d_in_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_in_t_ce0 : STD_LOGIC;
    signal buf_2d_in_t_we0 : STD_LOGIC;
    signal buf_2d_in_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_t_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_in_t_ce1 : STD_LOGIC;
    signal buf_2d_in_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_in_i_full_n : STD_LOGIC;
    signal buf_2d_in_i_write : STD_LOGIC;
    signal buf_2d_in_t_empty_n : STD_LOGIC;
    signal buf_2d_in_t_read : STD_LOGIC;
    signal row_outbuf_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal row_outbuf_i_ce0 : STD_LOGIC;
    signal row_outbuf_i_we0 : STD_LOGIC;
    signal row_outbuf_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_outbuf_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_outbuf_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal row_outbuf_t_ce0 : STD_LOGIC;
    signal row_outbuf_t_we0 : STD_LOGIC;
    signal row_outbuf_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_outbuf_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_outbuf_U_ap_dummy_ce : STD_LOGIC;
    signal row_outbuf_i_full_n : STD_LOGIC;
    signal row_outbuf_i_write : STD_LOGIC;
    signal row_outbuf_t_empty_n : STD_LOGIC;
    signal row_outbuf_t_read : STD_LOGIC;
    signal col_inbuf_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_inbuf_i_ce0 : STD_LOGIC;
    signal col_inbuf_i_we0 : STD_LOGIC;
    signal col_inbuf_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_i_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_inbuf_i_ce1 : STD_LOGIC;
    signal col_inbuf_i_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_inbuf_t_ce0 : STD_LOGIC;
    signal col_inbuf_t_we0 : STD_LOGIC;
    signal col_inbuf_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_t_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_inbuf_t_ce1 : STD_LOGIC;
    signal col_inbuf_t_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_U_ap_dummy_ce : STD_LOGIC;
    signal col_inbuf_i_full_n : STD_LOGIC;
    signal col_inbuf_i_write : STD_LOGIC;
    signal col_inbuf_t_empty_n : STD_LOGIC;
    signal col_inbuf_t_read : STD_LOGIC;
    signal col_outbuf_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_outbuf_i_ce0 : STD_LOGIC;
    signal col_outbuf_i_we0 : STD_LOGIC;
    signal col_outbuf_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_outbuf_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_outbuf_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_outbuf_t_ce0 : STD_LOGIC;
    signal col_outbuf_t_we0 : STD_LOGIC;
    signal col_outbuf_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_outbuf_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_outbuf_U_ap_dummy_ce : STD_LOGIC;
    signal col_outbuf_i_full_n : STD_LOGIC;
    signal col_outbuf_i_write : STD_LOGIC;
    signal col_outbuf_t_empty_n : STD_LOGIC;
    signal col_outbuf_t_read : STD_LOGIC;
    signal buf_2d_out_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_out_i_ce0 : STD_LOGIC;
    signal buf_2d_out_i_we0 : STD_LOGIC;
    signal buf_2d_out_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_out_t_ce0 : STD_LOGIC;
    signal buf_2d_out_t_we0 : STD_LOGIC;
    signal buf_2d_out_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_out_i_full_n : STD_LOGIC;
    signal buf_2d_out_i_write : STD_LOGIC;
    signal buf_2d_out_t_empty_n : STD_LOGIC;
    signal buf_2d_out_t_read : STD_LOGIC;
    signal ap_reg_procdone_read_data_U0 : STD_LOGIC := '0';
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_reg_procdone_dct_Loop_Row_DCT_Loop_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_dct_Loop_Xpose_Row_Outer_Loop_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_dct_Loop_Col_DCT_Loop_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_dct_Loop_Xpose_Col_Outer_Loop_proc_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_write_data_U0 : STD_LOGIC := '0';
    signal ap_CS : STD_LOGIC;
    signal ap_sig_top_allready : STD_LOGIC;

    component read_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_we0 : OUT STD_LOGIC;
        buf_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_Loop_Row_DCT_Loop_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_2d_in_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2d_in_ce0 : OUT STD_LOGIC;
        buf_2d_in_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_2d_in_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2d_in_ce1 : OUT STD_LOGIC;
        buf_2d_in_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        row_outbuf_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        row_outbuf_ce0 : OUT STD_LOGIC;
        row_outbuf_we0 : OUT STD_LOGIC;
        row_outbuf_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_Loop_Xpose_Row_Outer_Loop_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        row_outbuf_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        row_outbuf_ce0 : OUT STD_LOGIC;
        row_outbuf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        col_inbuf_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        col_inbuf_ce0 : OUT STD_LOGIC;
        col_inbuf_we0 : OUT STD_LOGIC;
        col_inbuf_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_Loop_Col_DCT_Loop_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        col_inbuf_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        col_inbuf_ce0 : OUT STD_LOGIC;
        col_inbuf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        col_inbuf_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        col_inbuf_ce1 : OUT STD_LOGIC;
        col_inbuf_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        col_outbuf_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        col_outbuf_ce0 : OUT STD_LOGIC;
        col_outbuf_we0 : OUT STD_LOGIC;
        col_outbuf_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_Loop_Xpose_Col_Outer_Loop_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        col_outbuf_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        col_outbuf_ce0 : OUT STD_LOGIC;
        col_outbuf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_2d_out_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_2d_out_ce0 : OUT STD_LOGIC;
        buf_2d_out_we0 : OUT STD_LOGIC;
        buf_2d_out_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component write_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_buf_2d_in IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component dct_row_outbuf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    read_data_U0 : component read_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => read_data_U0_ap_start,
        ap_done => read_data_U0_ap_done,
        ap_continue => read_data_U0_ap_continue,
        ap_idle => read_data_U0_ap_idle,
        ap_ready => read_data_U0_ap_ready,
        input_r_address0 => read_data_U0_input_r_address0,
        input_r_ce0 => read_data_U0_input_r_ce0,
        input_r_q0 => read_data_U0_input_r_q0,
        buf_r_address0 => read_data_U0_buf_r_address0,
        buf_r_ce0 => read_data_U0_buf_r_ce0,
        buf_r_we0 => read_data_U0_buf_r_we0,
        buf_r_d0 => read_data_U0_buf_r_d0);

    dct_Loop_Row_DCT_Loop_proc_U0 : component dct_Loop_Row_DCT_Loop_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dct_Loop_Row_DCT_Loop_proc_U0_ap_start,
        ap_done => dct_Loop_Row_DCT_Loop_proc_U0_ap_done,
        ap_continue => dct_Loop_Row_DCT_Loop_proc_U0_ap_continue,
        ap_idle => dct_Loop_Row_DCT_Loop_proc_U0_ap_idle,
        ap_ready => dct_Loop_Row_DCT_Loop_proc_U0_ap_ready,
        buf_2d_in_address0 => dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_address0,
        buf_2d_in_ce0 => dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_ce0,
        buf_2d_in_q0 => dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_q0,
        buf_2d_in_address1 => dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_address1,
        buf_2d_in_ce1 => dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_ce1,
        buf_2d_in_q1 => dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_q1,
        row_outbuf_address0 => dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_address0,
        row_outbuf_ce0 => dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_ce0,
        row_outbuf_we0 => dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_we0,
        row_outbuf_d0 => dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_d0);

    dct_Loop_Xpose_Row_Outer_Loop_proc_U0 : component dct_Loop_Xpose_Row_Outer_Loop_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_start,
        ap_done => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_done,
        ap_continue => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_continue,
        ap_idle => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_idle,
        ap_ready => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_ready,
        row_outbuf_address0 => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_row_outbuf_address0,
        row_outbuf_ce0 => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_row_outbuf_ce0,
        row_outbuf_q0 => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_row_outbuf_q0,
        col_inbuf_address0 => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_address0,
        col_inbuf_ce0 => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_ce0,
        col_inbuf_we0 => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_we0,
        col_inbuf_d0 => dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_d0);

    dct_Loop_Col_DCT_Loop_proc_U0 : component dct_Loop_Col_DCT_Loop_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dct_Loop_Col_DCT_Loop_proc_U0_ap_start,
        ap_done => dct_Loop_Col_DCT_Loop_proc_U0_ap_done,
        ap_continue => dct_Loop_Col_DCT_Loop_proc_U0_ap_continue,
        ap_idle => dct_Loop_Col_DCT_Loop_proc_U0_ap_idle,
        ap_ready => dct_Loop_Col_DCT_Loop_proc_U0_ap_ready,
        col_inbuf_address0 => dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_address0,
        col_inbuf_ce0 => dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_ce0,
        col_inbuf_q0 => dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_q0,
        col_inbuf_address1 => dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_address1,
        col_inbuf_ce1 => dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_ce1,
        col_inbuf_q1 => dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_q1,
        col_outbuf_address0 => dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_address0,
        col_outbuf_ce0 => dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_ce0,
        col_outbuf_we0 => dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_we0,
        col_outbuf_d0 => dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_d0);

    dct_Loop_Xpose_Col_Outer_Loop_proc_U0 : component dct_Loop_Xpose_Col_Outer_Loop_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_start,
        ap_done => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_done,
        ap_continue => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_continue,
        ap_idle => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_idle,
        ap_ready => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_ready,
        col_outbuf_address0 => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_col_outbuf_address0,
        col_outbuf_ce0 => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_col_outbuf_ce0,
        col_outbuf_q0 => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_col_outbuf_q0,
        buf_2d_out_address0 => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_address0,
        buf_2d_out_ce0 => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_ce0,
        buf_2d_out_we0 => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_we0,
        buf_2d_out_d0 => dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_d0);

    write_data_U0 : component write_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => write_data_U0_ap_start,
        ap_done => write_data_U0_ap_done,
        ap_continue => write_data_U0_ap_continue,
        ap_idle => write_data_U0_ap_idle,
        ap_ready => write_data_U0_ap_ready,
        buf_r_address0 => write_data_U0_buf_r_address0,
        buf_r_ce0 => write_data_U0_buf_r_ce0,
        buf_r_q0 => write_data_U0_buf_r_q0,
        output_r_address0 => write_data_U0_output_r_address0,
        output_r_ce0 => write_data_U0_output_r_ce0,
        output_r_we0 => write_data_U0_output_r_we0,
        output_r_d0 => write_data_U0_output_r_d0);

    buf_2d_in_U : component dct_buf_2d_in
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_in_i_address0,
        i_ce0 => buf_2d_in_i_ce0,
        i_we0 => buf_2d_in_i_we0,
        i_d0 => buf_2d_in_i_d0,
        i_q0 => buf_2d_in_i_q0,
        i_address1 => buf_2d_in_i_address1,
        i_ce1 => buf_2d_in_i_ce1,
        i_q1 => buf_2d_in_i_q1,
        t_address0 => buf_2d_in_t_address0,
        t_ce0 => buf_2d_in_t_ce0,
        t_we0 => buf_2d_in_t_we0,
        t_d0 => buf_2d_in_t_d0,
        t_q0 => buf_2d_in_t_q0,
        t_address1 => buf_2d_in_t_address1,
        t_ce1 => buf_2d_in_t_ce1,
        t_q1 => buf_2d_in_t_q1,
        i_ce => buf_2d_in_U_ap_dummy_ce,
        t_ce => buf_2d_in_U_ap_dummy_ce,
        i_full_n => buf_2d_in_i_full_n,
        i_write => buf_2d_in_i_write,
        t_empty_n => buf_2d_in_t_empty_n,
        t_read => buf_2d_in_t_read);

    row_outbuf_U : component dct_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => row_outbuf_i_address0,
        i_ce0 => row_outbuf_i_ce0,
        i_we0 => row_outbuf_i_we0,
        i_d0 => row_outbuf_i_d0,
        i_q0 => row_outbuf_i_q0,
        t_address0 => row_outbuf_t_address0,
        t_ce0 => row_outbuf_t_ce0,
        t_we0 => row_outbuf_t_we0,
        t_d0 => row_outbuf_t_d0,
        t_q0 => row_outbuf_t_q0,
        i_ce => row_outbuf_U_ap_dummy_ce,
        t_ce => row_outbuf_U_ap_dummy_ce,
        i_full_n => row_outbuf_i_full_n,
        i_write => row_outbuf_i_write,
        t_empty_n => row_outbuf_t_empty_n,
        t_read => row_outbuf_t_read);

    col_inbuf_U : component dct_buf_2d_in
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => col_inbuf_i_address0,
        i_ce0 => col_inbuf_i_ce0,
        i_we0 => col_inbuf_i_we0,
        i_d0 => col_inbuf_i_d0,
        i_q0 => col_inbuf_i_q0,
        i_address1 => col_inbuf_i_address1,
        i_ce1 => col_inbuf_i_ce1,
        i_q1 => col_inbuf_i_q1,
        t_address0 => col_inbuf_t_address0,
        t_ce0 => col_inbuf_t_ce0,
        t_we0 => col_inbuf_t_we0,
        t_d0 => col_inbuf_t_d0,
        t_q0 => col_inbuf_t_q0,
        t_address1 => col_inbuf_t_address1,
        t_ce1 => col_inbuf_t_ce1,
        t_q1 => col_inbuf_t_q1,
        i_ce => col_inbuf_U_ap_dummy_ce,
        t_ce => col_inbuf_U_ap_dummy_ce,
        i_full_n => col_inbuf_i_full_n,
        i_write => col_inbuf_i_write,
        t_empty_n => col_inbuf_t_empty_n,
        t_read => col_inbuf_t_read);

    col_outbuf_U : component dct_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => col_outbuf_i_address0,
        i_ce0 => col_outbuf_i_ce0,
        i_we0 => col_outbuf_i_we0,
        i_d0 => col_outbuf_i_d0,
        i_q0 => col_outbuf_i_q0,
        t_address0 => col_outbuf_t_address0,
        t_ce0 => col_outbuf_t_ce0,
        t_we0 => col_outbuf_t_we0,
        t_d0 => col_outbuf_t_d0,
        t_q0 => col_outbuf_t_q0,
        i_ce => col_outbuf_U_ap_dummy_ce,
        t_ce => col_outbuf_U_ap_dummy_ce,
        i_full_n => col_outbuf_i_full_n,
        i_write => col_outbuf_i_write,
        t_empty_n => col_outbuf_t_empty_n,
        t_read => col_outbuf_t_read);

    buf_2d_out_U : component dct_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_out_i_address0,
        i_ce0 => buf_2d_out_i_ce0,
        i_we0 => buf_2d_out_i_we0,
        i_d0 => buf_2d_out_i_d0,
        i_q0 => buf_2d_out_i_q0,
        t_address0 => buf_2d_out_t_address0,
        t_ce0 => buf_2d_out_t_ce0,
        t_we0 => buf_2d_out_t_we0,
        t_d0 => buf_2d_out_t_d0,
        t_q0 => buf_2d_out_t_q0,
        i_ce => buf_2d_out_U_ap_dummy_ce,
        t_ce => buf_2d_out_U_ap_dummy_ce,
        i_full_n => buf_2d_out_i_full_n,
        i_write => buf_2d_out_i_write,
        t_empty_n => buf_2d_out_t_empty_n,
        t_read => buf_2d_out_t_read);





    -- ap_reg_procdone_dct_Loop_Col_DCT_Loop_proc_U0 assign process. --
    ap_reg_procdone_dct_Loop_Col_DCT_Loop_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_dct_Loop_Col_DCT_Loop_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_dct_Loop_Col_DCT_Loop_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = dct_Loop_Col_DCT_Loop_proc_U0_ap_done)) then 
                    ap_reg_procdone_dct_Loop_Col_DCT_Loop_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_dct_Loop_Row_DCT_Loop_proc_U0 assign process. --
    ap_reg_procdone_dct_Loop_Row_DCT_Loop_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_dct_Loop_Row_DCT_Loop_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_dct_Loop_Row_DCT_Loop_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = dct_Loop_Row_DCT_Loop_proc_U0_ap_done)) then 
                    ap_reg_procdone_dct_Loop_Row_DCT_Loop_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_dct_Loop_Xpose_Col_Outer_Loop_proc_U0 assign process. --
    ap_reg_procdone_dct_Loop_Xpose_Col_Outer_Loop_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_dct_Loop_Xpose_Col_Outer_Loop_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_dct_Loop_Xpose_Col_Outer_Loop_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_done)) then 
                    ap_reg_procdone_dct_Loop_Xpose_Col_Outer_Loop_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_dct_Loop_Xpose_Row_Outer_Loop_proc_U0 assign process. --
    ap_reg_procdone_dct_Loop_Xpose_Row_Outer_Loop_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_dct_Loop_Xpose_Row_Outer_Loop_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_dct_Loop_Xpose_Row_Outer_Loop_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_done)) then 
                    ap_reg_procdone_dct_Loop_Xpose_Row_Outer_Loop_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_read_data_U0 assign process. --
    ap_reg_procdone_read_data_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_read_data_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_read_data_U0 <= ap_const_logic_0;
                elsif ((read_data_U0_ap_done = ap_const_logic_1)) then 
                    ap_reg_procdone_read_data_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_write_data_U0 assign process. --
    ap_reg_procdone_write_data_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_write_data_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_write_data_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = write_data_U0_ap_done)) then 
                    ap_reg_procdone_write_data_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    ap_chn_write_dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf <= dct_Loop_Col_DCT_Loop_proc_U0_ap_done;
    ap_chn_write_dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf <= dct_Loop_Row_DCT_Loop_proc_U0_ap_done;
    ap_chn_write_dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_done;
    ap_chn_write_dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_done;
    ap_chn_write_read_data_U0_buf_2d_in <= read_data_U0_ap_done;
    ap_done <= ap_sig_hs_done;

    -- ap_idle assign process. --
    ap_idle_assign_proc : process(read_data_U0_ap_idle, dct_Loop_Row_DCT_Loop_proc_U0_ap_idle, dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_idle, dct_Loop_Col_DCT_Loop_proc_U0_ap_idle, dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_idle, write_data_U0_ap_idle, buf_2d_in_t_empty_n, row_outbuf_t_empty_n, col_inbuf_t_empty_n, col_outbuf_t_empty_n, buf_2d_out_t_empty_n)
    begin
        if (((read_data_U0_ap_idle = ap_const_logic_1) and (ap_const_logic_1 = dct_Loop_Row_DCT_Loop_proc_U0_ap_idle) and (ap_const_logic_1 = dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_idle) and (ap_const_logic_1 = dct_Loop_Col_DCT_Loop_proc_U0_ap_idle) and (ap_const_logic_1 = dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_idle) and (ap_const_logic_1 = write_data_U0_ap_idle) and (ap_const_logic_0 = buf_2d_in_t_empty_n) and (ap_const_logic_0 = row_outbuf_t_empty_n) and (ap_const_logic_0 = col_inbuf_t_empty_n) and (ap_const_logic_0 = col_outbuf_t_empty_n) and (ap_const_logic_0 = buf_2d_out_t_empty_n))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_sig_top_allready;
    ap_sig_hs_continue <= ap_const_logic_1;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(write_data_U0_ap_done, ap_reg_procdone_write_data_U0)
    begin
        if (((ap_const_logic_1 = write_data_U0_ap_done) or (ap_const_logic_1 = ap_reg_procdone_write_data_U0))) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_sig_top_allready <= read_data_U0_ap_ready;
    buf_2d_in_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_in_i_address0 <= read_data_U0_buf_r_address0;
    buf_2d_in_i_ce0 <= read_data_U0_buf_r_ce0;
    buf_2d_in_i_d0 <= read_data_U0_buf_r_d0;
    buf_2d_in_i_we0 <= read_data_U0_buf_r_we0;
    buf_2d_in_i_write <= read_data_U0_ap_done;
    buf_2d_in_t_address0 <= dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_address0;
    buf_2d_in_t_address1 <= dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_address1;
    buf_2d_in_t_ce0 <= dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_ce0;
    buf_2d_in_t_ce1 <= dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_ce1;
    buf_2d_in_t_read <= dct_Loop_Row_DCT_Loop_proc_U0_ap_ready;
    buf_2d_out_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_out_i_address0 <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_address0;
    buf_2d_out_i_ce0 <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_ce0;
    buf_2d_out_i_d0 <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_d0;
    buf_2d_out_i_we0 <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_we0;
    buf_2d_out_i_write <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_done;
    buf_2d_out_t_address0 <= write_data_U0_buf_r_address0;
    buf_2d_out_t_ce0 <= write_data_U0_buf_r_ce0;
    buf_2d_out_t_read <= write_data_U0_ap_ready;
    col_inbuf_U_ap_dummy_ce <= ap_const_logic_1;
    col_inbuf_i_address0 <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_address0;
    col_inbuf_i_ce0 <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_ce0;
    col_inbuf_i_d0 <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_d0;
    col_inbuf_i_we0 <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_we0;
    col_inbuf_i_write <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_done;
    col_inbuf_t_address0 <= dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_address0;
    col_inbuf_t_address1 <= dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_address1;
    col_inbuf_t_ce0 <= dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_ce0;
    col_inbuf_t_ce1 <= dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_ce1;
    col_inbuf_t_read <= dct_Loop_Col_DCT_Loop_proc_U0_ap_ready;
    col_outbuf_U_ap_dummy_ce <= ap_const_logic_1;
    col_outbuf_i_address0 <= dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_address0;
    col_outbuf_i_ce0 <= dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_ce0;
    col_outbuf_i_d0 <= dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_d0;
    col_outbuf_i_we0 <= dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_we0;
    col_outbuf_i_write <= dct_Loop_Col_DCT_Loop_proc_U0_ap_done;
    col_outbuf_t_address0 <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_col_outbuf_address0;
    col_outbuf_t_ce0 <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_col_outbuf_ce0;
    col_outbuf_t_read <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_ready;
    dct_Loop_Col_DCT_Loop_proc_U0_ap_continue <= dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_pipo_status;
    dct_Loop_Col_DCT_Loop_proc_U0_ap_start <= col_inbuf_t_empty_n;
    dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_q0 <= col_inbuf_t_q0;
    dct_Loop_Col_DCT_Loop_proc_U0_col_inbuf_q1 <= col_inbuf_t_q1;
    dct_Loop_Col_DCT_Loop_proc_U0_col_outbuf_pipo_status <= col_outbuf_i_full_n;
    dct_Loop_Row_DCT_Loop_proc_U0_ap_continue <= dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_pipo_status;
    dct_Loop_Row_DCT_Loop_proc_U0_ap_start <= buf_2d_in_t_empty_n;
    dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_q0 <= buf_2d_in_t_q0;
    dct_Loop_Row_DCT_Loop_proc_U0_buf_2d_in_q1 <= buf_2d_in_t_q1;
    dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_pipo_status <= row_outbuf_i_full_n;
    dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_continue <= dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_pipo_status;
    dct_Loop_Xpose_Col_Outer_Loop_proc_U0_ap_start <= col_outbuf_t_empty_n;
    dct_Loop_Xpose_Col_Outer_Loop_proc_U0_buf_2d_out_pipo_status <= buf_2d_out_i_full_n;
    dct_Loop_Xpose_Col_Outer_Loop_proc_U0_col_outbuf_q0 <= col_outbuf_t_q0;
    dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_continue <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_pipo_status;
    dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_start <= row_outbuf_t_empty_n;
    dct_Loop_Xpose_Row_Outer_Loop_proc_U0_col_inbuf_pipo_status <= col_inbuf_i_full_n;
    dct_Loop_Xpose_Row_Outer_Loop_proc_U0_row_outbuf_q0 <= row_outbuf_t_q0;
    input_r_address0 <= read_data_U0_input_r_address0;
    input_r_address1 <= ap_const_lv6_0;
    input_r_ce0 <= read_data_U0_input_r_ce0;
    input_r_ce1 <= ap_const_logic_0;
    input_r_d0 <= ap_const_lv16_0;
    input_r_d1 <= ap_const_lv16_0;
    input_r_we0 <= ap_const_logic_0;
    input_r_we1 <= ap_const_logic_0;
    output_r_address0 <= write_data_U0_output_r_address0;
    output_r_address1 <= ap_const_lv6_0;
    output_r_ce0 <= write_data_U0_output_r_ce0;
    output_r_ce1 <= ap_const_logic_0;
    output_r_d0 <= write_data_U0_output_r_d0;
    output_r_d1 <= ap_const_lv16_0;
    output_r_we0 <= write_data_U0_output_r_we0;
    output_r_we1 <= ap_const_logic_0;
    read_data_U0_ap_continue <= read_data_U0_buf_r_pipo_status;
    read_data_U0_ap_start <= ap_start;
    read_data_U0_buf_r_pipo_status <= buf_2d_in_i_full_n;
    read_data_U0_input_r_q0 <= input_r_q0;
    row_outbuf_U_ap_dummy_ce <= ap_const_logic_1;
    row_outbuf_i_address0 <= dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_address0;
    row_outbuf_i_ce0 <= dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_ce0;
    row_outbuf_i_d0 <= dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_d0;
    row_outbuf_i_we0 <= dct_Loop_Row_DCT_Loop_proc_U0_row_outbuf_we0;
    row_outbuf_i_write <= dct_Loop_Row_DCT_Loop_proc_U0_ap_done;
    row_outbuf_t_address0 <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_row_outbuf_address0;
    row_outbuf_t_ce0 <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_row_outbuf_ce0;
    row_outbuf_t_read <= dct_Loop_Xpose_Row_Outer_Loop_proc_U0_ap_ready;
    write_data_U0_ap_continue <= ap_sig_hs_continue;
    write_data_U0_ap_start <= buf_2d_out_t_empty_n;
    write_data_U0_buf_r_q0 <= buf_2d_out_t_q0;
end behav;

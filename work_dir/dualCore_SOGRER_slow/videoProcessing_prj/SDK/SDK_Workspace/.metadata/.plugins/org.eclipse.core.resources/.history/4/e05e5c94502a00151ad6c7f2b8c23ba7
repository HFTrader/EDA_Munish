// this file will need to be generated later automatically by using template engines like FreeMarker
// the sw functions prototypes will be got by parsing "sw_functions.h"
// the HA_initialize functions will be based on presence of corresponding HAs in SoC...this info will be obtained by "SoC_config.h"

// for now assuming this file is already being generated by a template engine (for a SoC that contains HA for each of grayscale, sobel, erode filtering) to build the application SW

#ifndef HWSW_FUNCTIONS_H_
#define HWSW_FUNCTIONS_H_

#include "sw_functions.h"
#include "SoC_config.h"


// application processing methods
void ConvToGray(unsigned long ImgIn_BaseAddr, unsigned long ImgOut_BaseAddr, unsigned short width, unsigned short height, unsigned short horizontalActiveTime);
void ConvToGrayHLS(unsigned long ImgIn_BaseAddr, unsigned long ImgOut_BaseAddr, unsigned short horizontalActiveTime);
void EdgeDetection(unsigned long ImgIn_BaseAddr, unsigned long ImgOut_BaseAddr, unsigned short width, unsigned short height, unsigned short h_ActiveTime);
void Erode(unsigned long ImgIn_BaseAddr, unsigned long ImgOut_BaseAddr, unsigned short width, unsigned short height, unsigned short h_ActiveTime);

// hardware accelerator related methods
short int SobelFilter_busy;
void SobelFilter_Init();
void SobelFilter_VDMA_ISR();
short int ErodeFilter_busy;
void ErodeFilter_Init();
void ErodeFilter_VDMA_ISR();
short int GrayscaleFilter_busy;
void GrayscaleFilter_Init();
void GrayscaleFilter_VDMA_ISR();
void HA_Initialize();


#endif

/*
 * SoCProc_support.c
 *
 *  Created on: Jul 17, 2015
 *      Author: ga38qoh
 */

// NOTE: this would later be generated by the template engine using information from "SoC_config.h", "sw_functions.h"

#include "SoCProc_support.h"
#include <stdlib.h>



void SoCProc_initialize() {
	SoCProc_elements = malloc(sizeof(SoCProc)*NUM_PROCS);
	// NOTE: if ZYNQ-ARM CortexA9 core available in SoC
	ZYNQ_ARM_CORTEX_A9_initialize();
	SoCProc_elements[0].m_type = ZYNQ_ARM_CORTEX_A9;
	SoCProc_elements[0].m_id = 0;
	SoCProc_elements[0].m_busy = 0;
	// NOTE: if Xilinx Microblaze 8.5 IP core available in SoC
	XIL_MICROBLAZE_8_5_initialize();
	SoCProc_elements[1].m_type = XIL_MICROBLAZE_8_5;
	SoCProc_elements[1].m_id = 1;
	SoCProc_elements[1].m_busy = 0;
}



unsigned char SoCProc_processDataflow(void(*processFrame_Ptr)(unsigned int)) {
	int i;
	for (i=0; i<NUM_PROCS; i++) {
		if (SoCProc_elements[i].m_busy == 0) {
			SoCProc_elements[i].m_busy = 1;
			// NOTE: if ZYNQ-ARM CortexA9 core available in SoC
			if (SoCProc_elements[i].m_type == ZYNQ_ARM_CORTEX_A9) {
				ZYNQ_ARM_CORTEX_A9_process(processFrame_Ptr, &SoCProc_elements[i].m_busy);
			}
			// NOTE: if Xilinx Microblaze 8.5 IP core available in SoC
			if (SoCProc_elements[i].m_type == XIL_MICROBLAZE_8_5) {
				XIL_MICROBLAZE_8_5_process(processFrame_Ptr, &SoCProc_elements[i].m_busy);
			}
			return 1;
		}
	}

	return 0;
}





//TODO: function pointer to random function in CPU_NAME_process(...) implementation






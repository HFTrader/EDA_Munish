// NOTE: this would later be generated by the template engine using information from "SoC_config.h", "sw_functions.h"

#ifndef SOCPROC_SUPPORT_H_
#define SOCPROC_SUPPORT_H_

//#include "sw_functions.h"

// NOTE: if ZYNQ-ARM CortexA9 is present in SoC
#include "ZYNQ-ARM_CORTEX-A9_support.h"
// NOTE: if Xilinx Microblaze is present in SoC
#include "XIL_MICROBLAZE-8.5_support.h"

// NOTE; if ZYNQ-ARM CortexA9 and Xilinx Microblaze IP core are present
#define ZYNQ-ARM_CORTEX-A9 0
#define XIL_MICROBLAZE-8.5 1

#define NUM_PROCS 2

struct SoCProc {
	unsigned int m_id;
	unsigned char busy;

	void Initialize() {
		if (m_type == ZYNQ-ARM_CORTEX-A9) {
			ZYNQ-ARM_CORTEX-A9_initialize();
		}
		if (m_type == XIL_MICROBLAZE-8.5) {
			XIL_MICROBLAZE-8.5_initialize();
		}
	}

	void Process() {
		if (m_type == ZYNQ-ARM_CORTEX-A9) {
			ZYNQ-ARM_CORTEX-A9_process(processFrame)
		}
	}
};

SoCProc *SoCProc_elem;
SoCProc SoCProc_getFreeElem();

// API for application developer
void SoCProc_Initialize();
unsigned char SoCProc_handleRawData();

#endif

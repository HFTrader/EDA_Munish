// this driver corresponds to VDMA IP
// it is generated by modifying the auto-generated template



#ifndef __VDMAIP_DRIVER_TEMPLATE_H__
#define __VDMAIP_DRIVER_TEMPLATE_H__

#define bool unsigned char


typedef struct {
    unsigned int baseaddr;
} VDMAIPDriverInstance;


typedef struct {
    unsigned int offset;
    unsigned int value;
    unsigned int mask;
} VDMAIPRegType;




// register map for VDMA IP registers
typedef struct {
    // actual Xilinx AXI-VDMA IP has ~55 registers.....for now only a sample of registers are shown to provide an idea
    // only registers important for IP use are shown here...but in actual auto-generated file, all the registers will be present    
	VDMAIPRegType MM2S_DMACR;
    //      ...     //  NOTE: not shown here for simplicity
	VDMAIPRegType S2MM_DMACR;
	VDMAIPRegType S2MM_DMASR;
    //      ...     //  NOTE: not shown here for simplicity
	VDMAIPRegType MM2S_VSIZE;
	VDMAIPRegType MM2S_HSIZE;
	VDMAIPRegType MM2S_FRMDLY_STRIDE;
	VDMAIPRegType MM2S_START_ADDRESS1;
	VDMAIPRegType MM2S_START_ADDRESS2;
	VDMAIPRegType MM2S_START_ADDRESS3;
    //      ...     //  NOTE: not shown here for simplicity
	VDMAIPRegType S2MM_VSIZE;
	VDMAIPRegType S2MM_HSIZE;
	VDMAIPRegType S2MM_FRMDLY_STRIDE;
	VDMAIPRegType S2MM_START_ADDRESS1;
	VDMAIPRegType S2MM_START_ADDRESS2;
	VDMAIPRegType S2MM_START_ADDRESS3;
    //      ...     //  NOTE: not shown here for simplicity
} VDMAIPRegMap;



#define VDMAIP_BUSY_STATUS_REG_offset 0x34
#define VDMAIP_BUSY_STATUS_REG_bit 1          // little endian convention [31:0]




// API to configure VDMA_IP
void VDMAIP_Driver_initialize(VDMAIPDriverInstance *InstancePtr);
void VDMAIP_Driver_start(VDMAIPDriverInstance *InstancePtr, unsigned long ImgIn_BaseAddr,unsigned long ImgOut_BaseAddr,unsigned short width, unsigned short height, unsigned short horizontalActiveTime, unsigned short verticalActiveTime);
void VDMAIP_Driver_stop(VDMAIPDriverInstance *InstancePtr);
bool VDMAIP_Driver_isBusy(VDMAIPDriverInstance *InstancePtr);





#endif 



// NOTE: everything seems to be auto-generatable!!



    
    
    
    
    
    
    
    

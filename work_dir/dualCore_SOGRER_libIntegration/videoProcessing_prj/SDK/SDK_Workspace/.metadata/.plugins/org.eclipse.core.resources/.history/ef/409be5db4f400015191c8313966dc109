// this driver corresponds to Grayscale IP configuration corresponding to GRIP Rule 1 i.e Grayscale IP integrated with AXI-VDMA 
// it is generated by modifying the auto-generated template


#ifndef __SOBELIP_RULE1DRIVER_H__
#define __SOBELIP_RULE1DRIVER_H__


#include "SobelIP_VDMA_Driver.h"


#define bool unsigned char


// all the hardware related info needed by the driver functions should be provided in this struct
typedef struct {
    unsigned int baseaddr;
    SOBELIP_VDMADriverInstance vdmaDriver;
    unsigned int grip_rule;
} SobelIPRule1DriverInstance;


typedef struct {
    unsigned int offset;
    unsigned int value;
    unsigned int mask;
} SobelIPRule1RegType;



// register map for Grayscale IP peripheral registers
typedef struct {
	SobelIPRule1RegType AP_CTRL;
	SobelIPRule1RegType GIE;
	SobelIPRule1RegType IER;
	SobelIPRule1RegType ISR;
	SobelIPRule1RegType ROWS_DATA;
	SobelIPRule1RegType COLS_DATA;
} SobelIPRule1RegMap;



// the IP supplier should modify the contents of below register to be able to monitor the status of IP processing
#define SOBELIPRULE1_BUSY_STATUS_REG_offset 0x00
#define SOBELIPRULE1_BUSY_STATUS_REG_bit 1          // little endian convention [31:0]



// API for GrayscaleIP_Driver to use if this rule is applied by GRIP
void SobelIP_Rule1Driver_initialize(SobelIPRule1DriverInstance *InstancePtr, unsigned long ImgIn_BaseAddr,unsigned long ImgOut_BaseAddr, unsigned short width, unsigned short height, unsigned short horizontalActiveTime, unsigned short vertcialActiveTime);
void SobelIP_Rule1Driver_start(SobelIPRule1DriverInstance *InstancePtr, unsigned long ImgIn_BaseAddr,unsigned long ImgOut_BaseAddr, unsigned short width, unsigned short height, unsigned short horizontalActiveTime, unsigned short vertcialActiveTime);
void SobelIP_Rule1Driver_stop(SobelIPRule1DriverInstance *InstancePtr);
bool SobelIP_Rule1Driver_isBusy(SobelIPRule1DriverInstance *InstancePtr);



#endif




// NOTE: everything seems to be auto-generatable!!












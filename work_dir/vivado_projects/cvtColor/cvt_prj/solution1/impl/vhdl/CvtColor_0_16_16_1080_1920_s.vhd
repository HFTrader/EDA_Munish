-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.1
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CvtColor_0_16_16_1080_1920_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_0_V_read : OUT STD_LOGIC;
    p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_1_V_read : OUT STD_LOGIC;
    p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_2_V_read : OUT STD_LOGIC;
    p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_0_V_write : OUT STD_LOGIC;
    p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_1_V_write : OUT STD_LOGIC;
    p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of CvtColor_0_16_16_1080_1920_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st7_fsm_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv26_3A5E3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000111010010111100011";
    constant ap_const_lv29_12C8B4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100101100100010110100";
    constant ap_const_lv28_99168 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010011001000101101000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal j_reg_146 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_56 : BOOLEAN;
    signal i_1_fu_163_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_1_reg_293 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond3_fu_169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_298 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_80 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond3_reg_298_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_96 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond3_reg_298_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_174_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_fu_184_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_reg_307 : STD_LOGIC_VECTOR (25 downto 0);
    signal b_V_fu_194_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal b_V_reg_312 : STD_LOGIC_VECTOR (28 downto 0);
    signal g_V_fu_204_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal g_V_reg_317 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_7_reg_322 : STD_LOGIC_VECTOR (7 downto 0);
    signal qbit_reg_327 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_135 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_d_val_0_fu_269_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_184_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_V_fu_194_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_V_fu_204_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V1_i_cast_fu_210_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_1_fu_213_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal lhs_V_1_i_cast_fu_218_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_2_fu_222_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_8_i_cast_fu_245_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_i_cast_fu_248_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_fu_251_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_257_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_265_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal b_V_fu_194_p00 : STD_LOGIC_VECTOR (28 downto 0);
    signal g_V_fu_204_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_fu_184_p00 : STD_LOGIC_VECTOR (25 downto 0);


begin



    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond4_fu_158_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond3_fu_169_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (exitcond3_fu_169_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2)) or ((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond3_fu_169_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg assign process. --
    ap_reg_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                ap_reg_ppstg_exitcond3_reg_298_pp0_it1 <= exitcond3_reg_298;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                ap_reg_ppstg_exitcond3_reg_298_pp0_it2 <= ap_reg_ppstg_exitcond3_reg_298_pp0_it1;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                b_V_reg_312(2) <= b_V_fu_194_p2(2);
                b_V_reg_312(3) <= b_V_fu_194_p2(3);
                b_V_reg_312(4) <= b_V_fu_194_p2(4);
                b_V_reg_312(5) <= b_V_fu_194_p2(5);
                b_V_reg_312(6) <= b_V_fu_194_p2(6);
                b_V_reg_312(7) <= b_V_fu_194_p2(7);
                b_V_reg_312(8) <= b_V_fu_194_p2(8);
                b_V_reg_312(9) <= b_V_fu_194_p2(9);
                b_V_reg_312(10) <= b_V_fu_194_p2(10);
                b_V_reg_312(11) <= b_V_fu_194_p2(11);
                b_V_reg_312(12) <= b_V_fu_194_p2(12);
                b_V_reg_312(13) <= b_V_fu_194_p2(13);
                b_V_reg_312(14) <= b_V_fu_194_p2(14);
                b_V_reg_312(15) <= b_V_fu_194_p2(15);
                b_V_reg_312(16) <= b_V_fu_194_p2(16);
                b_V_reg_312(17) <= b_V_fu_194_p2(17);
                b_V_reg_312(18) <= b_V_fu_194_p2(18);
                b_V_reg_312(19) <= b_V_fu_194_p2(19);
                b_V_reg_312(20) <= b_V_fu_194_p2(20);
                b_V_reg_312(21) <= b_V_fu_194_p2(21);
                b_V_reg_312(22) <= b_V_fu_194_p2(22);
                b_V_reg_312(23) <= b_V_fu_194_p2(23);
                b_V_reg_312(24) <= b_V_fu_194_p2(24);
                b_V_reg_312(25) <= b_V_fu_194_p2(25);
                b_V_reg_312(26) <= b_V_fu_194_p2(26);
                b_V_reg_312(27) <= b_V_fu_194_p2(27);
                b_V_reg_312(28) <= b_V_fu_194_p2(28);
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                exitcond3_reg_298 <= exitcond3_fu_169_p2;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                g_V_reg_317(3) <= g_V_fu_204_p2(3);
                g_V_reg_317(4) <= g_V_fu_204_p2(4);
                g_V_reg_317(5) <= g_V_fu_204_p2(5);
                g_V_reg_317(6) <= g_V_fu_204_p2(6);
                g_V_reg_317(7) <= g_V_fu_204_p2(7);
                g_V_reg_317(8) <= g_V_fu_204_p2(8);
                g_V_reg_317(9) <= g_V_fu_204_p2(9);
                g_V_reg_317(10) <= g_V_fu_204_p2(10);
                g_V_reg_317(11) <= g_V_fu_204_p2(11);
                g_V_reg_317(12) <= g_V_fu_204_p2(12);
                g_V_reg_317(13) <= g_V_fu_204_p2(13);
                g_V_reg_317(14) <= g_V_fu_204_p2(14);
                g_V_reg_317(15) <= g_V_fu_204_p2(15);
                g_V_reg_317(16) <= g_V_fu_204_p2(16);
                g_V_reg_317(17) <= g_V_fu_204_p2(17);
                g_V_reg_317(18) <= g_V_fu_204_p2(18);
                g_V_reg_317(19) <= g_V_fu_204_p2(19);
                g_V_reg_317(20) <= g_V_fu_204_p2(20);
                g_V_reg_317(21) <= g_V_fu_204_p2(21);
                g_V_reg_317(22) <= g_V_fu_204_p2(22);
                g_V_reg_317(23) <= g_V_fu_204_p2(23);
                g_V_reg_317(24) <= g_V_fu_204_p2(24);
                g_V_reg_317(25) <= g_V_fu_204_p2(25);
                g_V_reg_317(26) <= g_V_fu_204_p2(26);
                g_V_reg_317(27) <= g_V_fu_204_p2(27);
            end if; 
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
                i_1_reg_293 <= i_1_fu_163_p2;
            end if; 
            if ((ap_ST_st7_fsm_3 = ap_CS_fsm)) then 
                i_reg_135 <= i_1_reg_293;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_56))) then 
                i_reg_135 <= ap_const_lv12_0;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (exitcond3_fu_169_p2 = ap_const_lv1_0))) then 
                j_reg_146 <= j_1_fu_174_p2;
            elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                j_reg_146 <= ap_const_lv12_0;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_298_pp0_it1))) then 
                qbit_reg_327 <= r_V_2_fu_222_p2(20 downto 20);
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                r_V_reg_307 <= r_V_fu_184_p2;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_298_pp0_it1))) then 
                tmp_7_reg_322 <= r_V_2_fu_222_p2(28 downto 21);
            end if; 
        end if;
    end process;
    b_V_reg_312(1 downto 0) <= "00";
    g_V_reg_317(2 downto 0) <= "000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm , ap_sig_bdd_56 , exitcond3_fu_169_p2 , ap_reg_ppiten_pp0_it0 , ap_sig_bdd_80 , ap_reg_ppiten_pp0_it1 , ap_reg_ppiten_pp0_it2 , ap_sig_bdd_96 , ap_reg_ppiten_pp0_it3 , exitcond4_fu_158_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_56)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_158_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond3_fu_169_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond3_fu_169_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st7_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm, exitcond4_fu_158_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond4_fu_158_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond4_fu_158_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond4_fu_158_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_56 assign process. --
    ap_sig_bdd_56_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_56 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_80 assign process. --
    ap_sig_bdd_80_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, exitcond3_reg_298)
    begin
                ap_sig_bdd_80 <= (((p_src_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond3_reg_298 = ap_const_lv1_0)) or ((exitcond3_reg_298 = ap_const_lv1_0) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond3_reg_298 = ap_const_lv1_0) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_96 assign process. --
    ap_sig_bdd_96_assign_proc : process(p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_reg_ppstg_exitcond3_reg_298_pp0_it2)
    begin
                ap_sig_bdd_96 <= (((p_dst_data_stream_0_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_298_pp0_it2)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_298_pp0_it2) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_298_pp0_it2) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)));
    end process;

    b_V_fu_194_p0 <= b_V_fu_194_p00(8 - 1 downto 0);
    b_V_fu_194_p00 <= std_logic_vector(resize(unsigned(p_src_data_stream_1_V_dout),29));
    b_V_fu_194_p2 <= std_logic_vector(resize(unsigned(b_V_fu_194_p0) * unsigned(ap_const_lv29_12C8B4), 29));
    exitcond3_fu_169_p2 <= "1" when (j_reg_146 = p_src_cols_V_read) else "0";
    exitcond4_fu_158_p2 <= "1" when (i_reg_135 = p_src_rows_V_read) else "0";
    g_V_fu_204_p0 <= g_V_fu_204_p00(8 - 1 downto 0);
    g_V_fu_204_p00 <= std_logic_vector(resize(unsigned(p_src_data_stream_0_V_dout),28));
    g_V_fu_204_p2 <= std_logic_vector(resize(unsigned(g_V_fu_204_p0) * unsigned(ap_const_lv28_99168), 28));
    i_1_fu_163_p2 <= std_logic_vector(unsigned(i_reg_135) + unsigned(ap_const_lv12_1));
    j_1_fu_174_p2 <= std_logic_vector(unsigned(j_reg_146) + unsigned(ap_const_lv12_1));
    lhs_V1_i_cast_fu_210_p1 <= std_logic_vector(resize(unsigned(r_V_reg_307),28));
    lhs_V_1_i_cast_fu_218_p1 <= std_logic_vector(resize(unsigned(r_V_1_fu_213_p2),29));
    p_Val2_8_i_cast_fu_245_p1 <= std_logic_vector(resize(unsigned(tmp_7_reg_322),9));
    p_Val2_s_fu_251_p2 <= std_logic_vector(unsigned(p_Val2_8_i_cast_fu_245_p1) + unsigned(tmp_7_i_cast_fu_248_p1));
    p_d_val_0_fu_269_p3 <= 
        ap_const_lv8_FF when (tmp_11_fu_257_p3(0) = '1') else 
        tmp_12_fu_265_p1;
    p_dst_data_stream_0_V_din <= p_d_val_0_fu_269_p3;

    -- p_dst_data_stream_0_V_write assign process. --
    p_dst_data_stream_0_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond3_reg_298_pp0_it2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_298_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            p_dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_dst_data_stream_1_V_din <= p_d_val_0_fu_269_p3;

    -- p_dst_data_stream_1_V_write assign process. --
    p_dst_data_stream_1_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond3_reg_298_pp0_it2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_298_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            p_dst_data_stream_1_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_dst_data_stream_2_V_din <= p_d_val_0_fu_269_p3;

    -- p_dst_data_stream_2_V_write assign process. --
    p_dst_data_stream_2_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond3_reg_298_pp0_it2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_298_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            p_dst_data_stream_2_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- p_src_data_stream_0_V_read assign process. --
    p_src_data_stream_0_V_read_assign_proc : process(ap_CS_fsm, exitcond3_reg_298, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_sig_bdd_96, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            p_src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- p_src_data_stream_1_V_read assign process. --
    p_src_data_stream_1_V_read_assign_proc : process(ap_CS_fsm, exitcond3_reg_298, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_sig_bdd_96, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            p_src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- p_src_data_stream_2_V_read assign process. --
    p_src_data_stream_2_V_read_assign_proc : process(ap_CS_fsm, exitcond3_reg_298, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_sig_bdd_96, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_298 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            p_src_data_stream_2_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_1_fu_213_p2 <= std_logic_vector(unsigned(g_V_reg_317) + unsigned(lhs_V1_i_cast_fu_210_p1));
    r_V_2_fu_222_p2 <= std_logic_vector(unsigned(b_V_reg_312) + unsigned(lhs_V_1_i_cast_fu_218_p1));
    r_V_fu_184_p0 <= r_V_fu_184_p00(8 - 1 downto 0);
    r_V_fu_184_p00 <= std_logic_vector(resize(unsigned(p_src_data_stream_2_V_dout),26));
    r_V_fu_184_p2 <= std_logic_vector(resize(unsigned(r_V_fu_184_p0) * unsigned(ap_const_lv26_3A5E3), 26));
    tmp_11_fu_257_p3 <= p_Val2_s_fu_251_p2(8 downto 8);
    tmp_12_fu_265_p1 <= p_Val2_s_fu_251_p2(8 - 1 downto 0);
    tmp_7_i_cast_fu_248_p1 <= std_logic_vector(resize(unsigned(qbit_reg_327),9));
end behav;

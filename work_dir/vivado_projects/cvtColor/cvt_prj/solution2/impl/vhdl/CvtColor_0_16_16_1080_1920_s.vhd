-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.1
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CvtColor_0_16_16_1080_1920_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_0_V_read : OUT STD_LOGIC;
    p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_1_V_read : OUT STD_LOGIC;
    p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_2_V_read : OUT STD_LOGIC;
    p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_0_V_write : OUT STD_LOGIC;
    p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_1_V_write : OUT STD_LOGIC;
    p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of CvtColor_0_16_16_1080_1920_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st12_fsm_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv26_3A5E3 : STD_LOGIC_VECTOR (25 downto 0) := "00000000111010010111100011";
    constant ap_const_lv28_99168 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010011001000101101000";
    constant ap_const_lv29_12C8B4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100101100100010110100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal j_reg_146 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_56 : BOOLEAN;
    signal i_1_fu_163_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_1_reg_286 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond3_fu_169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_291 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_80 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond3_reg_291_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_106 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond3_reg_291_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond3_reg_291_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond3_reg_291_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond3_reg_291_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond3_reg_291_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond3_reg_291_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_174_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_reg_300 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_reg_305 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_14_reg_305_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_reg_310 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_183_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_reg_330 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_192_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal g_V_reg_335 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_201_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal b_V_reg_340 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_1_fu_210_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_1_reg_345 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_7_reg_350 : STD_LOGIC_VECTOR (7 downto 0);
    signal qbit_reg_355 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_d_val_0_fu_265_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_d_val_0_reg_360 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond4_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_135 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_183_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_183_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_192_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_192_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_201_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_201_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal lhs_V1_i_cast_fu_207_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal lhs_V_1_i_cast_fu_215_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_2_fu_218_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_8_i_cast_fu_241_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_i_cast_fu_244_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_fu_247_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_253_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_261_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_183_ce : STD_LOGIC;
    signal grp_fu_192_ce : STD_LOGIC;
    signal grp_fu_201_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_183_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_192_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_201_p00 : STD_LOGIC_VECTOR (28 downto 0);

    component convert_to_gray_mul_8ns_18ns_26_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component convert_to_gray_mul_8ns_20ns_28_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component convert_to_gray_mul_8ns_21ns_29_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;



begin
    convert_to_gray_mul_8ns_18ns_26_3_U17 : component convert_to_gray_mul_8ns_18ns_26_3
    generic map (
        ID => 17,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_183_p0,
        din1 => grp_fu_183_p1,
        ce => grp_fu_183_ce,
        dout => grp_fu_183_p2);

    convert_to_gray_mul_8ns_20ns_28_3_U18 : component convert_to_gray_mul_8ns_20ns_28_3
    generic map (
        ID => 18,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 20,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_192_p0,
        din1 => grp_fu_192_p1,
        ce => grp_fu_192_ce,
        dout => grp_fu_192_p2);

    convert_to_gray_mul_8ns_21ns_29_3_U19 : component convert_to_gray_mul_8ns_21ns_29_3
    generic map (
        ID => 19,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 21,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_201_p0,
        din1 => grp_fu_201_p1,
        ce => grp_fu_201_ce,
        dout => grp_fu_201_p2);




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond4_fu_158_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((exitcond3_fu_169_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (exitcond3_fu_169_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2)) or ((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((exitcond3_fu_169_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg assign process. --
    ap_reg_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                ap_reg_ppstg_exitcond3_reg_291_pp0_it1 <= exitcond3_reg_291;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                ap_reg_ppstg_exitcond3_reg_291_pp0_it2 <= ap_reg_ppstg_exitcond3_reg_291_pp0_it1;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                ap_reg_ppstg_exitcond3_reg_291_pp0_it3 <= ap_reg_ppstg_exitcond3_reg_291_pp0_it2;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                ap_reg_ppstg_exitcond3_reg_291_pp0_it4 <= ap_reg_ppstg_exitcond3_reg_291_pp0_it3;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                ap_reg_ppstg_exitcond3_reg_291_pp0_it5 <= ap_reg_ppstg_exitcond3_reg_291_pp0_it4;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                ap_reg_ppstg_exitcond3_reg_291_pp0_it6 <= ap_reg_ppstg_exitcond3_reg_291_pp0_it5;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                ap_reg_ppstg_exitcond3_reg_291_pp0_it7 <= ap_reg_ppstg_exitcond3_reg_291_pp0_it6;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                ap_reg_ppstg_tmp_14_reg_305_pp0_it2 <= tmp_14_reg_305;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it4))) then 
                b_V_reg_340 <= grp_fu_201_p2;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                exitcond3_reg_291 <= exitcond3_fu_169_p2;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it3))) then 
                g_V_reg_335 <= grp_fu_192_p2;
            end if; 
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
                i_1_reg_286 <= i_1_fu_163_p2;
            end if; 
            if ((ap_ST_st12_fsm_3 = ap_CS_fsm)) then 
                i_reg_135 <= i_1_reg_286;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not(ap_sig_bdd_56))) then 
                i_reg_135 <= ap_const_lv12_0;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (exitcond3_fu_169_p2 = ap_const_lv1_0))) then 
                j_reg_146 <= j_1_fu_174_p2;
            elsif (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_158_p2))) then 
                j_reg_146 <= ap_const_lv12_0;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it6))) then 
                p_d_val_0_reg_360 <= p_d_val_0_fu_265_p3;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it5))) then 
                qbit_reg_355 <= r_V_2_fu_218_p2(20 downto 20);
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it4))) then 
                r_V_1_reg_345 <= r_V_1_fu_210_p2;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it3))) then 
                r_V_reg_330 <= grp_fu_183_p2;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                tmp_13_reg_300 <= p_src_data_stream_0_V_dout;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                tmp_14_reg_305 <= p_src_data_stream_1_V_dout;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
                tmp_15_reg_310 <= p_src_data_stream_2_V_dout;
            end if; 
            if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it5))) then 
                tmp_7_reg_350 <= r_V_2_fu_218_p2(28 downto 21);
            end if; 
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm , ap_sig_bdd_56 , exitcond3_fu_169_p2 , ap_reg_ppiten_pp0_it0 , ap_sig_bdd_80 , ap_reg_ppiten_pp0_it1 , ap_reg_ppiten_pp0_it7 , ap_sig_bdd_106 , ap_reg_ppiten_pp0_it8 , exitcond4_fu_158_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_56)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond4_fu_158_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((exitcond3_fu_169_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it7))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not((exitcond3_fu_169_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st12_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm, exitcond4_fu_158_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond4_fu_158_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond4_fu_158_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond4_fu_158_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_106 assign process. --
    ap_sig_bdd_106_assign_proc : process(p_dst_data_stream_0_V_full_n, p_dst_data_stream_1_V_full_n, p_dst_data_stream_2_V_full_n, ap_reg_ppstg_exitcond3_reg_291_pp0_it7)
    begin
                ap_sig_bdd_106 <= (((p_dst_data_stream_0_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it7)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it7) and (p_dst_data_stream_1_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it7) and (p_dst_data_stream_2_V_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_56 assign process. --
    ap_sig_bdd_56_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_56 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_80 assign process. --
    ap_sig_bdd_80_assign_proc : process(p_src_data_stream_0_V_empty_n, p_src_data_stream_1_V_empty_n, p_src_data_stream_2_V_empty_n, exitcond3_reg_291)
    begin
                ap_sig_bdd_80 <= (((p_src_data_stream_0_V_empty_n = ap_const_logic_0) and (exitcond3_reg_291 = ap_const_lv1_0)) or ((exitcond3_reg_291 = ap_const_lv1_0) and (p_src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond3_reg_291 = ap_const_lv1_0) and (p_src_data_stream_2_V_empty_n = ap_const_logic_0)));
    end process;

    exitcond3_fu_169_p2 <= "1" when (j_reg_146 = p_src_cols_V_read) else "0";
    exitcond4_fu_158_p2 <= "1" when (i_reg_135 = p_src_rows_V_read) else "0";

    -- grp_fu_183_ce assign process. --
    grp_fu_183_ce_assign_proc : process(ap_CS_fsm, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_sig_bdd_106, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_exitcond3_reg_291_pp0_it1, ap_reg_ppstg_exitcond3_reg_291_pp0_it2, ap_reg_ppstg_exitcond3_reg_291_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it2) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it3)))) then 
            grp_fu_183_ce <= ap_const_logic_1;
        else 
            grp_fu_183_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_183_p0 <= grp_fu_183_p00(8 - 1 downto 0);
    grp_fu_183_p00 <= std_logic_vector(resize(unsigned(tmp_15_reg_310),26));
    grp_fu_183_p1 <= ap_const_lv26_3A5E3(18 - 1 downto 0);

    -- grp_fu_192_ce assign process. --
    grp_fu_192_ce_assign_proc : process(ap_CS_fsm, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_sig_bdd_106, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_exitcond3_reg_291_pp0_it1, ap_reg_ppstg_exitcond3_reg_291_pp0_it2, ap_reg_ppstg_exitcond3_reg_291_pp0_it3)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it1) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it2) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it3)))) then 
            grp_fu_192_ce <= ap_const_logic_1;
        else 
            grp_fu_192_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_192_p0 <= grp_fu_192_p00(8 - 1 downto 0);
    grp_fu_192_p00 <= std_logic_vector(resize(unsigned(tmp_13_reg_300),28));
    grp_fu_192_p1 <= ap_const_lv28_99168(20 - 1 downto 0);

    -- grp_fu_201_ce assign process. --
    grp_fu_201_ce_assign_proc : process(ap_CS_fsm, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_sig_bdd_106, ap_reg_ppiten_pp0_it8, ap_reg_ppstg_exitcond3_reg_291_pp0_it2, ap_reg_ppstg_exitcond3_reg_291_pp0_it3, ap_reg_ppstg_exitcond3_reg_291_pp0_it4)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and ((ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it2) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it4)))) then 
            grp_fu_201_ce <= ap_const_logic_1;
        else 
            grp_fu_201_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_201_p0 <= grp_fu_201_p00(8 - 1 downto 0);
    grp_fu_201_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_14_reg_305_pp0_it2),29));
    grp_fu_201_p1 <= ap_const_lv29_12C8B4(21 - 1 downto 0);
    i_1_fu_163_p2 <= std_logic_vector(unsigned(i_reg_135) + unsigned(ap_const_lv12_1));
    j_1_fu_174_p2 <= std_logic_vector(unsigned(j_reg_146) + unsigned(ap_const_lv12_1));
    lhs_V1_i_cast_fu_207_p1 <= std_logic_vector(resize(unsigned(r_V_reg_330),28));
    lhs_V_1_i_cast_fu_215_p1 <= std_logic_vector(resize(unsigned(r_V_1_reg_345),29));
    p_Val2_8_i_cast_fu_241_p1 <= std_logic_vector(resize(unsigned(tmp_7_reg_350),9));
    p_Val2_s_fu_247_p2 <= std_logic_vector(unsigned(p_Val2_8_i_cast_fu_241_p1) + unsigned(tmp_7_i_cast_fu_244_p1));
    p_d_val_0_fu_265_p3 <= 
        ap_const_lv8_FF when (tmp_11_fu_253_p3(0) = '1') else 
        tmp_12_fu_261_p1;
    p_dst_data_stream_0_V_din <= p_d_val_0_reg_360;

    -- p_dst_data_stream_0_V_write assign process. --
    p_dst_data_stream_0_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond3_reg_291_pp0_it7, ap_sig_bdd_106, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it7) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            p_dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_dst_data_stream_1_V_din <= p_d_val_0_reg_360;

    -- p_dst_data_stream_1_V_write assign process. --
    p_dst_data_stream_1_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond3_reg_291_pp0_it7, ap_sig_bdd_106, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it7) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            p_dst_data_stream_1_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_dst_data_stream_2_V_din <= p_d_val_0_reg_360;

    -- p_dst_data_stream_2_V_write assign process. --
    p_dst_data_stream_2_V_write_assign_proc : process(ap_CS_fsm, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_reg_ppstg_exitcond3_reg_291_pp0_it7, ap_sig_bdd_106, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond3_reg_291_pp0_it7) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            p_dst_data_stream_2_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- p_src_data_stream_0_V_read assign process. --
    p_src_data_stream_0_V_read_assign_proc : process(ap_CS_fsm, exitcond3_reg_291, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_sig_bdd_106, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            p_src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- p_src_data_stream_1_V_read assign process. --
    p_src_data_stream_1_V_read_assign_proc : process(ap_CS_fsm, exitcond3_reg_291, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_sig_bdd_106, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            p_src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- p_src_data_stream_2_V_read assign process. --
    p_src_data_stream_2_V_read_assign_proc : process(ap_CS_fsm, exitcond3_reg_291, ap_sig_bdd_80, ap_reg_ppiten_pp0_it1, ap_sig_bdd_106, ap_reg_ppiten_pp0_it8)
    begin
        if (((ap_ST_pp0_stg0_fsm_2 = ap_CS_fsm) and (exitcond3_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_80 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_sig_bdd_106 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))))) then 
            p_src_data_stream_2_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_1_fu_210_p2 <= std_logic_vector(unsigned(g_V_reg_335) + unsigned(lhs_V1_i_cast_fu_207_p1));
    r_V_2_fu_218_p2 <= std_logic_vector(unsigned(b_V_reg_340) + unsigned(lhs_V_1_i_cast_fu_215_p1));
    tmp_11_fu_253_p3 <= p_Val2_s_fu_247_p2(8 downto 8);
    tmp_12_fu_261_p1 <= p_Val2_s_fu_247_p2(8 - 1 downto 0);
    tmp_7_i_cast_fu_244_p1 <= std_logic_vector(resize(unsigned(qbit_reg_355),9));
end behav;

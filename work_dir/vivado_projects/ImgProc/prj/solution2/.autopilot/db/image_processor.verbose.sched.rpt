

================================================================
== Vivado HLS Report for 'image_processor'
================================================================
* Date:           Fri Oct 11 15:48:46 2013

* Version:        2013.1 (build date: Thu Mar 21 12:53:03 PM 2013)
* Project:        prj
* Solution:       solution2
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   6.67|      5.48|        0.83|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    ?|    ?|    ?|    ?| dataflow |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
|ShiftMemory      |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Shift register: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 10, States = { 1 2 3 4 5 6 7 8 9 10 }

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: cols_read [1/1] 0.00ns
entry:15  %cols_read = call i32 @_ssdm_op_WireRead.i32(i32 %cols) ; <i32> [#uses=4]

ST_1: rows_read [1/1] 0.00ns
entry:16  %rows_read = call i32 @_ssdm_op_WireRead.i32(i32 %rows) ; <i32> [#uses=4]

ST_1: img_0_data_stream_0_V [1/1] 0.00ns
entry:17  %img_0_data_stream_0_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_0_data_stream_1_V [1/1] 0.00ns
entry:20  %img_0_data_stream_1_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_0_data_stream_2_V [1/1] 0.00ns
entry:23  %img_0_data_stream_2_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_1_data_stream_0_V [1/1] 0.00ns
entry:26  %img_1_data_stream_0_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_1_data_stream_1_V [1/1] 0.00ns
entry:29  %img_1_data_stream_1_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_1_data_stream_2_V [1/1] 0.00ns
entry:32  %img_1_data_stream_2_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_2_data_stream_0_V [1/1] 0.00ns
entry:35  %img_2_data_stream_0_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_2_data_stream_1_V [1/1] 0.00ns
entry:38  %img_2_data_stream_1_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_2_data_stream_2_V [1/1] 0.00ns
entry:41  %img_2_data_stream_2_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_3_data_stream_0_V [1/1] 0.00ns
entry:44  %img_3_data_stream_0_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_3_data_stream_1_V [1/1] 0.00ns
entry:47  %img_3_data_stream_1_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: img_3_data_stream_2_V [1/1] 0.00ns
entry:50  %img_3_data_stream_2_V = alloca i8, align 1     ; <i8*> [#uses=5]

ST_1: call_ret [1/1] 0.00ns
entry:60  %call_ret = call fastcc %"hls::Mat<1080, 1920, 16>::init_ret" @init(i32 %rows_read, i32 %cols_read) ; <%"hls::Mat<1080, 1920, 16>::init_ret"> [#uses=4]

ST_1: img_0_rows_V [1/1] 0.00ns
entry:61  %img_0_rows_V = extractvalue %"hls::Mat<1080, 1920, 16>::init_ret" %call_ret, 0 ; <i12> [#uses=1]

ST_1: img_0_rows_V_channel [1/1] 0.00ns
entry:62  %img_0_rows_V_channel = extractvalue %"hls::Mat<1080, 1920, 16>::init_ret" %call_ret, 1 ; <i12> [#uses=1]

ST_1: img_0_cols_V [1/1] 0.00ns
entry:63  %img_0_cols_V = extractvalue %"hls::Mat<1080, 1920, 16>::init_ret" %call_ret, 2 ; <i12> [#uses=1]

ST_1: img_0_cols_V_channel [1/1] 0.00ns
entry:64  %img_0_cols_V_channel = extractvalue %"hls::Mat<1080, 1920, 16>::init_ret" %call_ret, 3 ; <i12> [#uses=1]

ST_1: stg_30 [2/2] 0.00ns
entry:74  call fastcc void @"AXIvideo2Mat<32,1080,1920,16>"(i32* %input_V_data_V, i4* %input_V_keep_V, i4* %input_V_strb_V, i1* %input_V_user_V, i1* %input_V_last_V, i1* %input_V_id_V, i1* %input_V_dest_V, i12 %img_0_rows_V, i12 %img_0_cols_V, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_1_V, i8* %img_0_data_stream_2_V)


 <State 2>: 0.00ns
ST_2: stg_31 [1/2] 0.00ns
entry:74  call fastcc void @"AXIvideo2Mat<32,1080,1920,16>"(i32* %input_V_data_V, i4* %input_V_keep_V, i4* %input_V_strb_V, i1* %input_V_user_V, i1* %input_V_last_V, i1* %input_V_id_V, i1* %input_V_dest_V, i12 %img_0_rows_V, i12 %img_0_cols_V, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_1_V, i8* %img_0_data_stream_2_V)


 <State 3>: 0.00ns
ST_3: stg_32 [2/2] 0.00ns
entry:75  call fastcc void @"CvtColor<0,16,16,1080,1920>"(i12 %img_0_rows_V_channel, i12 %img_0_cols_V_channel, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_1_V, i8* %img_0_data_stream_2_V, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_1_V, i8* %img_1_data_stream_2_V)


 <State 4>: 0.00ns
ST_4: stg_33 [1/2] 0.00ns
entry:75  call fastcc void @"CvtColor<0,16,16,1080,1920>"(i12 %img_0_rows_V_channel, i12 %img_0_cols_V_channel, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_1_V, i8* %img_0_data_stream_2_V, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_1_V, i8* %img_1_data_stream_2_V)


 <State 5>: 0.00ns
ST_5: call_ret1 [1/1] 0.00ns
entry:65  %call_ret1 = call fastcc %"hls::Mat<1080, 1920, 16>::init.1_ret" @init.1(i32 %rows_read, i32 %cols_read) ; <%"hls::Mat<1080, 1920, 16>::init.1_ret"> [#uses=2]

ST_5: img_1_rows_V [1/1] 0.00ns
entry:66  %img_1_rows_V = extractvalue %"hls::Mat<1080, 1920, 16>::init.1_ret" %call_ret1, 0 ; <i12> [#uses=1]

ST_5: img_1_cols_V [1/1] 0.00ns
entry:67  %img_1_cols_V = extractvalue %"hls::Mat<1080, 1920, 16>::init.1_ret" %call_ret1, 1 ; <i12> [#uses=1]

ST_5: call_ret2 [1/1] 0.00ns
entry:68  %call_ret2 = call fastcc %"hls::Mat<1080, 1920, 16>::init.1_ret" @init.2(i32 %rows_read, i32 %cols_read) ; <%"hls::Mat<1080, 1920, 16>::init.1_ret"> [#uses=2]

ST_5: img_2_rows_V [1/1] 0.00ns
entry:69  %img_2_rows_V = extractvalue %"hls::Mat<1080, 1920, 16>::init.1_ret" %call_ret2, 0 ; <i12> [#uses=1]

ST_5: img_2_cols_V [1/1] 0.00ns
entry:70  %img_2_cols_V = extractvalue %"hls::Mat<1080, 1920, 16>::init.1_ret" %call_ret2, 1 ; <i12> [#uses=1]

ST_5: call_ret3 [1/1] 0.00ns
entry:71  %call_ret3 = call fastcc %"hls::Mat<1080, 1920, 16>::init.1_ret" @init.3(i32 %rows_read, i32 %cols_read) ; <%"hls::Mat<1080, 1920, 16>::init.1_ret"> [#uses=2]

ST_5: img_3_rows_V [1/1] 0.00ns
entry:72  %img_3_rows_V = extractvalue %"hls::Mat<1080, 1920, 16>::init.1_ret" %call_ret3, 0 ; <i12> [#uses=1]

ST_5: img_3_cols_V [1/1] 0.00ns
entry:73  %img_3_cols_V = extractvalue %"hls::Mat<1080, 1920, 16>::init.1_ret" %call_ret3, 1 ; <i12> [#uses=1]

ST_5: stg_43 [2/2] 0.00ns
entry:76  call fastcc void @Sobel(i12 %img_1_rows_V, i12 %img_1_cols_V, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_1_V, i8* %img_1_data_stream_2_V, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_1_V, i8* %img_2_data_stream_2_V)


 <State 6>: 0.00ns
ST_6: stg_44 [1/2] 0.00ns
entry:76  call fastcc void @Sobel(i12 %img_1_rows_V, i12 %img_1_cols_V, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_1_V, i8* %img_1_data_stream_2_V, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_1_V, i8* %img_2_data_stream_2_V)


 <State 7>: 0.00ns
ST_7: stg_45 [2/2] 0.00ns
entry:77  call fastcc void @"Erode<16,16,1080,1920>"(i12 %img_2_rows_V, i12 %img_2_cols_V, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_1_V, i8* %img_2_data_stream_2_V, i8* %img_3_data_stream_0_V, i8* %img_3_data_stream_1_V, i8* %img_3_data_stream_2_V)


 <State 8>: 0.00ns
ST_8: stg_46 [1/2] 0.00ns
entry:77  call fastcc void @"Erode<16,16,1080,1920>"(i12 %img_2_rows_V, i12 %img_2_cols_V, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_1_V, i8* %img_2_data_stream_2_V, i8* %img_3_data_stream_0_V, i8* %img_3_data_stream_1_V, i8* %img_3_data_stream_2_V)


 <State 9>: 1.89ns
ST_9: stg_47 [2/2] 1.89ns
entry:78  call fastcc void @"Mat2AXIvideo<32,1080,1920,16>"(i12 %img_3_rows_V, i12 %img_3_cols_V, i8* %img_3_data_stream_0_V, i8* %img_3_data_stream_1_V, i8* %img_3_data_stream_2_V, i32* %output_V_data_V, i4* %output_V_keep_V, i4* %output_V_strb_V, i1* %output_V_user_V, i1* %output_V_last_V, i1* %output_V_id_V, i1* %output_V_dest_V)


 <State 10>: 0.00ns
ST_10: stg_48 [1/1] 0.00ns
entry:0  call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str20) nounwind

ST_10: empty [1/1] 0.00ns
entry:1  %empty = call i32 (...)* @_ssdm_op_SpecFifo(i1* %output_V_dest_V, [8 x i8]* @str77, i32 0, i32 0, [8 x i8]* @str77) ; <i32> [#uses=0]

ST_10: empty_38 [1/1] 0.00ns
entry:2  %empty_38 = call i32 (...)* @_ssdm_op_SpecFifo(i1* %output_V_id_V, [8 x i8]* @str76, i32 0, i32 0, [8 x i8]* @str76) ; <i32> [#uses=0]

ST_10: empty_39 [1/1] 0.00ns
entry:3  %empty_39 = call i32 (...)* @_ssdm_op_SpecFifo(i1* %output_V_last_V, [8 x i8]* @str75, i32 0, i32 0, [8 x i8]* @str75) ; <i32> [#uses=0]

ST_10: empty_40 [1/1] 0.00ns
entry:4  %empty_40 = call i32 (...)* @_ssdm_op_SpecFifo(i1* %output_V_user_V, [8 x i8]* @str74, i32 0, i32 0, [8 x i8]* @str74) ; <i32> [#uses=0]

ST_10: empty_41 [1/1] 0.00ns
entry:5  %empty_41 = call i32 (...)* @_ssdm_op_SpecFifo(i4* %output_V_strb_V, [8 x i8]* @str73, i32 0, i32 0, [8 x i8]* @str73) ; <i32> [#uses=0]

ST_10: empty_42 [1/1] 0.00ns
entry:6  %empty_42 = call i32 (...)* @_ssdm_op_SpecFifo(i4* %output_V_keep_V, [8 x i8]* @str72, i32 0, i32 0, [8 x i8]* @str72) ; <i32> [#uses=0]

ST_10: empty_43 [1/1] 0.00ns
entry:7  %empty_43 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %output_V_data_V, [8 x i8]* @str71, i32 0, i32 0, [8 x i8]* @str71) ; <i32> [#uses=0]

ST_10: empty_44 [1/1] 0.00ns
entry:8  %empty_44 = call i32 (...)* @_ssdm_op_SpecFifo(i1* %input_V_dest_V, [8 x i8]* @str70, i32 0, i32 0, [8 x i8]* @str70) ; <i32> [#uses=0]

ST_10: empty_45 [1/1] 0.00ns
entry:9  %empty_45 = call i32 (...)* @_ssdm_op_SpecFifo(i1* %input_V_id_V, [8 x i8]* @str69, i32 0, i32 0, [8 x i8]* @str69) ; <i32> [#uses=0]

ST_10: empty_46 [1/1] 0.00ns
entry:10  %empty_46 = call i32 (...)* @_ssdm_op_SpecFifo(i1* %input_V_last_V, [8 x i8]* @str68, i32 0, i32 0, [8 x i8]* @str68) ; <i32> [#uses=0]

ST_10: empty_47 [1/1] 0.00ns
entry:11  %empty_47 = call i32 (...)* @_ssdm_op_SpecFifo(i1* %input_V_user_V, [8 x i8]* @str67, i32 0, i32 0, [8 x i8]* @str67) ; <i32> [#uses=0]

ST_10: empty_48 [1/1] 0.00ns
entry:12  %empty_48 = call i32 (...)* @_ssdm_op_SpecFifo(i4* %input_V_strb_V, [8 x i8]* @str66, i32 0, i32 0, [8 x i8]* @str66) ; <i32> [#uses=0]

ST_10: empty_49 [1/1] 0.00ns
entry:13  %empty_49 = call i32 (...)* @_ssdm_op_SpecFifo(i4* %input_V_keep_V, [8 x i8]* @str65, i32 0, i32 0, [8 x i8]* @str65) ; <i32> [#uses=0]

ST_10: empty_50 [1/1] 0.00ns
entry:14  %empty_50 = call i32 (...)* @_ssdm_op_SpecFifo(i32* %input_V_data_V, [8 x i8]* @str, i32 0, i32 0, [8 x i8]* @str) ; <i32> [#uses=0]

ST_10: empty_51 [1/1] 0.00ns
entry:18  %empty_51 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str135, i32 1, [1 x i8]* @str136, [1 x i8]* @str136, i32 1, i32 1, i8* %img_0_data_stream_0_V, i8* %img_0_data_stream_0_V) ; <i32> [#uses=0]

ST_10: empty_52 [1/1] 0.00ns
entry:19  %empty_52 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_0_data_stream_0_V, [8 x i8]* @str137, i32 0, i32 0, [8 x i8]* @str137) ; <i32> [#uses=0]

ST_10: empty_53 [1/1] 0.00ns
entry:21  %empty_53 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str138, i32 1, [1 x i8]* @str139, [1 x i8]* @str139, i32 1, i32 1, i8* %img_0_data_stream_1_V, i8* %img_0_data_stream_1_V) ; <i32> [#uses=0]

ST_10: empty_54 [1/1] 0.00ns
entry:22  %empty_54 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_0_data_stream_1_V, [8 x i8]* @str140, i32 0, i32 0, [8 x i8]* @str140) ; <i32> [#uses=0]

ST_10: empty_55 [1/1] 0.00ns
entry:24  %empty_55 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str141, i32 1, [1 x i8]* @str142, [1 x i8]* @str142, i32 1, i32 1, i8* %img_0_data_stream_2_V, i8* %img_0_data_stream_2_V) ; <i32> [#uses=0]

ST_10: empty_56 [1/1] 0.00ns
entry:25  %empty_56 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_0_data_stream_2_V, [8 x i8]* @str143, i32 0, i32 0, [8 x i8]* @str143) ; <i32> [#uses=0]

ST_10: empty_57 [1/1] 0.00ns
entry:27  %empty_57 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str144, i32 1, [1 x i8]* @str145, [1 x i8]* @str145, i32 1, i32 1, i8* %img_1_data_stream_0_V, i8* %img_1_data_stream_0_V) ; <i32> [#uses=0]

ST_10: empty_58 [1/1] 0.00ns
entry:28  %empty_58 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_1_data_stream_0_V, [8 x i8]* @str146, i32 0, i32 0, [8 x i8]* @str146) ; <i32> [#uses=0]

ST_10: empty_59 [1/1] 0.00ns
entry:30  %empty_59 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str147, i32 1, [1 x i8]* @str148, [1 x i8]* @str148, i32 1, i32 1, i8* %img_1_data_stream_1_V, i8* %img_1_data_stream_1_V) ; <i32> [#uses=0]

ST_10: empty_60 [1/1] 0.00ns
entry:31  %empty_60 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_1_data_stream_1_V, [8 x i8]* @str149, i32 0, i32 0, [8 x i8]* @str149) ; <i32> [#uses=0]

ST_10: empty_61 [1/1] 0.00ns
entry:33  %empty_61 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str150, i32 1, [1 x i8]* @str151, [1 x i8]* @str151, i32 1, i32 1, i8* %img_1_data_stream_2_V, i8* %img_1_data_stream_2_V) ; <i32> [#uses=0]

ST_10: empty_62 [1/1] 0.00ns
entry:34  %empty_62 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_1_data_stream_2_V, [8 x i8]* @str152, i32 0, i32 0, [8 x i8]* @str152) ; <i32> [#uses=0]

ST_10: empty_63 [1/1] 0.00ns
entry:36  %empty_63 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str153, i32 1, [1 x i8]* @str154, [1 x i8]* @str154, i32 1, i32 1, i8* %img_2_data_stream_0_V, i8* %img_2_data_stream_0_V) ; <i32> [#uses=0]

ST_10: empty_64 [1/1] 0.00ns
entry:37  %empty_64 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_2_data_stream_0_V, [8 x i8]* @str155, i32 0, i32 0, [8 x i8]* @str155) ; <i32> [#uses=0]

ST_10: empty_65 [1/1] 0.00ns
entry:39  %empty_65 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str156, i32 1, [1 x i8]* @str157, [1 x i8]* @str157, i32 1, i32 1, i8* %img_2_data_stream_1_V, i8* %img_2_data_stream_1_V) ; <i32> [#uses=0]

ST_10: empty_66 [1/1] 0.00ns
entry:40  %empty_66 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_2_data_stream_1_V, [8 x i8]* @str158, i32 0, i32 0, [8 x i8]* @str158) ; <i32> [#uses=0]

ST_10: empty_67 [1/1] 0.00ns
entry:42  %empty_67 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str159, i32 1, [1 x i8]* @str160, [1 x i8]* @str160, i32 1, i32 1, i8* %img_2_data_stream_2_V, i8* %img_2_data_stream_2_V) ; <i32> [#uses=0]

ST_10: empty_68 [1/1] 0.00ns
entry:43  %empty_68 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_2_data_stream_2_V, [8 x i8]* @str161, i32 0, i32 0, [8 x i8]* @str161) ; <i32> [#uses=0]

ST_10: empty_69 [1/1] 0.00ns
entry:45  %empty_69 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str162, i32 1, [1 x i8]* @str163, [1 x i8]* @str163, i32 1, i32 1, i8* %img_3_data_stream_0_V, i8* %img_3_data_stream_0_V) ; <i32> [#uses=0]

ST_10: empty_70 [1/1] 0.00ns
entry:46  %empty_70 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_3_data_stream_0_V, [8 x i8]* @str164, i32 0, i32 0, [8 x i8]* @str164) ; <i32> [#uses=0]

ST_10: empty_71 [1/1] 0.00ns
entry:48  %empty_71 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str165, i32 1, [1 x i8]* @str166, [1 x i8]* @str166, i32 1, i32 1, i8* %img_3_data_stream_1_V, i8* %img_3_data_stream_1_V) ; <i32> [#uses=0]

ST_10: empty_72 [1/1] 0.00ns
entry:49  %empty_72 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_3_data_stream_1_V, [8 x i8]* @str167, i32 0, i32 0, [8 x i8]* @str167) ; <i32> [#uses=0]

ST_10: empty_73 [1/1] 0.00ns
entry:51  %empty_73 = call i32 (...)* @_ssdm_op_SpecChannel([22 x i8]* @str168, i32 1, [1 x i8]* @str169, [1 x i8]* @str169, i32 1, i32 1, i8* %img_3_data_stream_2_V, i8* %img_3_data_stream_2_V) ; <i32> [#uses=0]

ST_10: empty_74 [1/1] 0.00ns
entry:52  %empty_74 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %img_3_data_stream_2_V, [8 x i8]* @str170, i32 0, i32 0, [8 x i8]* @str170) ; <i32> [#uses=0]

ST_10: stg_87 [1/1] 0.00ns
entry:53  call void (...)* @_ssdm_op_SpecIFCore(i32* %input_V_data_V, i4* %input_V_keep_V, i4* %input_V_strb_V, i1* %input_V_user_V, i1* %input_V_last_V, i1* %input_V_id_V, i1* %input_V_dest_V, [1 x i8]* @p_str20, [5 x i8]* @p_str41, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [25 x i8]* @p_str42)

ST_10: stg_88 [1/1] 0.00ns
entry:54  call void (...)* @_ssdm_op_SpecIFCore(i32* %output_V_data_V, i4* %output_V_keep_V, i4* %output_V_strb_V, i1* %output_V_user_V, i1* %output_V_last_V, i1* %output_V_id_V, i1* %output_V_dest_V, [1 x i8]* @p_str20, [5 x i8]* @p_str41, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [26 x i8]* @p_str43)

ST_10: stg_89 [1/1] 0.00ns
entry:55  call void (...)* @_ssdm_op_SpecIFCore(i32 %rows, [1 x i8]* @p_str20, [10 x i8]* @p_str44, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [24 x i8]* @p_str45)

ST_10: stg_90 [1/1] 0.00ns
entry:56  call void (...)* @_ssdm_op_SpecIFCore(i32 %cols, [1 x i8]* @p_str20, [10 x i8]* @p_str44, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [24 x i8]* @p_str45)

ST_10: stg_91 [1/1] 0.00ns
entry:57  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str20, [10 x i8]* @p_str44, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [1 x i8]* @p_str20, [24 x i8]* @p_str45)

ST_10: stg_92 [1/1] 0.00ns
entry:58  call void (...)* @_ssdm_op_SpecWire(i32 %rows, [10 x i8]* @p_str46, i32 0, i32 0, [1 x i8]* @p_str20) nounwind

ST_10: stg_93 [1/1] 0.00ns
entry:59  call void (...)* @_ssdm_op_SpecWire(i32 %cols, [10 x i8]* @p_str46, i32 0, i32 0, [1 x i8]* @p_str20) nounwind

ST_10: stg_94 [1/2] 0.00ns
entry:78  call fastcc void @"Mat2AXIvideo<32,1080,1920,16>"(i12 %img_3_rows_V, i12 %img_3_cols_V, i8* %img_3_data_stream_0_V, i8* %img_3_data_stream_1_V, i8* %img_3_data_stream_2_V, i32* %output_V_data_V, i4* %output_V_keep_V, i4* %output_V_strb_V, i1* %output_V_user_V, i1* %output_V_last_V, i1* %output_V_id_V, i1* %output_V_dest_V)

ST_10: stg_95 [1/1] 0.00ns
entry:79  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

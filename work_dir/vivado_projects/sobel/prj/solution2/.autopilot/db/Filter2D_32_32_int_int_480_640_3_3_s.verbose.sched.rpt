

================================================================
== Vivado HLS Report for 'Filter2D_32_32_int_int_480_640_3_3_s'
================================================================
* Date:           Sat Jul  4 08:28:00 2015

* Version:        2013.3 (build date: Wed Oct 16 18:12:55 PM 2013)
* Project:        prj
* Solution:       solution2
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+--------+----------+------------+
    |  Clock  | Target | Estimated| Uncertainty|
    +---------+--------+----------+------------+
    |default  |  125.00|     26.87|       15.62|
    +---------+--------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+--------+-----+--------+---------+
    |    Latency   |   Interval   | Pipeline|
    | min |   max  | min |   max  |   Type  |
    +-----+--------+-----+--------+---------+
    |   36|  309601|   36|  309601|   none  |
    +-----+--------+-----+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+-----+--------+----------+-----------+-----------+---------+----------+
        |               |    Latency   | Iteration|  Initiation Interval  |   Trip  |          |
        |   Loop Name   | min |   max  |  Latency |  achieved |   target  |  Count  | Pipelined|
        +---------------+-----+--------+----------+-----------+-----------+---------+----------+
        |- loop_height  |   35|  309600|  7 ~ 645 |          -|          -| 5 ~ 480 |    no    |
        | + loop_width  |    4|     642|         4|          1|          1| 2 ~ 640 |    yes   |
        +---------------+-----+--------+----------+-----------+-----------+---------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
|ShiftMemory      |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Shift register: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 7
* Pipeline: 1
  Pipeline-0: II = 1, D = 4, States = { 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp_3)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	7  / (!tmp_7)
	6  / (tmp_7)
6 --> 
	3  / true
7 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.84ns
ST_1: src_kernel_win_0_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:0  %src_kernel_win_0_val_0_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:1  %src_kernel_win_0_val_0_2 = alloca i8, align 1

ST_1: col_buf_2_val_0_0_1 [1/1] 0.00ns
arrayctor.loop.i:2  %col_buf_2_val_0_0_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_1 [1/1] 0.00ns
arrayctor.loop.i:3  %src_kernel_win_0_val_2_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_1 [1/1] 0.00ns
arrayctor.loop.i:4  %src_kernel_win_0_val_1_1 = alloca i8, align 1

ST_1: src_kernel_win_0_val_1_2 [1/1] 0.00ns
arrayctor.loop.i:5  %src_kernel_win_0_val_1_2 = alloca i8, align 1

ST_1: col_buf_2_val_0_0_2 [1/1] 0.00ns
arrayctor.loop.i:6  %col_buf_2_val_0_0_2 = alloca i8, align 1

ST_1: src_kernel_win_0_val_2_2 [1/1] 0.00ns
arrayctor.loop.i:7  %src_kernel_win_0_val_2_2 = alloca i8, align 1

ST_1: col_buf_2_val_0_0_3 [1/1] 0.00ns
arrayctor.loop.i:8  %col_buf_2_val_0_0_3 = alloca i8, align 1

ST_1: src_kernel_win_1_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:9  %src_kernel_win_1_val_0_1 = alloca i8, align 1

ST_1: src_kernel_win_1_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:10  %src_kernel_win_1_val_0_2 = alloca i8, align 1

ST_1: right_border_buf_2_val_1_2 [1/1] 0.00ns
arrayctor.loop.i:11  %right_border_buf_2_val_1_2 = alloca i8, align 1

ST_1: src_kernel_win_1_val_2_1 [1/1] 0.00ns
arrayctor.loop.i:12  %src_kernel_win_1_val_2_1 = alloca i8, align 1

ST_1: src_kernel_win_1_val_1_1 [1/1] 0.00ns
arrayctor.loop.i:13  %src_kernel_win_1_val_1_1 = alloca i8, align 1

ST_1: src_kernel_win_1_val_1_2 [1/1] 0.00ns
arrayctor.loop.i:14  %src_kernel_win_1_val_1_2 = alloca i8, align 1

ST_1: right_border_buf_2_val_1_2_1 [1/1] 0.00ns
arrayctor.loop.i:15  %right_border_buf_2_val_1_2_1 = alloca i8, align 1

ST_1: src_kernel_win_1_val_2_2 [1/1] 0.00ns
arrayctor.loop.i:16  %src_kernel_win_1_val_2_2 = alloca i8, align 1

ST_1: right_border_buf_2_val_1_2_2 [1/1] 0.00ns
arrayctor.loop.i:17  %right_border_buf_2_val_1_2_2 = alloca i8, align 1

ST_1: src_kernel_win_2_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:18  %src_kernel_win_2_val_0_1 = alloca i8, align 1

ST_1: src_kernel_win_2_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:19  %src_kernel_win_2_val_0_2 = alloca i8, align 1

ST_1: col_buf_1_val_0_0_1 [1/1] 0.00ns
arrayctor.loop.i:20  %col_buf_1_val_0_0_1 = alloca i8, align 1

ST_1: src_kernel_win_2_val_2_1 [1/1] 0.00ns
arrayctor.loop.i:21  %src_kernel_win_2_val_2_1 = alloca i8, align 1

ST_1: src_kernel_win_2_val_1_1 [1/1] 0.00ns
arrayctor.loop.i:22  %src_kernel_win_2_val_1_1 = alloca i8, align 1

ST_1: src_kernel_win_2_val_1_2 [1/1] 0.00ns
arrayctor.loop.i:23  %src_kernel_win_2_val_1_2 = alloca i8, align 1

ST_1: col_buf_1_val_0_0_2 [1/1] 0.00ns
arrayctor.loop.i:24  %col_buf_1_val_0_0_2 = alloca i8, align 1

ST_1: src_kernel_win_2_val_2_2 [1/1] 0.00ns
arrayctor.loop.i:25  %src_kernel_win_2_val_2_2 = alloca i8, align 1

ST_1: col_buf_1_val_0_0_3 [1/1] 0.00ns
arrayctor.loop.i:26  %col_buf_1_val_0_0_3 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_2 [1/1] 0.00ns
arrayctor.loop.i:27  %right_border_buf_0_val_1_2 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_2_1 [1/1] 0.00ns
arrayctor.loop.i:28  %right_border_buf_0_val_1_2_1 = alloca i8, align 1

ST_1: right_border_buf_0_val_1_2_2 [1/1] 0.00ns
arrayctor.loop.i:29  %right_border_buf_0_val_1_2_2 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_1 [1/1] 0.00ns
arrayctor.loop.i:30  %col_buf_0_val_0_0_1 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_2 [1/1] 0.00ns
arrayctor.loop.i:31  %col_buf_0_val_0_0_2 = alloca i8, align 1

ST_1: col_buf_0_val_0_0_3 [1/1] 0.00ns
arrayctor.loop.i:32  %col_buf_0_val_0_0_3 = alloca i8, align 1

ST_1: right_border_buf_1_val_1_2 [1/1] 0.00ns
arrayctor.loop.i:33  %right_border_buf_1_val_1_2 = alloca i8, align 1

ST_1: right_border_buf_1_val_1_2_1 [1/1] 0.00ns
arrayctor.loop.i:34  %right_border_buf_1_val_1_2_1 = alloca i8, align 1

ST_1: right_border_buf_1_val_1_2_2 [1/1] 0.00ns
arrayctor.loop.i:35  %right_border_buf_1_val_1_2_2 = alloca i8, align 1

ST_1: empty [1/1] 0.00ns
arrayctor.loop.i:36  %empty = call i32 (...)* @_ssdm_op_SpecFifo(i8* %p_dst_data_stream_2_V, [8 x i8]* @str143, i32 0, i32 0, i32 0, [8 x i8]* @str143)

ST_1: empty_93 [1/1] 0.00ns
arrayctor.loop.i:37  %empty_93 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %p_dst_data_stream_1_V, [8 x i8]* @str140, i32 0, i32 0, i32 0, [8 x i8]* @str140)

ST_1: empty_94 [1/1] 0.00ns
arrayctor.loop.i:38  %empty_94 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %p_dst_data_stream_0_V, [8 x i8]* @str137, i32 0, i32 0, i32 0, [8 x i8]* @str137)

ST_1: empty_95 [1/1] 0.00ns
arrayctor.loop.i:39  %empty_95 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %p_src_data_stream_2_V, [8 x i8]* @str134, i32 0, i32 0, i32 0, [8 x i8]* @str134)

ST_1: empty_96 [1/1] 0.00ns
arrayctor.loop.i:40  %empty_96 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %p_src_data_stream_1_V, [8 x i8]* @str131, i32 0, i32 0, i32 0, [8 x i8]* @str131)

ST_1: empty_97 [1/1] 0.00ns
arrayctor.loop.i:41  %empty_97 = call i32 (...)* @_ssdm_op_SpecFifo(i8* %p_src_data_stream_0_V, [8 x i8]* @str128, i32 0, i32 0, i32 0, [8 x i8]* @str128)

ST_1: p_src_cols_V_read_1 [1/1] 0.00ns
arrayctor.loop.i:42  %p_src_cols_V_read_1 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_src_cols_V_read)

ST_1: p_src_rows_V_read_1 [1/1] 0.00ns
arrayctor.loop.i:43  %p_src_rows_V_read_1 = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %p_src_rows_V_read)

ST_1: k_buf_0_val_0 [1/1] 0.00ns
arrayctor.loop.i:44  %k_buf_0_val_0 = alloca [640 x i8], align 1

ST_1: k_buf_0_val_1 [1/1] 0.00ns
arrayctor.loop.i:45  %k_buf_0_val_1 = alloca [640 x i8], align 1

ST_1: k_buf_0_val_2 [1/1] 0.00ns
arrayctor.loop.i:46  %k_buf_0_val_2 = alloca [640 x i8], align 1

ST_1: k_buf_1_val_0 [1/1] 0.00ns
arrayctor.loop.i:47  %k_buf_1_val_0 = alloca [640 x i8], align 1

ST_1: k_buf_1_val_1 [1/1] 0.00ns
arrayctor.loop.i:48  %k_buf_1_val_1 = alloca [640 x i8], align 1

ST_1: k_buf_1_val_2 [1/1] 0.00ns
arrayctor.loop.i:49  %k_buf_1_val_2 = alloca [640 x i8], align 1

ST_1: k_buf_2_val_0 [1/1] 0.00ns
arrayctor.loop.i:50  %k_buf_2_val_0 = alloca [640 x i8], align 1

ST_1: k_buf_2_val_1 [1/1] 0.00ns
arrayctor.loop.i:51  %k_buf_2_val_1 = alloca [640 x i8], align 1

ST_1: k_buf_2_val_2 [1/1] 0.00ns
arrayctor.loop.i:52  %k_buf_2_val_2 = alloca [640 x i8], align 1

ST_1: right_border_buf_0_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:53  %right_border_buf_0_val_0_0 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:54  %right_border_buf_0_val_0_1 = alloca i8, align 1

ST_1: right_border_buf_0_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:55  %right_border_buf_0_val_0_2 = alloca i8, align 1

ST_1: right_border_buf_1_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:56  %right_border_buf_1_val_0_0 = alloca i8, align 1

ST_1: right_border_buf_1_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:57  %right_border_buf_1_val_0_1 = alloca i8, align 1

ST_1: right_border_buf_1_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:58  %right_border_buf_1_val_0_2 = alloca i8, align 1

ST_1: right_border_buf_2_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:59  %right_border_buf_2_val_0_0 = alloca i8, align 1

ST_1: right_border_buf_2_val_0_1 [1/1] 0.00ns
arrayctor.loop.i:60  %right_border_buf_2_val_0_1 = alloca i8, align 1

ST_1: right_border_buf_2_val_0_2 [1/1] 0.00ns
arrayctor.loop.i:61  %right_border_buf_2_val_0_2 = alloca i8, align 1

ST_1: col_buf_0_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:62  %col_buf_0_val_0_0 = alloca i8, align 1

ST_1: col_buf_1_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:63  %col_buf_1_val_0_0 = alloca i8, align 1

ST_1: col_buf_2_val_0_0 [1/1] 0.00ns
arrayctor.loop.i:64  %col_buf_2_val_0_0 = alloca i8, align 1

ST_1: rows_cast [1/1] 0.00ns
arrayctor.loop.i:65  %rows_cast = zext i12 %p_src_rows_V_read_1 to i13

ST_1: cols_cast1 [1/1] 0.00ns
arrayctor.loop.i:66  %cols_cast1 = zext i12 %p_src_cols_V_read_1 to i14

ST_1: cols_cast [1/1] 0.00ns
arrayctor.loop.i:67  %cols_cast = zext i12 %p_src_cols_V_read_1 to i13

ST_1: rbegin_i_i [1/1] 0.00ns
arrayctor.loop.i:68  %rbegin_i_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([60 x i8]* @p_str1) nounwind

ST_1: rend_i_i [1/1] 0.00ns
arrayctor.loop.i:69  %rend_i_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([60 x i8]* @p_str1, i32 %rbegin_i_i) nounwind

ST_1: rbegin_i_i_1 [1/1] 0.00ns
arrayctor.loop.i:70  %rbegin_i_i_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([60 x i8]* @p_str1) nounwind

ST_1: rend_i_i_1 [1/1] 0.00ns
arrayctor.loop.i:71  %rend_i_i_1 = call i32 (...)* @_ssdm_op_SpecRegionEnd([60 x i8]* @p_str1, i32 %rbegin_i_i_1) nounwind

ST_1: rbegin_i_i_2 [1/1] 0.00ns
arrayctor.loop.i:72  %rbegin_i_i_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([60 x i8]* @p_str1) nounwind

ST_1: rend_i_i_2 [1/1] 0.00ns
arrayctor.loop.i:73  %rend_i_i_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([60 x i8]* @p_str1, i32 %rbegin_i_i_2) nounwind

ST_1: rbegin_i249_i [1/1] 0.00ns
arrayctor.loop.i:74  %rbegin_i249_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str2) nounwind

ST_1: rend_i250_i [1/1] 0.00ns
arrayctor.loop.i:75  %rend_i250_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str2, i32 %rbegin_i249_i) nounwind

ST_1: rbegin_i249_i_1 [1/1] 0.00ns
arrayctor.loop.i:76  %rbegin_i249_i_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str2) nounwind

ST_1: rend_i250_i_1 [1/1] 0.00ns
arrayctor.loop.i:77  %rend_i250_i_1 = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str2, i32 %rbegin_i249_i_1) nounwind

ST_1: rbegin_i249_i_2 [1/1] 0.00ns
arrayctor.loop.i:78  %rbegin_i249_i_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str2) nounwind

ST_1: rend_i250_i_2 [1/1] 0.00ns
arrayctor.loop.i:79  %rend_i250_i_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str2, i32 %rbegin_i249_i_2) nounwind

ST_1: rbegin_i251_i [1/1] 0.00ns
arrayctor.loop.i:80  %rbegin_i251_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str4) nounwind

ST_1: rend_i252_i [1/1] 0.00ns
arrayctor.loop.i:81  %rend_i252_i = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str4, i32 %rbegin_i251_i) nounwind

ST_1: rbegin_i251_i_1 [1/1] 0.00ns
arrayctor.loop.i:82  %rbegin_i251_i_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str4) nounwind

ST_1: rend_i252_i_1 [1/1] 0.00ns
arrayctor.loop.i:83  %rend_i252_i_1 = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str4, i32 %rbegin_i251_i_1) nounwind

ST_1: rbegin_i251_i_2 [1/1] 0.00ns
arrayctor.loop.i:84  %rbegin_i251_i_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([58 x i8]* @p_str4) nounwind

ST_1: rend_i252_i_2 [1/1] 0.00ns
arrayctor.loop.i:85  %rend_i252_i_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([58 x i8]* @p_str4, i32 %rbegin_i251_i_2) nounwind

ST_1: heightloop [1/1] 1.84ns
arrayctor.loop.i:86  %heightloop = add i13 %rows_cast, 5

ST_1: widthloop [1/1] 1.84ns
arrayctor.loop.i:87  %widthloop = add i13 %cols_cast, 2

ST_1: tmp_1 [1/1] 1.84ns
arrayctor.loop.i:88  %tmp_1 = add i13 %cols_cast, -3

ST_1: tmp_2 [1/1] 0.00ns
arrayctor.loop.i:89  %tmp_2 = trunc i12 %p_src_cols_V_read_1 to i2

ST_1: p_neg218_i_cast [1/1] 1.37ns
arrayctor.loop.i:90  %p_neg218_i_cast = xor i2 %tmp_2, -1

ST_1: ref [1/1] 1.84ns
arrayctor.loop.i:91  %ref = add i13 %rows_cast, -1

ST_1: tmp_5 [1/1] 0.00ns
arrayctor.loop.i:92  %tmp_5 = trunc i13 %ref to i2

ST_1: stg_101 [1/1] 1.39ns
arrayctor.loop.i:93  br label %0


 <State 2>: 5.39ns
ST_2: p_012_0_i [1/1] 0.00ns
:0  %p_012_0_i = phi i12 [ 0, %arrayctor.loop.i ], [ %i_V, %9 ]

ST_2: tmp_2_cast [1/1] 0.00ns
:1  %tmp_2_cast = zext i12 %p_012_0_i to i13

ST_2: tmp_3 [1/1] 2.18ns
:2  %tmp_3 = icmp ult i13 %tmp_2_cast, %heightloop

ST_2: stg_105 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 480, i64 0)

ST_2: i_V [1/1] 1.84ns
:4  %i_V = add i12 %p_012_0_i, 1

ST_2: stg_107 [1/1] 0.00ns
:5  br i1 %tmp_3, label %1, label %"filter<32,32,int,int,480,640,3,3>.exit"

ST_2: stg_108 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1819) nounwind

ST_2: tmp [1/1] 0.00ns
:1  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1819)

ST_2: tmp_4 [1/1] 2.14ns
:2  %tmp_4 = icmp ugt i12 %p_012_0_i, 4

ST_2: ImagLoc_y [1/1] 1.84ns
:3  %ImagLoc_y = add i13 %tmp_2_cast, -4

ST_2: tmp_6 [1/1] 2.18ns
:4  %tmp_6 = icmp slt i13 %ImagLoc_y, -1

ST_2: tmp_8 [1/1] 0.00ns
:5  %tmp_8 = call i12 @_ssdm_op_PartSelect.i12.i13.i32.i32(i13 %ImagLoc_y, i32 1, i32 12)

ST_2: icmp [1/1] 2.14ns
:6  %icmp = icmp sgt i12 %tmp_8, 0

ST_2: tmp_34_2 [1/1] 2.18ns
:7  %tmp_34_2 = icmp slt i13 %ImagLoc_y, %ref

ST_2: or_cond_2 [1/1] 1.37ns
:8  %or_cond_2 = and i1 %icmp, %tmp_34_2

ST_2: tmp_9 [1/1] 0.00ns
:9  %tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %ImagLoc_y, i32 12)

ST_2: p_i_2_cast_cast [1/1] 1.37ns
:10  %p_i_2_cast_cast = select i1 %tmp_34_2, i2 -2, i2 %tmp_5

ST_2: y_1_2 [1/1] 1.84ns
:11  %y_1_2 = add i13 %tmp_2_cast, -5

ST_2: y_1_2_1 [1/1] 1.84ns
:12  %y_1_2_1 = add i13 %tmp_2_cast, -6

ST_2: stg_121 [1/1] 1.39ns
:13  br label %2

ST_2: stg_122 [1/1] 0.00ns
filter<32,32,int,int,480,640,3,3>.exit:0  ret void


 <State 3>: 25.51ns
ST_3: p_025_0_i [1/1] 0.00ns
:0  %p_025_0_i = phi i12 [ 0, %1 ], [ %j_V, %.loopexit._crit_edge.i.2 ]

ST_3: tmp_12_cast [1/1] 0.00ns
:28  %tmp_12_cast = zext i12 %p_025_0_i to i13

ST_3: tmp_7 [1/1] 2.18ns
:29  %tmp_7 = icmp ult i13 %tmp_12_cast, %widthloop

ST_3: j_V [1/1] 1.84ns
:31  %j_V = add i12 %p_025_0_i, 1

ST_3: stg_127 [1/1] 0.00ns
:32  br i1 %tmp_7, label %.preheader226.i.preheader.0.0, label %9

ST_3: tmp_10 [1/1] 0.00ns
.preheader226.i.preheader.0.0:3  %tmp_10 = call i11 @_ssdm_op_PartSelect.i11.i12.i32.i32(i12 %p_025_0_i, i32 1, i32 11)

ST_3: icmp1 [1/1] 2.11ns
.preheader226.i.preheader.0.0:4  %icmp1 = icmp ne i11 %tmp_10, 0

ST_3: or_cond217_i [1/1] 1.37ns
.preheader226.i.preheader.0.0:5  %or_cond217_i = and i1 %tmp_4, %icmp1

ST_3: ImagLoc_x [1/1] 1.84ns
.preheader226.i.preheader.0.0:6  %ImagLoc_x = add i13 %tmp_12_cast, -1

ST_3: ImagLoc_x_cast [1/1] 0.00ns
.preheader226.i.preheader.0.0:7  %ImagLoc_x_cast = sext i13 %ImagLoc_x to i14

ST_3: tmp_12 [1/1] 0.00ns
.preheader226.i.preheader.0.0:8  %tmp_12 = trunc i13 %ImagLoc_x to i2

ST_3: x [1/1] 21.28ns
.preheader226.i.preheader.0.0:9  %x = call fastcc i15 @borderInterpolate(i13 %ImagLoc_x, i12 %p_src_cols_V_read_1, i5 4) nounwind

ST_3: x_ext [1/1] 0.00ns
.preheader226.i.preheader.0.0:10  %x_ext = sext i15 %x to i32

ST_3: tmp_15 [1/1] 0.00ns
.preheader226.i.preheader.0.0:11  %tmp_15 = trunc i15 %x to i2

ST_3: tmp_11 [1/1] 0.00ns
.preheader226.i.preheader.0.0:12  %tmp_11 = zext i32 %x_ext to i64

ST_3: k_buf_0_val_0_addr [1/1] 0.00ns
.preheader226.i.preheader.0.0:13  %k_buf_0_val_0_addr = getelementptr [640 x i8]* %k_buf_0_val_0, i64 0, i64 %tmp_11

ST_3: right_border_buf_0_val_2_0 [2/2] 2.39ns
.preheader226.i.preheader.0.0:14  %right_border_buf_0_val_2_0 = load i8* %k_buf_0_val_0_addr, align 1

ST_3: k_buf_0_val_1_addr [1/1] 0.00ns
.preheader226.i.preheader.0.0:16  %k_buf_0_val_1_addr = getelementptr [640 x i8]* %k_buf_0_val_1, i64 0, i64 %tmp_11

ST_3: right_border_buf_0_val_1_0 [2/2] 2.39ns
.preheader226.i.preheader.0.0:17  %right_border_buf_0_val_1_0 = load i8* %k_buf_0_val_1_addr, align 1

ST_3: k_buf_0_val_2_addr [1/1] 0.00ns
.preheader226.i.preheader.0.0:18  %k_buf_0_val_2_addr = getelementptr [640 x i8]* %k_buf_0_val_2, i64 0, i64 %tmp_11

ST_3: src_kernel_win_0_val_2_0 [2/2] 2.39ns
.preheader226.i.preheader.0.0:19  %src_kernel_win_0_val_2_0 = load i8* %k_buf_0_val_2_addr, align 1

ST_3: brmerge [1/1] 1.37ns
.preheader226.i.preheader.0.0:20  %brmerge = or i1 %tmp_6, %or_cond_2

ST_3: stg_145 [1/1] 0.00ns
.preheader226.i.preheader.0.0:21  br i1 %brmerge, label %._crit_edge.i.0, label %._crit_edge233.i.0

ST_3: stg_146 [1/1] 0.00ns
._crit_edge233.i.0:0  br i1 %tmp_9, label %.loopexit.i.0, label %._crit_edge241.i.0.0

ST_3: t_0_2 [1/1] 21.28ns
._crit_edge241.i.0.0:16  %t_0_2 = call fastcc i15 @borderInterpolate(i13 %y_1_2_1, i12 %p_src_rows_V_read_1, i5 4) nounwind

ST_3: tmp_20 [1/1] 0.00ns
._crit_edge241.i.0.0:17  %tmp_20 = trunc i15 %t_0_2 to i2

ST_3: locy_0_2 [1/1] 0.80ns
._crit_edge241.i.0.0:18  %locy_0_2 = sub i2 %p_i_2_cast_cast, %tmp_20

ST_3: stg_150 [1/1] 1.62ns
._crit_edge241.i.0.0:19  switch i2 %locy_0_2, label %branch8 [
    i2 0, label %branch6
    i2 1, label %.loopexit.i.0.pre245
  ]

ST_3: tmp_16 [1/1] 0.00ns
._crit_edge.i.0:0  %tmp_16 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %ImagLoc_x, i32 12)

ST_3: rev [1/1] 1.37ns
._crit_edge.i.0:1  %rev = xor i1 %tmp_16, true

ST_3: tmp_13 [1/1] 2.18ns
._crit_edge.i.0:2  %tmp_13 = icmp slt i14 %ImagLoc_x_cast, %cols_cast1

ST_3: or_cond3 [1/1] 1.37ns
._crit_edge.i.0:3  %or_cond3 = and i1 %tmp_13, %rev

ST_3: stg_155 [1/1] 0.00ns
._crit_edge.i.0:4  br i1 %or_cond3, label %3, label %._crit_edge236.i.0

ST_3: tmp_17 [1/1] 0.00ns
._crit_edge236.i.0:0  %tmp_17 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %ImagLoc_x, i32 12)

ST_3: stg_157 [1/1] 0.00ns
._crit_edge236.i.0:1  br i1 %tmp_17, label %.loopexit.i.0.pre, label %4

ST_3: stg_158 [1/1] 0.00ns
:0  br i1 %tmp_13, label %.loopexit.i.0, label %.preheader.i.0

ST_3: tmp_14 [1/1] 2.18ns
:0  %tmp_14 = icmp slt i13 %ImagLoc_x, %tmp_1

ST_3: stg_160 [1/1] 1.30ns
:1  br i1 %tmp_14, label %._crit_edge238.i.preheader.0, label %"operator().exit289.i.0"

ST_3: col_assign [1/1] 0.80ns
operator().exit289.i.0:0  %col_assign = add i2 %tmp_12, %p_neg218_i_cast

ST_3: stg_162 [1/1] 1.62ns
operator().exit289.i.0:1  switch i2 %col_assign, label %branch32 [
    i2 0, label %branch30
    i2 1, label %branch31
  ]

ST_3: stg_163 [1/1] 1.30ns
branch31:1  br label %._crit_edge238.i.preheader.0

ST_3: stg_164 [1/1] 1.30ns
branch30:1  br label %._crit_edge238.i.preheader.0

ST_3: stg_165 [1/1] 1.30ns
branch32:1  br label %._crit_edge238.i.preheader.0

ST_3: stg_166 [1/1] 0.00ns
.loopexit.i.0:0  br i1 %or_cond217_i, label %.preheader.0, label %.loopexit._crit_edge.i.0

ST_3: x_1 [1/1] 21.28ns
.loopexit._crit_edge.i.0:0  %x_1 = call fastcc i15 @borderInterpolate(i13 %ImagLoc_x, i12 %p_src_cols_V_read_1, i5 4) nounwind

ST_3: x_1_ext [1/1] 0.00ns
.loopexit._crit_edge.i.0:1  %x_1_ext = sext i15 %x_1 to i32

ST_3: tmp_28 [1/1] 0.00ns
.loopexit._crit_edge.i.0:2  %tmp_28 = trunc i15 %x_1 to i2

ST_3: tmp_32_1 [1/1] 0.00ns
.loopexit._crit_edge.i.0:3  %tmp_32_1 = zext i32 %x_1_ext to i64

ST_3: k_buf_1_val_0_addr [1/1] 0.00ns
.loopexit._crit_edge.i.0:4  %k_buf_1_val_0_addr = getelementptr [640 x i8]* %k_buf_1_val_0, i64 0, i64 %tmp_32_1

ST_3: right_border_buf_1_val_2_0 [2/2] 2.39ns
.loopexit._crit_edge.i.0:5  %right_border_buf_1_val_2_0 = load i8* %k_buf_1_val_0_addr, align 1

ST_3: k_buf_1_val_1_addr [1/1] 0.00ns
.loopexit._crit_edge.i.0:7  %k_buf_1_val_1_addr = getelementptr [640 x i8]* %k_buf_1_val_1, i64 0, i64 %tmp_32_1

ST_3: right_border_buf_1_val_1_0 [2/2] 2.39ns
.loopexit._crit_edge.i.0:8  %right_border_buf_1_val_1_0 = load i8* %k_buf_1_val_1_addr, align 1

ST_3: k_buf_1_val_2_addr [1/1] 0.00ns
.loopexit._crit_edge.i.0:9  %k_buf_1_val_2_addr = getelementptr [640 x i8]* %k_buf_1_val_2, i64 0, i64 %tmp_32_1

ST_3: src_kernel_win_1_val_2_0 [2/2] 2.39ns
.loopexit._crit_edge.i.0:10  %src_kernel_win_1_val_2_0 = load i8* %k_buf_1_val_2_addr, align 1

ST_3: stg_177 [1/1] 0.00ns
.loopexit._crit_edge.i.0:11  br i1 %brmerge, label %._crit_edge.i.1, label %._crit_edge233.i.1

ST_3: stg_178 [1/1] 0.00ns
._crit_edge233.i.1:0  br i1 %tmp_9, label %.loopexit.i.1, label %._crit_edge241.i.1.0

ST_3: t_1_2 [1/1] 21.28ns
._crit_edge241.i.1.0:16  %t_1_2 = call fastcc i15 @borderInterpolate(i13 %y_1_2_1, i12 %p_src_rows_V_read_1, i5 4) nounwind

ST_3: tmp_33 [1/1] 0.00ns
._crit_edge241.i.1.0:17  %tmp_33 = trunc i15 %t_1_2 to i2

ST_3: locy_1_2 [1/1] 0.80ns
._crit_edge241.i.1.0:18  %locy_1_2 = sub i2 %p_i_2_cast_cast, %tmp_33

ST_3: stg_182 [1/1] 1.62ns
._crit_edge241.i.1.0:19  switch i2 %locy_1_2, label %branch17 [
    i2 0, label %branch15
    i2 1, label %.loopexit.i.1.pre241
  ]

ST_3: tmp_29 [1/1] 0.00ns
._crit_edge.i.1:0  %tmp_29 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %ImagLoc_x, i32 12)

ST_3: rev1 [1/1] 1.37ns
._crit_edge.i.1:1  %rev1 = xor i1 %tmp_29, true

ST_3: tmp_39_1 [1/1] 2.18ns
._crit_edge.i.1:2  %tmp_39_1 = icmp slt i14 %ImagLoc_x_cast, %cols_cast1

ST_3: or_cond3_1 [1/1] 1.37ns
._crit_edge.i.1:3  %or_cond3_1 = and i1 %tmp_39_1, %rev1

ST_3: stg_187 [1/1] 0.00ns
._crit_edge.i.1:4  br i1 %or_cond3_1, label %5, label %._crit_edge236.i.1

ST_3: tmp_30 [1/1] 0.00ns
._crit_edge236.i.1:0  %tmp_30 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %ImagLoc_x, i32 12)

ST_3: stg_189 [1/1] 0.00ns
._crit_edge236.i.1:1  br i1 %tmp_30, label %.loopexit.i.1.pre, label %6

ST_3: stg_190 [1/1] 0.00ns
:0  br i1 %tmp_39_1, label %.loopexit.i.1, label %.preheader.i.1

ST_3: tmp_42_1 [1/1] 2.18ns
:0  %tmp_42_1 = icmp slt i13 %ImagLoc_x, %tmp_1

ST_3: stg_192 [1/1] 1.30ns
:1  br i1 %tmp_42_1, label %._crit_edge238.i.preheader.1, label %"operator().exit289.i.1"

ST_3: col_assign_1 [1/1] 0.80ns
operator().exit289.i.1:0  %col_assign_1 = add i2 %tmp_12, %p_neg218_i_cast

ST_3: stg_194 [1/1] 1.62ns
operator().exit289.i.1:1  switch i2 %col_assign_1, label %branch50 [
    i2 0, label %branch48
    i2 1, label %branch49
  ]

ST_3: stg_195 [1/1] 1.30ns
branch49:1  br label %._crit_edge238.i.preheader.1

ST_3: stg_196 [1/1] 1.30ns
branch48:1  br label %._crit_edge238.i.preheader.1

ST_3: stg_197 [1/1] 1.30ns
branch50:1  br label %._crit_edge238.i.preheader.1

ST_3: stg_198 [1/1] 0.00ns
.loopexit.i.1:0  br i1 %or_cond217_i, label %.preheader.1, label %.loopexit._crit_edge.i.1

ST_3: x_2 [1/1] 21.28ns
.loopexit._crit_edge.i.1:0  %x_2 = call fastcc i15 @borderInterpolate(i13 %ImagLoc_x, i12 %p_src_cols_V_read_1, i5 4) nounwind

ST_3: x_2_ext [1/1] 0.00ns
.loopexit._crit_edge.i.1:1  %x_2_ext = sext i15 %x_2 to i32

ST_3: tmp_38 [1/1] 0.00ns
.loopexit._crit_edge.i.1:2  %tmp_38 = trunc i15 %x_2 to i2

ST_3: tmp_32_2 [1/1] 0.00ns
.loopexit._crit_edge.i.1:3  %tmp_32_2 = zext i32 %x_2_ext to i64

ST_3: k_buf_2_val_0_addr [1/1] 0.00ns
.loopexit._crit_edge.i.1:4  %k_buf_2_val_0_addr = getelementptr [640 x i8]* %k_buf_2_val_0, i64 0, i64 %tmp_32_2

ST_3: right_border_buf_2_val_2_0 [2/2] 2.39ns
.loopexit._crit_edge.i.1:5  %right_border_buf_2_val_2_0 = load i8* %k_buf_2_val_0_addr, align 1

ST_3: k_buf_2_val_1_addr [1/1] 0.00ns
.loopexit._crit_edge.i.1:7  %k_buf_2_val_1_addr = getelementptr [640 x i8]* %k_buf_2_val_1, i64 0, i64 %tmp_32_2

ST_3: right_border_buf_2_val_1_0 [2/2] 2.39ns
.loopexit._crit_edge.i.1:8  %right_border_buf_2_val_1_0 = load i8* %k_buf_2_val_1_addr, align 1

ST_3: k_buf_2_val_2_addr [1/1] 0.00ns
.loopexit._crit_edge.i.1:9  %k_buf_2_val_2_addr = getelementptr [640 x i8]* %k_buf_2_val_2, i64 0, i64 %tmp_32_2

ST_3: src_kernel_win_2_val_2_0 [2/2] 2.39ns
.loopexit._crit_edge.i.1:10  %src_kernel_win_2_val_2_0 = load i8* %k_buf_2_val_2_addr, align 1

ST_3: stg_209 [1/1] 0.00ns
.loopexit._crit_edge.i.1:11  br i1 %brmerge, label %._crit_edge.i.2, label %._crit_edge233.i.2

ST_3: stg_210 [1/1] 0.00ns
._crit_edge233.i.2:0  br i1 %tmp_9, label %.loopexit.i.2, label %._crit_edge241.i.2.0

ST_3: t_2_2 [1/1] 21.28ns
._crit_edge241.i.2.0:16  %t_2_2 = call fastcc i15 @borderInterpolate(i13 %y_1_2_1, i12 %p_src_rows_V_read_1, i5 4) nounwind

ST_3: tmp_43 [1/1] 0.00ns
._crit_edge241.i.2.0:17  %tmp_43 = trunc i15 %t_2_2 to i2

ST_3: locy_2_2 [1/1] 0.80ns
._crit_edge241.i.2.0:18  %locy_2_2 = sub i2 %p_i_2_cast_cast, %tmp_43

ST_3: stg_214 [1/1] 1.62ns
._crit_edge241.i.2.0:19  switch i2 %locy_2_2, label %branch26 [
    i2 0, label %branch24
    i2 1, label %.loopexit.i.2.pre237
  ]

ST_3: tmp_39 [1/1] 0.00ns
._crit_edge.i.2:0  %tmp_39 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %ImagLoc_x, i32 12)

ST_3: rev2 [1/1] 1.37ns
._crit_edge.i.2:1  %rev2 = xor i1 %tmp_39, true

ST_3: tmp_39_2 [1/1] 2.18ns
._crit_edge.i.2:2  %tmp_39_2 = icmp slt i14 %ImagLoc_x_cast, %cols_cast1

ST_3: or_cond3_2 [1/1] 1.37ns
._crit_edge.i.2:3  %or_cond3_2 = and i1 %tmp_39_2, %rev2

ST_3: stg_219 [1/1] 0.00ns
._crit_edge.i.2:4  br i1 %or_cond3_2, label %7, label %._crit_edge236.i.2

ST_3: tmp_40 [1/1] 0.00ns
._crit_edge236.i.2:0  %tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i13.i32(i13 %ImagLoc_x, i32 12)

ST_3: stg_221 [1/1] 0.00ns
._crit_edge236.i.2:1  br i1 %tmp_40, label %.loopexit.i.2.pre, label %8

ST_3: stg_222 [1/1] 0.00ns
:0  br i1 %tmp_39_2, label %.loopexit.i.2, label %.preheader.i.2

ST_3: tmp_42_2 [1/1] 2.18ns
:0  %tmp_42_2 = icmp slt i13 %ImagLoc_x, %tmp_1

ST_3: stg_224 [1/1] 1.30ns
:1  br i1 %tmp_42_2, label %._crit_edge238.i.preheader.2, label %"operator().exit289.i.2"

ST_3: col_assign_s [1/1] 0.80ns
operator().exit289.i.2:0  %col_assign_s = add i2 %tmp_12, %p_neg218_i_cast

ST_3: stg_226 [1/1] 1.62ns
operator().exit289.i.2:1  switch i2 %col_assign_s, label %branch68 [
    i2 0, label %branch66
    i2 1, label %branch67
  ]

ST_3: stg_227 [1/1] 1.30ns
branch67:1  br label %._crit_edge238.i.preheader.2

ST_3: stg_228 [1/1] 1.30ns
branch66:1  br label %._crit_edge238.i.preheader.2

ST_3: stg_229 [1/1] 1.30ns
branch68:1  br label %._crit_edge238.i.preheader.2

ST_3: stg_230 [1/1] 0.00ns
.loopexit.i.2:0  br i1 %or_cond217_i, label %.preheader.2, label %.loopexit._crit_edge.i.2


 <State 4>: 4.78ns
ST_4: col_buf_2_val_0_0_1_load [1/1] 0.00ns
:2  %col_buf_2_val_0_0_1_load = load i8* %col_buf_2_val_0_0_1, align 1

ST_4: col_buf_2_val_0_0_2_load [1/1] 0.00ns
:5  %col_buf_2_val_0_0_2_load = load i8* %col_buf_2_val_0_0_2, align 1

ST_4: col_buf_2_val_0_0_3_load [1/1] 0.00ns
:6  %col_buf_2_val_0_0_3_load = load i8* %col_buf_2_val_0_0_3, align 1

ST_4: right_border_buf_2_val_1_2_load [1/1] 0.00ns
:8  %right_border_buf_2_val_1_2_load = load i8* %right_border_buf_2_val_1_2, align 1

ST_4: right_border_buf_2_val_1_2_1_load [1/1] 0.00ns
:11  %right_border_buf_2_val_1_2_1_load = load i8* %right_border_buf_2_val_1_2_1, align 1

ST_4: right_border_buf_2_val_1_2_2_load [1/1] 0.00ns
:12  %right_border_buf_2_val_1_2_2_load = load i8* %right_border_buf_2_val_1_2_2, align 1

ST_4: col_buf_1_val_0_0_1_load [1/1] 0.00ns
:14  %col_buf_1_val_0_0_1_load = load i8* %col_buf_1_val_0_0_1, align 1

ST_4: col_buf_1_val_0_0_2_load [1/1] 0.00ns
:17  %col_buf_1_val_0_0_2_load = load i8* %col_buf_1_val_0_0_2, align 1

ST_4: col_buf_1_val_0_0_3_load [1/1] 0.00ns
:18  %col_buf_1_val_0_0_3_load = load i8* %col_buf_1_val_0_0_3, align 1

ST_4: right_border_buf_0_val_1_2_load [1/1] 0.00ns
:19  %right_border_buf_0_val_1_2_load = load i8* %right_border_buf_0_val_1_2, align 1

ST_4: right_border_buf_0_val_1_2_1_load [1/1] 0.00ns
:20  %right_border_buf_0_val_1_2_1_load = load i8* %right_border_buf_0_val_1_2_1, align 1

ST_4: right_border_buf_0_val_1_2_2_load [1/1] 0.00ns
:21  %right_border_buf_0_val_1_2_2_load = load i8* %right_border_buf_0_val_1_2_2, align 1

ST_4: col_buf_0_val_0_0_1_load [1/1] 0.00ns
:22  %col_buf_0_val_0_0_1_load = load i8* %col_buf_0_val_0_0_1, align 1

ST_4: col_buf_0_val_0_0_2_load [1/1] 0.00ns
:23  %col_buf_0_val_0_0_2_load = load i8* %col_buf_0_val_0_0_2, align 1

ST_4: col_buf_0_val_0_0_3_load [1/1] 0.00ns
:24  %col_buf_0_val_0_0_3_load = load i8* %col_buf_0_val_0_0_3, align 1

ST_4: right_border_buf_1_val_1_2_load [1/1] 0.00ns
:25  %right_border_buf_1_val_1_2_load = load i8* %right_border_buf_1_val_1_2, align 1

ST_4: right_border_buf_1_val_1_2_1_load [1/1] 0.00ns
:26  %right_border_buf_1_val_1_2_1_load = load i8* %right_border_buf_1_val_1_2_1, align 1

ST_4: right_border_buf_1_val_1_2_2_load [1/1] 0.00ns
:27  %right_border_buf_1_val_1_2_2_load = load i8* %right_border_buf_1_val_1_2_2, align 1

ST_4: stg_249 [1/1] 0.00ns
.preheader226.i.preheader.0.0:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1820) nounwind

ST_4: tmp_s [1/1] 0.00ns
.preheader226.i.preheader.0.0:1  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1820)

ST_4: stg_251 [1/1] 0.00ns
.preheader226.i.preheader.0.0:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, [1 x i8]* @p_str1808) nounwind

ST_4: right_border_buf_0_val_2_0 [1/2] 2.39ns
.preheader226.i.preheader.0.0:14  %right_border_buf_0_val_2_0 = load i8* %k_buf_0_val_0_addr, align 1

ST_4: stg_253 [1/1] 0.00ns
.preheader226.i.preheader.0.0:15  store i8 %right_border_buf_0_val_2_0, i8* %col_buf_0_val_0_0, align 1

ST_4: right_border_buf_0_val_1_0 [1/2] 2.39ns
.preheader226.i.preheader.0.0:17  %right_border_buf_0_val_1_0 = load i8* %k_buf_0_val_1_addr, align 1

ST_4: src_kernel_win_0_val_2_0 [1/2] 2.39ns
.preheader226.i.preheader.0.0:19  %src_kernel_win_0_val_2_0 = load i8* %k_buf_0_val_2_addr, align 1

ST_4: col_assign_3 [1/1] 0.80ns
.preheader.i.0:0  %col_assign_3 = add i2 %tmp_15, %p_neg218_i_cast

ST_4: stg_257 [1/1] 1.62ns
.preheader.i.0:1  switch i2 %col_assign_3, label %branch41 [
    i2 0, label %._crit_edge239.i.0.0
    i2 1, label %branch40
  ]

ST_4: stg_258 [1/1] 1.50ns
branch40:0  br label %._crit_edge239.i.0.0

ST_4: stg_259 [1/1] 1.50ns
branch41:0  br label %._crit_edge239.i.0.0

ST_4: stg_260 [1/1] 1.62ns
._crit_edge239.i.0.0:1  switch i2 %col_assign_3, label %branch35 [
    i2 0, label %._crit_edge239.i.0.1
    i2 1, label %branch34
  ]

ST_4: stg_261 [1/1] 1.50ns
branch34:0  br label %._crit_edge239.i.0.1

ST_4: stg_262 [1/1] 1.50ns
branch35:0  br label %._crit_edge239.i.0.1

ST_4: stg_263 [1/1] 1.62ns
._crit_edge239.i.0.1:1  switch i2 %col_assign_3, label %branch29 [
    i2 0, label %branch27
    i2 1, label %branch28
  ]

ST_4: stg_264 [1/1] 0.00ns
branch31:0  store i8 %src_kernel_win_0_val_2_0, i8* %right_border_buf_0_val_0_1, align 1

ST_4: stg_265 [1/1] 0.00ns
branch30:0  store i8 %src_kernel_win_0_val_2_0, i8* %right_border_buf_0_val_0_0, align 1

ST_4: stg_266 [1/1] 0.00ns
branch32:0  store i8 %src_kernel_win_0_val_2_0, i8* %right_border_buf_0_val_0_2, align 1

ST_4: tmp_42_0_pr1 [1/1] 0.00ns
._crit_edge238.i.preheader.0:0  %tmp_42_0_pr1 = phi i1 [ true, %3 ], [ false, %branch32 ], [ false, %branch31 ], [ false, %branch30 ]

ST_4: stg_268 [1/1] 2.39ns
._crit_edge238.i.preheader.0:1  store i8 %right_border_buf_0_val_1_0, i8* %k_buf_0_val_2_addr, align 1

ST_4: stg_269 [1/1] 1.30ns
._crit_edge238.i.preheader.0:2  br i1 %tmp_42_0_pr1, label %._crit_edge238.i.0.1, label %"operator().exit287.i.0.0"

ST_4: col_assign_4 [1/1] 0.80ns
operator().exit287.i.0.0:0  %col_assign_4 = add i2 %tmp_12, %p_neg218_i_cast

ST_4: stg_271 [1/1] 1.62ns
operator().exit287.i.0.0:1  switch i2 %col_assign_4, label %branch38 [
    i2 0, label %._crit_edge238.i.0.1.pre
    i2 1, label %branch37
  ]

ST_4: stg_272 [1/1] 0.00ns
branch37:0  store i8 %right_border_buf_0_val_1_0, i8* %right_border_buf_0_val_1_2_1, align 1

ST_4: stg_273 [1/1] 1.30ns
branch37:1  br label %._crit_edge238.i.0.1

ST_4: stg_274 [1/1] 0.00ns
._crit_edge238.i.0.1.pre:0  store i8 %right_border_buf_0_val_1_0, i8* %right_border_buf_0_val_1_2, align 1

ST_4: stg_275 [1/1] 1.30ns
._crit_edge238.i.0.1.pre:1  br label %._crit_edge238.i.0.1

ST_4: stg_276 [1/1] 0.00ns
branch38:0  store i8 %right_border_buf_0_val_1_0, i8* %right_border_buf_0_val_1_2_2, align 1

ST_4: stg_277 [1/1] 1.30ns
branch38:1  br label %._crit_edge238.i.0.1

ST_4: tmp_42_0_pr [1/1] 0.00ns
._crit_edge238.i.0.1:0  %tmp_42_0_pr = phi i1 [ true, %._crit_edge238.i.preheader.0 ], [ %tmp_14, %branch38 ], [ %tmp_14, %branch37 ], [ %tmp_14, %._crit_edge238.i.0.1.pre ]

ST_4: stg_279 [1/1] 2.39ns
._crit_edge238.i.0.1:1  store i8 %right_border_buf_0_val_2_0, i8* %k_buf_0_val_1_addr, align 1

ST_4: stg_280 [1/1] 0.00ns
._crit_edge238.i.0.1:2  br i1 %tmp_42_0_pr, label %._crit_edge238.i.0.2, label %"operator().exit287.i.0.1"

ST_4: col_assign_4_0_1 [1/1] 0.80ns
operator().exit287.i.0.1:0  %col_assign_4_0_1 = add i2 %tmp_12, %p_neg218_i_cast

ST_4: stg_282 [1/1] 1.62ns
operator().exit287.i.0.1:1  switch i2 %col_assign_4_0_1, label %branch44 [
    i2 0, label %._crit_edge238.i.0.2.pre
    i2 1, label %branch43
  ]

ST_4: stg_283 [1/1] 0.00ns
branch43:0  store i8 %right_border_buf_0_val_2_0, i8* %col_buf_0_val_0_0_2, align 1

ST_4: stg_284 [1/1] 0.00ns
branch43:1  br label %._crit_edge238.i.0.2

ST_4: stg_285 [1/1] 0.00ns
._crit_edge238.i.0.2.pre:0  store i8 %right_border_buf_0_val_2_0, i8* %col_buf_0_val_0_0_1, align 1

ST_4: stg_286 [1/1] 0.00ns
._crit_edge238.i.0.2.pre:1  br label %._crit_edge238.i.0.2

ST_4: stg_287 [1/1] 0.00ns
branch44:0  store i8 %right_border_buf_0_val_2_0, i8* %col_buf_0_val_0_0_3, align 1

ST_4: stg_288 [1/1] 0.00ns
branch44:1  br label %._crit_edge238.i.0.2

ST_4: tmp_22 [1/1] 1.70ns
._crit_edge238.i.0.2:0  %tmp_22 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %p_src_data_stream_0_V)

ST_4: stg_290 [1/1] 2.39ns
._crit_edge238.i.0.2:1  store i8 %tmp_22, i8* %k_buf_0_val_0_addr, align 1

ST_4: right_border_buf_1_val_2_0 [1/2] 2.39ns
.loopexit._crit_edge.i.0:5  %right_border_buf_1_val_2_0 = load i8* %k_buf_1_val_0_addr, align 1

ST_4: stg_292 [1/1] 0.00ns
.loopexit._crit_edge.i.0:6  store i8 %right_border_buf_1_val_2_0, i8* %col_buf_1_val_0_0, align 1

ST_4: right_border_buf_1_val_1_0 [1/2] 2.39ns
.loopexit._crit_edge.i.0:8  %right_border_buf_1_val_1_0 = load i8* %k_buf_1_val_1_addr, align 1

ST_4: src_kernel_win_1_val_2_0 [1/2] 2.39ns
.loopexit._crit_edge.i.0:10  %src_kernel_win_1_val_2_0 = load i8* %k_buf_1_val_2_addr, align 1

ST_4: col_assign_3_1 [1/1] 0.80ns
.preheader.i.1:0  %col_assign_3_1 = add i2 %tmp_28, %p_neg218_i_cast

ST_4: stg_296 [1/1] 1.62ns
.preheader.i.1:1  switch i2 %col_assign_3_1, label %branch59 [
    i2 0, label %._crit_edge239.i.1.0
    i2 1, label %branch58
  ]

ST_4: stg_297 [1/1] 1.50ns
branch58:0  br label %._crit_edge239.i.1.0

ST_4: stg_298 [1/1] 1.50ns
branch59:0  br label %._crit_edge239.i.1.0

ST_4: stg_299 [1/1] 1.62ns
._crit_edge239.i.1.0:1  switch i2 %col_assign_3_1, label %branch53 [
    i2 0, label %._crit_edge239.i.1.1
    i2 1, label %branch52
  ]

ST_4: stg_300 [1/1] 1.50ns
branch52:0  br label %._crit_edge239.i.1.1

ST_4: stg_301 [1/1] 1.50ns
branch53:0  br label %._crit_edge239.i.1.1

ST_4: stg_302 [1/1] 1.62ns
._crit_edge239.i.1.1:1  switch i2 %col_assign_3_1, label %branch47 [
    i2 0, label %branch45
    i2 1, label %branch46
  ]

ST_4: stg_303 [1/1] 0.00ns
branch49:0  store i8 %src_kernel_win_1_val_2_0, i8* %right_border_buf_1_val_0_1, align 1

ST_4: stg_304 [1/1] 0.00ns
branch48:0  store i8 %src_kernel_win_1_val_2_0, i8* %right_border_buf_1_val_0_0, align 1

ST_4: stg_305 [1/1] 0.00ns
branch50:0  store i8 %src_kernel_win_1_val_2_0, i8* %right_border_buf_1_val_0_2, align 1

ST_4: tmp_42_1_pr1 [1/1] 0.00ns
._crit_edge238.i.preheader.1:0  %tmp_42_1_pr1 = phi i1 [ true, %5 ], [ false, %branch50 ], [ false, %branch49 ], [ false, %branch48 ]

ST_4: stg_307 [1/1] 2.39ns
._crit_edge238.i.preheader.1:1  store i8 %right_border_buf_1_val_1_0, i8* %k_buf_1_val_2_addr, align 1

ST_4: stg_308 [1/1] 1.30ns
._crit_edge238.i.preheader.1:2  br i1 %tmp_42_1_pr1, label %._crit_edge238.i.1.1, label %"operator().exit287.i.1.0"

ST_4: col_assign_4_1 [1/1] 0.80ns
operator().exit287.i.1.0:0  %col_assign_4_1 = add i2 %tmp_12, %p_neg218_i_cast

ST_4: stg_310 [1/1] 1.62ns
operator().exit287.i.1.0:1  switch i2 %col_assign_4_1, label %branch56 [
    i2 0, label %._crit_edge238.i.1.1.pre
    i2 1, label %branch55
  ]

ST_4: stg_311 [1/1] 0.00ns
branch55:0  store i8 %right_border_buf_1_val_1_0, i8* %right_border_buf_1_val_1_2_1, align 1

ST_4: stg_312 [1/1] 1.30ns
branch55:1  br label %._crit_edge238.i.1.1

ST_4: stg_313 [1/1] 0.00ns
._crit_edge238.i.1.1.pre:0  store i8 %right_border_buf_1_val_1_0, i8* %right_border_buf_1_val_1_2, align 1

ST_4: stg_314 [1/1] 1.30ns
._crit_edge238.i.1.1.pre:1  br label %._crit_edge238.i.1.1

ST_4: stg_315 [1/1] 0.00ns
branch56:0  store i8 %right_border_buf_1_val_1_0, i8* %right_border_buf_1_val_1_2_2, align 1

ST_4: stg_316 [1/1] 1.30ns
branch56:1  br label %._crit_edge238.i.1.1

ST_4: tmp_42_1_pr [1/1] 0.00ns
._crit_edge238.i.1.1:0  %tmp_42_1_pr = phi i1 [ true, %._crit_edge238.i.preheader.1 ], [ %tmp_42_1, %branch56 ], [ %tmp_42_1, %branch55 ], [ %tmp_42_1, %._crit_edge238.i.1.1.pre ]

ST_4: stg_318 [1/1] 2.39ns
._crit_edge238.i.1.1:1  store i8 %right_border_buf_1_val_2_0, i8* %k_buf_1_val_1_addr, align 1

ST_4: stg_319 [1/1] 0.00ns
._crit_edge238.i.1.1:2  br i1 %tmp_42_1_pr, label %._crit_edge238.i.1.2, label %"operator().exit287.i.1.1"

ST_4: col_assign_4_1_1 [1/1] 0.80ns
operator().exit287.i.1.1:0  %col_assign_4_1_1 = add i2 %tmp_12, %p_neg218_i_cast

ST_4: stg_321 [1/1] 1.62ns
operator().exit287.i.1.1:1  switch i2 %col_assign_4_1_1, label %branch62 [
    i2 0, label %._crit_edge238.i.1.2.pre
    i2 1, label %branch61
  ]

ST_4: stg_322 [1/1] 0.00ns
branch61:0  store i8 %right_border_buf_1_val_2_0, i8* %col_buf_1_val_0_0_2, align 1

ST_4: stg_323 [1/1] 0.00ns
branch61:1  br label %._crit_edge238.i.1.2

ST_4: stg_324 [1/1] 0.00ns
._crit_edge238.i.1.2.pre:0  store i8 %right_border_buf_1_val_2_0, i8* %col_buf_1_val_0_0_3, align 1

ST_4: stg_325 [1/1] 0.00ns
._crit_edge238.i.1.2.pre:1  br label %._crit_edge238.i.1.2

ST_4: stg_326 [1/1] 0.00ns
branch62:0  store i8 %right_border_buf_1_val_2_0, i8* %col_buf_1_val_0_0_1, align 1

ST_4: stg_327 [1/1] 0.00ns
branch62:1  br label %._crit_edge238.i.1.2

ST_4: tmp_34 [1/1] 1.70ns
._crit_edge238.i.1.2:0  %tmp_34 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %p_src_data_stream_1_V)

ST_4: stg_329 [1/1] 2.39ns
._crit_edge238.i.1.2:1  store i8 %tmp_34, i8* %k_buf_1_val_0_addr, align 1

ST_4: right_border_buf_2_val_2_0 [1/2] 2.39ns
.loopexit._crit_edge.i.1:5  %right_border_buf_2_val_2_0 = load i8* %k_buf_2_val_0_addr, align 1

ST_4: stg_331 [1/1] 0.00ns
.loopexit._crit_edge.i.1:6  store i8 %right_border_buf_2_val_2_0, i8* %col_buf_2_val_0_0, align 1

ST_4: right_border_buf_2_val_1_0 [1/2] 2.39ns
.loopexit._crit_edge.i.1:8  %right_border_buf_2_val_1_0 = load i8* %k_buf_2_val_1_addr, align 1

ST_4: src_kernel_win_2_val_2_0 [1/2] 2.39ns
.loopexit._crit_edge.i.1:10  %src_kernel_win_2_val_2_0 = load i8* %k_buf_2_val_2_addr, align 1

ST_4: col_assign_3_2 [1/1] 0.80ns
.preheader.i.2:0  %col_assign_3_2 = add i2 %tmp_38, %p_neg218_i_cast

ST_4: stg_335 [1/1] 1.62ns
.preheader.i.2:1  switch i2 %col_assign_3_2, label %branch77 [
    i2 0, label %._crit_edge239.i.2.0
    i2 1, label %branch76
  ]

ST_4: stg_336 [1/1] 1.50ns
branch76:0  br label %._crit_edge239.i.2.0

ST_4: stg_337 [1/1] 1.50ns
branch77:0  br label %._crit_edge239.i.2.0

ST_4: stg_338 [1/1] 1.62ns
._crit_edge239.i.2.0:1  switch i2 %col_assign_3_2, label %branch71 [
    i2 0, label %._crit_edge239.i.2.1
    i2 1, label %branch70
  ]

ST_4: stg_339 [1/1] 1.50ns
branch70:0  br label %._crit_edge239.i.2.1

ST_4: stg_340 [1/1] 1.50ns
branch71:0  br label %._crit_edge239.i.2.1

ST_4: stg_341 [1/1] 1.62ns
._crit_edge239.i.2.1:1  switch i2 %col_assign_3_2, label %branch65 [
    i2 0, label %branch63
    i2 1, label %branch64
  ]

ST_4: stg_342 [1/1] 0.00ns
branch67:0  store i8 %src_kernel_win_2_val_2_0, i8* %right_border_buf_2_val_0_1, align 1

ST_4: stg_343 [1/1] 0.00ns
branch66:0  store i8 %src_kernel_win_2_val_2_0, i8* %right_border_buf_2_val_0_0, align 1

ST_4: stg_344 [1/1] 0.00ns
branch68:0  store i8 %src_kernel_win_2_val_2_0, i8* %right_border_buf_2_val_0_2, align 1

ST_4: tmp_42_2_pr1 [1/1] 0.00ns
._crit_edge238.i.preheader.2:0  %tmp_42_2_pr1 = phi i1 [ true, %7 ], [ false, %branch68 ], [ false, %branch67 ], [ false, %branch66 ]

ST_4: stg_346 [1/1] 2.39ns
._crit_edge238.i.preheader.2:1  store i8 %right_border_buf_2_val_1_0, i8* %k_buf_2_val_2_addr, align 1

ST_4: stg_347 [1/1] 1.30ns
._crit_edge238.i.preheader.2:2  br i1 %tmp_42_2_pr1, label %._crit_edge238.i.2.1, label %"operator().exit287.i.2.0"

ST_4: col_assign_4_2 [1/1] 0.80ns
operator().exit287.i.2.0:0  %col_assign_4_2 = add i2 %tmp_12, %p_neg218_i_cast

ST_4: stg_349 [1/1] 1.62ns
operator().exit287.i.2.0:1  switch i2 %col_assign_4_2, label %branch74 [
    i2 0, label %._crit_edge238.i.2.1.pre
    i2 1, label %branch73
  ]

ST_4: stg_350 [1/1] 0.00ns
branch73:0  store i8 %right_border_buf_2_val_1_0, i8* %right_border_buf_2_val_1_2_1, align 1

ST_4: stg_351 [1/1] 1.30ns
branch73:1  br label %._crit_edge238.i.2.1

ST_4: stg_352 [1/1] 0.00ns
._crit_edge238.i.2.1.pre:0  store i8 %right_border_buf_2_val_1_0, i8* %right_border_buf_2_val_1_2_2, align 1

ST_4: stg_353 [1/1] 1.30ns
._crit_edge238.i.2.1.pre:1  br label %._crit_edge238.i.2.1

ST_4: stg_354 [1/1] 0.00ns
branch74:0  store i8 %right_border_buf_2_val_1_0, i8* %right_border_buf_2_val_1_2, align 1

ST_4: stg_355 [1/1] 1.30ns
branch74:1  br label %._crit_edge238.i.2.1

ST_4: tmp_42_2_pr [1/1] 0.00ns
._crit_edge238.i.2.1:0  %tmp_42_2_pr = phi i1 [ true, %._crit_edge238.i.preheader.2 ], [ %tmp_42_2, %branch74 ], [ %tmp_42_2, %branch73 ], [ %tmp_42_2, %._crit_edge238.i.2.1.pre ]

ST_4: stg_357 [1/1] 2.39ns
._crit_edge238.i.2.1:1  store i8 %right_border_buf_2_val_2_0, i8* %k_buf_2_val_1_addr, align 1

ST_4: stg_358 [1/1] 0.00ns
._crit_edge238.i.2.1:2  br i1 %tmp_42_2_pr, label %._crit_edge238.i.2.2, label %"operator().exit287.i.2.1"

ST_4: col_assign_4_2_1 [1/1] 0.80ns
operator().exit287.i.2.1:0  %col_assign_4_2_1 = add i2 %tmp_12, %p_neg218_i_cast

ST_4: stg_360 [1/1] 1.62ns
operator().exit287.i.2.1:1  switch i2 %col_assign_4_2_1, label %branch80 [
    i2 0, label %._crit_edge238.i.2.2.pre
    i2 1, label %branch79
  ]

ST_4: stg_361 [1/1] 0.00ns
branch79:0  store i8 %right_border_buf_2_val_2_0, i8* %col_buf_2_val_0_0_2, align 1

ST_4: stg_362 [1/1] 0.00ns
branch79:1  br label %._crit_edge238.i.2.2

ST_4: stg_363 [1/1] 0.00ns
._crit_edge238.i.2.2.pre:0  store i8 %right_border_buf_2_val_2_0, i8* %col_buf_2_val_0_0_3, align 1

ST_4: stg_364 [1/1] 0.00ns
._crit_edge238.i.2.2.pre:1  br label %._crit_edge238.i.2.2

ST_4: stg_365 [1/1] 0.00ns
branch80:0  store i8 %right_border_buf_2_val_2_0, i8* %col_buf_2_val_0_0_1, align 1

ST_4: stg_366 [1/1] 0.00ns
branch80:1  br label %._crit_edge238.i.2.2

ST_4: tmp_44 [1/1] 1.70ns
._crit_edge238.i.2.2:0  %tmp_44 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %p_src_data_stream_2_V)

ST_4: stg_368 [1/1] 2.39ns
._crit_edge238.i.2.2:1  store i8 %tmp_44, i8* %k_buf_2_val_0_addr, align 1


 <State 5>: 26.87ns
ST_5: src_kernel_win_0_val_0_1_6 [1/1] 0.00ns
:1  %src_kernel_win_0_val_0_1_6 = load i8* %src_kernel_win_0_val_0_1, align 1

ST_5: src_kernel_win_0_val_2_1_9 [1/1] 0.00ns
:3  %src_kernel_win_0_val_2_1_9 = load i8* %src_kernel_win_0_val_2_1, align 1

ST_5: src_kernel_win_0_val_1_1_6 [1/1] 0.00ns
:4  %src_kernel_win_0_val_1_1_6 = load i8* %src_kernel_win_0_val_1_1, align 1

ST_5: src_kernel_win_1_val_0_1_6 [1/1] 0.00ns
:7  %src_kernel_win_1_val_0_1_6 = load i8* %src_kernel_win_1_val_0_1, align 1

ST_5: src_kernel_win_1_val_2_1_9 [1/1] 0.00ns
:9  %src_kernel_win_1_val_2_1_9 = load i8* %src_kernel_win_1_val_2_1, align 1

ST_5: src_kernel_win_1_val_1_1_6 [1/1] 0.00ns
:10  %src_kernel_win_1_val_1_1_6 = load i8* %src_kernel_win_1_val_1_1, align 1

ST_5: src_kernel_win_2_val_0_1_6 [1/1] 0.00ns
:13  %src_kernel_win_2_val_0_1_6 = load i8* %src_kernel_win_2_val_0_1, align 1

ST_5: src_kernel_win_2_val_2_1_9 [1/1] 0.00ns
:15  %src_kernel_win_2_val_2_1_9 = load i8* %src_kernel_win_2_val_2_1, align 1

ST_5: src_kernel_win_2_val_1_1_6 [1/1] 0.00ns
:16  %src_kernel_win_2_val_1_1_6 = load i8* %src_kernel_win_2_val_1_1, align 1

ST_5: stg_378 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 640, i64 0)

ST_5: t [1/1] 21.28ns
._crit_edge241.i.0.0:0  %t = call fastcc i15 @borderInterpolate(i13 %ImagLoc_y, i12 %p_src_rows_V_read_1, i5 4) nounwind

ST_5: tmp_18 [1/1] 0.00ns
._crit_edge241.i.0.0:1  %tmp_18 = trunc i15 %t to i2

ST_5: locy [1/1] 0.80ns
._crit_edge241.i.0.0:2  %locy = sub i2 %p_i_2_cast_cast, %tmp_18

ST_5: col_buf_0_val_0_0_load [1/1] 0.00ns
._crit_edge241.i.0.0:3  %col_buf_0_val_0_0_load = load i8* %col_buf_0_val_0_0, align 1

ST_5: sel_tmp [1/1] 1.36ns
._crit_edge241.i.0.0:4  %sel_tmp = icmp eq i2 %p_i_2_cast_cast, %tmp_18

ST_5: sel_tmp1 [1/1] 1.37ns
._crit_edge241.i.0.0:5  %sel_tmp1 = select i1 %sel_tmp, i8 %col_buf_0_val_0_0_load, i8 %src_kernel_win_0_val_2_0

ST_5: sel_tmp2 [1/1] 1.36ns
._crit_edge241.i.0.0:6  %sel_tmp2 = icmp eq i2 %locy, 1

ST_5: src_kernel_win_0_val_0_1_3 [1/1] 1.37ns
._crit_edge241.i.0.0:7  %src_kernel_win_0_val_0_1_3 = select i1 %sel_tmp2, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp1

ST_5: t_0_1 [1/1] 21.28ns
._crit_edge241.i.0.0:8  %t_0_1 = call fastcc i15 @borderInterpolate(i13 %y_1_2, i12 %p_src_rows_V_read_1, i5 4) nounwind

ST_5: tmp_19 [1/1] 0.00ns
._crit_edge241.i.0.0:9  %tmp_19 = trunc i15 %t_0_1 to i2

ST_5: locy_0_1 [1/1] 0.80ns
._crit_edge241.i.0.0:10  %locy_0_1 = sub i2 %p_i_2_cast_cast, %tmp_19

ST_5: col_buf_0_val_0_0_load_1 [1/1] 0.00ns
._crit_edge241.i.0.0:11  %col_buf_0_val_0_0_load_1 = load i8* %col_buf_0_val_0_0, align 1

ST_5: sel_tmp4 [1/1] 1.36ns
._crit_edge241.i.0.0:12  %sel_tmp4 = icmp eq i2 %p_i_2_cast_cast, %tmp_19

ST_5: sel_tmp5 [1/1] 1.37ns
._crit_edge241.i.0.0:13  %sel_tmp5 = select i1 %sel_tmp4, i8 %col_buf_0_val_0_0_load_1, i8 %src_kernel_win_0_val_2_0

ST_5: sel_tmp6 [1/1] 1.36ns
._crit_edge241.i.0.0:14  %sel_tmp6 = icmp eq i2 %locy_0_1, 1

ST_5: src_kernel_win_0_val_1_1_3 [1/1] 1.37ns
._crit_edge241.i.0.0:15  %src_kernel_win_0_val_1_1_3 = select i1 %sel_tmp6, i8 %right_border_buf_0_val_1_0, i8 %sel_tmp5

ST_5: stg_395 [1/1] 1.50ns
.loopexit.i.0.pre245:0  store i8 %src_kernel_win_0_val_1_1_3, i8* %src_kernel_win_0_val_1_1, align 1

ST_5: stg_396 [1/1] 1.79ns
.loopexit.i.0.pre245:1  store i8 %right_border_buf_0_val_1_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_5: stg_397 [1/1] 1.50ns
.loopexit.i.0.pre245:2  store i8 %src_kernel_win_0_val_0_1_3, i8* %src_kernel_win_0_val_0_1, align 1

ST_5: stg_398 [1/1] 0.00ns
.loopexit.i.0.pre245:3  br label %.loopexit.i.0

ST_5: src_kernel_win_0_val_2_1_3 [1/1] 0.00ns
branch6:0  %src_kernel_win_0_val_2_1_3 = load i8* %col_buf_0_val_0_0, align 1

ST_5: stg_400 [1/1] 1.50ns
branch6:1  store i8 %src_kernel_win_0_val_1_1_3, i8* %src_kernel_win_0_val_1_1, align 1

ST_5: stg_401 [1/1] 1.79ns
branch6:2  store i8 %src_kernel_win_0_val_2_1_3, i8* %src_kernel_win_0_val_2_1, align 1

ST_5: stg_402 [1/1] 1.50ns
branch6:3  store i8 %src_kernel_win_0_val_0_1_3, i8* %src_kernel_win_0_val_0_1, align 1

ST_5: stg_403 [1/1] 0.00ns
branch6:4  br label %.loopexit.i.0

ST_5: stg_404 [1/1] 1.50ns
branch8:0  store i8 %src_kernel_win_0_val_1_1_3, i8* %src_kernel_win_0_val_1_1, align 1

ST_5: stg_405 [1/1] 1.79ns
branch8:1  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_5: stg_406 [1/1] 1.50ns
branch8:2  store i8 %src_kernel_win_0_val_0_1_3, i8* %src_kernel_win_0_val_0_1, align 1

ST_5: stg_407 [1/1] 0.00ns
branch8:3  br label %.loopexit.i.0

ST_5: src_kernel_win_0_val_0_0 [1/1] 0.00ns
._crit_edge239.i.0.0:0  %src_kernel_win_0_val_0_0 = phi i8 [ %col_buf_0_val_0_0_3_load, %branch41 ], [ %col_buf_0_val_0_0_2_load, %branch40 ], [ %col_buf_0_val_0_0_1_load, %.preheader.i.0 ]

ST_5: src_kernel_win_0_val_1_0 [1/1] 0.00ns
._crit_edge239.i.0.1:0  %src_kernel_win_0_val_1_0 = phi i8 [ %right_border_buf_0_val_1_2_1_load, %branch34 ], [ %right_border_buf_0_val_1_2_2_load, %branch35 ], [ %right_border_buf_0_val_1_2_load, %._crit_edge239.i.0.0 ]

ST_5: src_kernel_win_0_val_2_1_7 [1/1] 0.00ns
branch28:0  %src_kernel_win_0_val_2_1_7 = load i8* %right_border_buf_0_val_0_1, align 1

ST_5: stg_411 [1/1] 1.50ns
branch28:1  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_5: stg_412 [1/1] 1.79ns
branch28:2  store i8 %src_kernel_win_0_val_2_1_7, i8* %src_kernel_win_0_val_2_1, align 1

ST_5: stg_413 [1/1] 1.50ns
branch28:3  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_5: stg_414 [1/1] 0.00ns
branch28:4  br label %.loopexit.i.0

ST_5: src_kernel_win_0_val_2_1_6 [1/1] 0.00ns
branch27:0  %src_kernel_win_0_val_2_1_6 = load i8* %right_border_buf_0_val_0_0, align 1

ST_5: stg_416 [1/1] 1.50ns
branch27:1  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_5: stg_417 [1/1] 1.79ns
branch27:2  store i8 %src_kernel_win_0_val_2_1_6, i8* %src_kernel_win_0_val_2_1, align 1

ST_5: stg_418 [1/1] 1.50ns
branch27:3  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_5: stg_419 [1/1] 0.00ns
branch27:4  br label %.loopexit.i.0

ST_5: src_kernel_win_0_val_2_1_5 [1/1] 0.00ns
branch29:0  %src_kernel_win_0_val_2_1_5 = load i8* %right_border_buf_0_val_0_2, align 1

ST_5: stg_421 [1/1] 1.50ns
branch29:1  store i8 %src_kernel_win_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_5: stg_422 [1/1] 1.79ns
branch29:2  store i8 %src_kernel_win_0_val_2_1_5, i8* %src_kernel_win_0_val_2_1, align 1

ST_5: stg_423 [1/1] 1.50ns
branch29:3  store i8 %src_kernel_win_0_val_0_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_5: stg_424 [1/1] 0.00ns
branch29:4  br label %.loopexit.i.0

ST_5: stg_425 [1/1] 1.50ns
.loopexit.i.0.pre:0  store i8 %right_border_buf_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_5: stg_426 [1/1] 1.79ns
.loopexit.i.0.pre:1  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_5: stg_427 [1/1] 1.50ns
.loopexit.i.0.pre:2  store i8 %right_border_buf_0_val_2_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_5: stg_428 [1/1] 0.00ns
.loopexit.i.0.pre:3  br label %.loopexit.i.0

ST_5: stg_429 [1/1] 1.50ns
._crit_edge238.i.0.2:2  store i8 %right_border_buf_0_val_1_0, i8* %src_kernel_win_0_val_1_1, align 1

ST_5: stg_430 [1/1] 1.79ns
._crit_edge238.i.0.2:3  store i8 %src_kernel_win_0_val_2_0, i8* %src_kernel_win_0_val_2_1, align 1

ST_5: stg_431 [1/1] 1.50ns
._crit_edge238.i.0.2:4  store i8 %right_border_buf_0_val_2_0, i8* %src_kernel_win_0_val_0_1, align 1

ST_5: stg_432 [1/1] 0.00ns
._crit_edge238.i.0.2:5  br label %.loopexit.i.0

ST_5: t_1 [1/1] 21.28ns
._crit_edge241.i.1.0:0  %t_1 = call fastcc i15 @borderInterpolate(i13 %ImagLoc_y, i12 %p_src_rows_V_read_1, i5 4) nounwind

ST_5: tmp_31 [1/1] 0.00ns
._crit_edge241.i.1.0:1  %tmp_31 = trunc i15 %t_1 to i2

ST_5: locy_1 [1/1] 0.80ns
._crit_edge241.i.1.0:2  %locy_1 = sub i2 %p_i_2_cast_cast, %tmp_31

ST_5: col_buf_1_val_0_0_load [1/1] 0.00ns
._crit_edge241.i.1.0:3  %col_buf_1_val_0_0_load = load i8* %col_buf_1_val_0_0, align 1

ST_5: sel_tmp8 [1/1] 1.36ns
._crit_edge241.i.1.0:4  %sel_tmp8 = icmp eq i2 %p_i_2_cast_cast, %tmp_31

ST_5: sel_tmp9 [1/1] 1.37ns
._crit_edge241.i.1.0:5  %sel_tmp9 = select i1 %sel_tmp8, i8 %col_buf_1_val_0_0_load, i8 %src_kernel_win_1_val_2_0

ST_5: sel_tmp3 [1/1] 1.36ns
._crit_edge241.i.1.0:6  %sel_tmp3 = icmp eq i2 %locy_1, 1

ST_5: src_kernel_win_1_val_0_1_3 [1/1] 1.37ns
._crit_edge241.i.1.0:7  %src_kernel_win_1_val_0_1_3 = select i1 %sel_tmp3, i8 %right_border_buf_1_val_1_0, i8 %sel_tmp9

ST_5: t_1_1 [1/1] 21.28ns
._crit_edge241.i.1.0:8  %t_1_1 = call fastcc i15 @borderInterpolate(i13 %y_1_2, i12 %p_src_rows_V_read_1, i5 4) nounwind

ST_5: tmp_32 [1/1] 0.00ns
._crit_edge241.i.1.0:9  %tmp_32 = trunc i15 %t_1_1 to i2

ST_5: locy_1_1 [1/1] 0.80ns
._crit_edge241.i.1.0:10  %locy_1_1 = sub i2 %p_i_2_cast_cast, %tmp_32

ST_5: col_buf_1_val_0_0_load_1 [1/1] 0.00ns
._crit_edge241.i.1.0:11  %col_buf_1_val_0_0_load_1 = load i8* %col_buf_1_val_0_0, align 1

ST_5: sel_tmp7 [1/1] 1.36ns
._crit_edge241.i.1.0:12  %sel_tmp7 = icmp eq i2 %p_i_2_cast_cast, %tmp_32

ST_5: sel_tmp10 [1/1] 1.37ns
._crit_edge241.i.1.0:13  %sel_tmp10 = select i1 %sel_tmp7, i8 %col_buf_1_val_0_0_load_1, i8 %src_kernel_win_1_val_2_0

ST_5: sel_tmp11 [1/1] 1.36ns
._crit_edge241.i.1.0:14  %sel_tmp11 = icmp eq i2 %locy_1_1, 1

ST_5: src_kernel_win_1_val_1_1_3 [1/1] 1.37ns
._crit_edge241.i.1.0:15  %src_kernel_win_1_val_1_1_3 = select i1 %sel_tmp11, i8 %right_border_buf_1_val_1_0, i8 %sel_tmp10

ST_5: stg_449 [1/1] 1.50ns
.loopexit.i.1.pre241:0  store i8 %src_kernel_win_1_val_1_1_3, i8* %src_kernel_win_1_val_1_1, align 1

ST_5: stg_450 [1/1] 1.79ns
.loopexit.i.1.pre241:1  store i8 %right_border_buf_1_val_1_0, i8* %src_kernel_win_1_val_2_1, align 1

ST_5: stg_451 [1/1] 1.50ns
.loopexit.i.1.pre241:2  store i8 %src_kernel_win_1_val_0_1_3, i8* %src_kernel_win_1_val_0_1, align 1

ST_5: stg_452 [1/1] 0.00ns
.loopexit.i.1.pre241:3  br label %.loopexit.i.1

ST_5: src_kernel_win_1_val_2_1_3 [1/1] 0.00ns
branch15:0  %src_kernel_win_1_val_2_1_3 = load i8* %col_buf_1_val_0_0, align 1

ST_5: stg_454 [1/1] 1.50ns
branch15:1  store i8 %src_kernel_win_1_val_1_1_3, i8* %src_kernel_win_1_val_1_1, align 1

ST_5: stg_455 [1/1] 1.79ns
branch15:2  store i8 %src_kernel_win_1_val_2_1_3, i8* %src_kernel_win_1_val_2_1, align 1

ST_5: stg_456 [1/1] 1.50ns
branch15:3  store i8 %src_kernel_win_1_val_0_1_3, i8* %src_kernel_win_1_val_0_1, align 1

ST_5: stg_457 [1/1] 0.00ns
branch15:4  br label %.loopexit.i.1

ST_5: stg_458 [1/1] 1.50ns
branch17:0  store i8 %src_kernel_win_1_val_1_1_3, i8* %src_kernel_win_1_val_1_1, align 1

ST_5: stg_459 [1/1] 1.79ns
branch17:1  store i8 %src_kernel_win_1_val_2_0, i8* %src_kernel_win_1_val_2_1, align 1

ST_5: stg_460 [1/1] 1.50ns
branch17:2  store i8 %src_kernel_win_1_val_0_1_3, i8* %src_kernel_win_1_val_0_1, align 1

ST_5: stg_461 [1/1] 0.00ns
branch17:3  br label %.loopexit.i.1

ST_5: src_kernel_win_1_val_0_0 [1/1] 0.00ns
._crit_edge239.i.1.0:0  %src_kernel_win_1_val_0_0 = phi i8 [ %col_buf_1_val_0_0_1_load, %branch59 ], [ %col_buf_1_val_0_0_2_load, %branch58 ], [ %col_buf_1_val_0_0_3_load, %.preheader.i.1 ]

ST_5: src_kernel_win_1_val_1_0 [1/1] 0.00ns
._crit_edge239.i.1.1:0  %src_kernel_win_1_val_1_0 = phi i8 [ %right_border_buf_1_val_1_2_1_load, %branch52 ], [ %right_border_buf_1_val_1_2_2_load, %branch53 ], [ %right_border_buf_1_val_1_2_load, %._crit_edge239.i.1.0 ]

ST_5: src_kernel_win_1_val_2_1_7 [1/1] 0.00ns
branch46:0  %src_kernel_win_1_val_2_1_7 = load i8* %right_border_buf_1_val_0_1, align 1

ST_5: stg_465 [1/1] 1.50ns
branch46:1  store i8 %src_kernel_win_1_val_1_0, i8* %src_kernel_win_1_val_1_1, align 1

ST_5: stg_466 [1/1] 1.79ns
branch46:2  store i8 %src_kernel_win_1_val_2_1_7, i8* %src_kernel_win_1_val_2_1, align 1

ST_5: stg_467 [1/1] 1.50ns
branch46:3  store i8 %src_kernel_win_1_val_0_0, i8* %src_kernel_win_1_val_0_1, align 1

ST_5: stg_468 [1/1] 0.00ns
branch46:4  br label %.loopexit.i.1

ST_5: src_kernel_win_1_val_2_1_6 [1/1] 0.00ns
branch45:0  %src_kernel_win_1_val_2_1_6 = load i8* %right_border_buf_1_val_0_0, align 1

ST_5: stg_470 [1/1] 1.50ns
branch45:1  store i8 %src_kernel_win_1_val_1_0, i8* %src_kernel_win_1_val_1_1, align 1

ST_5: stg_471 [1/1] 1.79ns
branch45:2  store i8 %src_kernel_win_1_val_2_1_6, i8* %src_kernel_win_1_val_2_1, align 1

ST_5: stg_472 [1/1] 1.50ns
branch45:3  store i8 %src_kernel_win_1_val_0_0, i8* %src_kernel_win_1_val_0_1, align 1

ST_5: stg_473 [1/1] 0.00ns
branch45:4  br label %.loopexit.i.1

ST_5: src_kernel_win_1_val_2_1_5 [1/1] 0.00ns
branch47:0  %src_kernel_win_1_val_2_1_5 = load i8* %right_border_buf_1_val_0_2, align 1

ST_5: stg_475 [1/1] 1.50ns
branch47:1  store i8 %src_kernel_win_1_val_1_0, i8* %src_kernel_win_1_val_1_1, align 1

ST_5: stg_476 [1/1] 1.79ns
branch47:2  store i8 %src_kernel_win_1_val_2_1_5, i8* %src_kernel_win_1_val_2_1, align 1

ST_5: stg_477 [1/1] 1.50ns
branch47:3  store i8 %src_kernel_win_1_val_0_0, i8* %src_kernel_win_1_val_0_1, align 1

ST_5: stg_478 [1/1] 0.00ns
branch47:4  br label %.loopexit.i.1

ST_5: stg_479 [1/1] 1.50ns
.loopexit.i.1.pre:0  store i8 %right_border_buf_1_val_1_0, i8* %src_kernel_win_1_val_1_1, align 1

ST_5: stg_480 [1/1] 1.79ns
.loopexit.i.1.pre:1  store i8 %src_kernel_win_1_val_2_0, i8* %src_kernel_win_1_val_2_1, align 1

ST_5: stg_481 [1/1] 1.50ns
.loopexit.i.1.pre:2  store i8 %right_border_buf_1_val_2_0, i8* %src_kernel_win_1_val_0_1, align 1

ST_5: stg_482 [1/1] 0.00ns
.loopexit.i.1.pre:3  br label %.loopexit.i.1

ST_5: stg_483 [1/1] 1.50ns
._crit_edge238.i.1.2:2  store i8 %right_border_buf_1_val_1_0, i8* %src_kernel_win_1_val_1_1, align 1

ST_5: stg_484 [1/1] 1.79ns
._crit_edge238.i.1.2:3  store i8 %src_kernel_win_1_val_2_0, i8* %src_kernel_win_1_val_2_1, align 1

ST_5: stg_485 [1/1] 1.50ns
._crit_edge238.i.1.2:4  store i8 %right_border_buf_1_val_2_0, i8* %src_kernel_win_1_val_0_1, align 1

ST_5: stg_486 [1/1] 0.00ns
._crit_edge238.i.1.2:5  br label %.loopexit.i.1

ST_5: t_2 [1/1] 21.28ns
._crit_edge241.i.2.0:0  %t_2 = call fastcc i15 @borderInterpolate(i13 %ImagLoc_y, i12 %p_src_rows_V_read_1, i5 4) nounwind

ST_5: tmp_41 [1/1] 0.00ns
._crit_edge241.i.2.0:1  %tmp_41 = trunc i15 %t_2 to i2

ST_5: locy_2 [1/1] 0.80ns
._crit_edge241.i.2.0:2  %locy_2 = sub i2 %p_i_2_cast_cast, %tmp_41

ST_5: col_buf_2_val_0_0_load [1/1] 0.00ns
._crit_edge241.i.2.0:3  %col_buf_2_val_0_0_load = load i8* %col_buf_2_val_0_0, align 1

ST_5: sel_tmp12 [1/1] 1.36ns
._crit_edge241.i.2.0:4  %sel_tmp12 = icmp eq i2 %p_i_2_cast_cast, %tmp_41

ST_5: sel_tmp13 [1/1] 1.37ns
._crit_edge241.i.2.0:5  %sel_tmp13 = select i1 %sel_tmp12, i8 %col_buf_2_val_0_0_load, i8 %src_kernel_win_2_val_2_0

ST_5: sel_tmp14 [1/1] 1.36ns
._crit_edge241.i.2.0:6  %sel_tmp14 = icmp eq i2 %locy_2, 1

ST_5: src_kernel_win_2_val_0_1_3 [1/1] 1.37ns
._crit_edge241.i.2.0:7  %src_kernel_win_2_val_0_1_3 = select i1 %sel_tmp14, i8 %right_border_buf_2_val_1_0, i8 %sel_tmp13

ST_5: t_2_1 [1/1] 21.28ns
._crit_edge241.i.2.0:8  %t_2_1 = call fastcc i15 @borderInterpolate(i13 %y_1_2, i12 %p_src_rows_V_read_1, i5 4) nounwind

ST_5: tmp_42 [1/1] 0.00ns
._crit_edge241.i.2.0:9  %tmp_42 = trunc i15 %t_2_1 to i2

ST_5: locy_2_1 [1/1] 0.80ns
._crit_edge241.i.2.0:10  %locy_2_1 = sub i2 %p_i_2_cast_cast, %tmp_42

ST_5: col_buf_2_val_0_0_load_1 [1/1] 0.00ns
._crit_edge241.i.2.0:11  %col_buf_2_val_0_0_load_1 = load i8* %col_buf_2_val_0_0, align 1

ST_5: sel_tmp15 [1/1] 1.36ns
._crit_edge241.i.2.0:12  %sel_tmp15 = icmp eq i2 %p_i_2_cast_cast, %tmp_42

ST_5: sel_tmp16 [1/1] 1.37ns
._crit_edge241.i.2.0:13  %sel_tmp16 = select i1 %sel_tmp15, i8 %col_buf_2_val_0_0_load_1, i8 %src_kernel_win_2_val_2_0

ST_5: sel_tmp17 [1/1] 1.36ns
._crit_edge241.i.2.0:14  %sel_tmp17 = icmp eq i2 %locy_2_1, 1

ST_5: src_kernel_win_2_val_1_1_3 [1/1] 1.37ns
._crit_edge241.i.2.0:15  %src_kernel_win_2_val_1_1_3 = select i1 %sel_tmp17, i8 %right_border_buf_2_val_1_0, i8 %sel_tmp16

ST_5: stg_503 [1/1] 1.50ns
.loopexit.i.2.pre237:0  store i8 %src_kernel_win_2_val_1_1_3, i8* %src_kernel_win_2_val_1_1, align 1

ST_5: stg_504 [1/1] 1.79ns
.loopexit.i.2.pre237:1  store i8 %right_border_buf_2_val_1_0, i8* %src_kernel_win_2_val_2_1, align 1

ST_5: stg_505 [1/1] 1.50ns
.loopexit.i.2.pre237:2  store i8 %src_kernel_win_2_val_0_1_3, i8* %src_kernel_win_2_val_0_1, align 1

ST_5: stg_506 [1/1] 0.00ns
.loopexit.i.2.pre237:3  br label %.loopexit.i.2

ST_5: src_kernel_win_2_val_2_1_3 [1/1] 0.00ns
branch24:0  %src_kernel_win_2_val_2_1_3 = load i8* %col_buf_2_val_0_0, align 1

ST_5: stg_508 [1/1] 1.50ns
branch24:1  store i8 %src_kernel_win_2_val_1_1_3, i8* %src_kernel_win_2_val_1_1, align 1

ST_5: stg_509 [1/1] 1.79ns
branch24:2  store i8 %src_kernel_win_2_val_2_1_3, i8* %src_kernel_win_2_val_2_1, align 1

ST_5: stg_510 [1/1] 1.50ns
branch24:3  store i8 %src_kernel_win_2_val_0_1_3, i8* %src_kernel_win_2_val_0_1, align 1

ST_5: stg_511 [1/1] 0.00ns
branch24:4  br label %.loopexit.i.2

ST_5: stg_512 [1/1] 1.50ns
branch26:0  store i8 %src_kernel_win_2_val_1_1_3, i8* %src_kernel_win_2_val_1_1, align 1

ST_5: stg_513 [1/1] 1.79ns
branch26:1  store i8 %src_kernel_win_2_val_2_0, i8* %src_kernel_win_2_val_2_1, align 1

ST_5: stg_514 [1/1] 1.50ns
branch26:2  store i8 %src_kernel_win_2_val_0_1_3, i8* %src_kernel_win_2_val_0_1, align 1

ST_5: stg_515 [1/1] 0.00ns
branch26:3  br label %.loopexit.i.2

ST_5: src_kernel_win_2_val_0_0 [1/1] 0.00ns
._crit_edge239.i.2.0:0  %src_kernel_win_2_val_0_0 = phi i8 [ %col_buf_2_val_0_0_1_load, %branch77 ], [ %col_buf_2_val_0_0_2_load, %branch76 ], [ %col_buf_2_val_0_0_3_load, %.preheader.i.2 ]

ST_5: src_kernel_win_2_val_1_0 [1/1] 0.00ns
._crit_edge239.i.2.1:0  %src_kernel_win_2_val_1_0 = phi i8 [ %right_border_buf_2_val_1_2_1_load, %branch70 ], [ %right_border_buf_2_val_1_2_load, %branch71 ], [ %right_border_buf_2_val_1_2_2_load, %._crit_edge239.i.2.0 ]

ST_5: src_kernel_win_2_val_2_1_7 [1/1] 0.00ns
branch64:0  %src_kernel_win_2_val_2_1_7 = load i8* %right_border_buf_2_val_0_1, align 1

ST_5: stg_519 [1/1] 1.50ns
branch64:1  store i8 %src_kernel_win_2_val_1_0, i8* %src_kernel_win_2_val_1_1, align 1

ST_5: stg_520 [1/1] 1.79ns
branch64:2  store i8 %src_kernel_win_2_val_2_1_7, i8* %src_kernel_win_2_val_2_1, align 1

ST_5: stg_521 [1/1] 1.50ns
branch64:3  store i8 %src_kernel_win_2_val_0_0, i8* %src_kernel_win_2_val_0_1, align 1

ST_5: stg_522 [1/1] 0.00ns
branch64:4  br label %.loopexit.i.2

ST_5: src_kernel_win_2_val_2_1_6 [1/1] 0.00ns
branch63:0  %src_kernel_win_2_val_2_1_6 = load i8* %right_border_buf_2_val_0_0, align 1

ST_5: stg_524 [1/1] 1.50ns
branch63:1  store i8 %src_kernel_win_2_val_1_0, i8* %src_kernel_win_2_val_1_1, align 1

ST_5: stg_525 [1/1] 1.79ns
branch63:2  store i8 %src_kernel_win_2_val_2_1_6, i8* %src_kernel_win_2_val_2_1, align 1

ST_5: stg_526 [1/1] 1.50ns
branch63:3  store i8 %src_kernel_win_2_val_0_0, i8* %src_kernel_win_2_val_0_1, align 1

ST_5: stg_527 [1/1] 0.00ns
branch63:4  br label %.loopexit.i.2

ST_5: src_kernel_win_2_val_2_1_5 [1/1] 0.00ns
branch65:0  %src_kernel_win_2_val_2_1_5 = load i8* %right_border_buf_2_val_0_2, align 1

ST_5: stg_529 [1/1] 1.50ns
branch65:1  store i8 %src_kernel_win_2_val_1_0, i8* %src_kernel_win_2_val_1_1, align 1

ST_5: stg_530 [1/1] 1.79ns
branch65:2  store i8 %src_kernel_win_2_val_2_1_5, i8* %src_kernel_win_2_val_2_1, align 1

ST_5: stg_531 [1/1] 1.50ns
branch65:3  store i8 %src_kernel_win_2_val_0_0, i8* %src_kernel_win_2_val_0_1, align 1

ST_5: stg_532 [1/1] 0.00ns
branch65:4  br label %.loopexit.i.2

ST_5: stg_533 [1/1] 1.50ns
.loopexit.i.2.pre:0  store i8 %right_border_buf_2_val_1_0, i8* %src_kernel_win_2_val_1_1, align 1

ST_5: stg_534 [1/1] 1.79ns
.loopexit.i.2.pre:1  store i8 %src_kernel_win_2_val_2_0, i8* %src_kernel_win_2_val_2_1, align 1

ST_5: stg_535 [1/1] 1.50ns
.loopexit.i.2.pre:2  store i8 %right_border_buf_2_val_2_0, i8* %src_kernel_win_2_val_0_1, align 1

ST_5: stg_536 [1/1] 0.00ns
.loopexit.i.2.pre:3  br label %.loopexit.i.2

ST_5: stg_537 [1/1] 1.50ns
._crit_edge238.i.2.2:2  store i8 %right_border_buf_2_val_1_0, i8* %src_kernel_win_2_val_1_1, align 1

ST_5: stg_538 [1/1] 1.79ns
._crit_edge238.i.2.2:3  store i8 %src_kernel_win_2_val_2_0, i8* %src_kernel_win_2_val_2_1, align 1

ST_5: stg_539 [1/1] 1.50ns
._crit_edge238.i.2.2:4  store i8 %right_border_buf_2_val_2_0, i8* %src_kernel_win_2_val_0_1, align 1

ST_5: stg_540 [1/1] 0.00ns
._crit_edge238.i.2.2:5  br label %.loopexit.i.2


 <State 6>: 16.51ns
ST_6: src_kernel_win_0_val_0_1_load [1/1] 0.00ns
.preheader.0:0  %src_kernel_win_0_val_0_1_load = load i8* %src_kernel_win_0_val_0_1, align 1

ST_6: src_kernel_win_0_val_0_2_load [1/1] 0.00ns
.preheader.0:1  %src_kernel_win_0_val_0_2_load = load i8* %src_kernel_win_0_val_0_2, align 1

ST_6: src_kernel_win_0_val_2_1_load [1/1] 0.00ns
.preheader.0:2  %src_kernel_win_0_val_2_1_load = load i8* %src_kernel_win_0_val_2_1, align 1

ST_6: src_kernel_win_0_val_1_1_load [1/1] 0.00ns
.preheader.0:3  %src_kernel_win_0_val_1_1_load = load i8* %src_kernel_win_0_val_1_1, align 1

ST_6: src_kernel_win_0_val_1_2_load [1/1] 0.00ns
.preheader.0:4  %src_kernel_win_0_val_1_2_load = load i8* %src_kernel_win_0_val_1_2, align 1

ST_6: src_kernel_win_0_val_2_2_load [1/1] 0.00ns
.preheader.0:5  %src_kernel_win_0_val_2_2_load = load i8* %src_kernel_win_0_val_2_2, align 1

ST_6: OP1_V_0_0_cast [1/1] 0.00ns
.preheader.0:6  %OP1_V_0_0_cast = zext i8 %src_kernel_win_0_val_2_2_load to i9

ST_6: OP1_V_0_0_2_cast [1/1] 0.00ns
.preheader.0:7  %OP1_V_0_0_2_cast = zext i8 %src_kernel_win_0_val_2_1_load to i9

ST_6: p_Val2_2_0_0_2 [1/1] 1.72ns
.preheader.0:8  %p_Val2_2_0_0_2 = sub i9 %OP1_V_0_0_2_cast, %OP1_V_0_0_cast

ST_6: p_Val2_2_0_0_2_cast [1/1] 0.00ns
.preheader.0:9  %p_Val2_2_0_0_2_cast = sext i9 %p_Val2_2_0_0_2 to i11

ST_6: p_shl [1/1] 0.00ns
.preheader.0:10  %p_shl = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_0_val_1_2_load, i1 false)

ST_6: p_shl_cast [1/1] 0.00ns
.preheader.0:11  %p_shl_cast = zext i9 %p_shl to i11

ST_6: p_Val2_2_0_1 [1/1] 1.84ns
.preheader.0:12  %p_Val2_2_0_1 = sub i11 %p_Val2_2_0_0_2_cast, %p_shl_cast

ST_6: r_V_0_1_2 [1/1] 0.00ns
.preheader.0:13  %r_V_0_1_2 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_0_val_1_1_load, i1 false)

ST_6: r_V_0_1_2_cast [1/1] 0.00ns
.preheader.0:14  %r_V_0_1_2_cast = zext i9 %r_V_0_1_2 to i11

ST_6: p_Val2_2_0_1_2 [1/1] 1.84ns
.preheader.0:15  %p_Val2_2_0_1_2 = add i11 %p_Val2_2_0_1, %r_V_0_1_2_cast

ST_6: OP1_V_0_2_cast [1/1] 0.00ns
.preheader.0:16  %OP1_V_0_2_cast = zext i8 %src_kernel_win_0_val_0_2_load to i11

ST_6: p_Val2_2_0_2 [1/1] 1.84ns
.preheader.0:17  %p_Val2_2_0_2 = sub i11 %p_Val2_2_0_1_2, %OP1_V_0_2_cast

ST_6: OP1_V_0_2_2_cast [1/1] 0.00ns
.preheader.0:18  %OP1_V_0_2_2_cast = zext i8 %src_kernel_win_0_val_0_1_load to i11

ST_6: p_Val2_1 [1/1] 1.84ns
.preheader.0:19  %p_Val2_1 = add i11 %p_Val2_2_0_2, %OP1_V_0_2_2_cast

ST_6: isneg [1/1] 0.00ns
.preheader.0:20  %isneg = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_Val2_1, i32 10)

ST_6: p_Val2_2 [1/1] 0.00ns
.preheader.0:21  %p_Val2_2 = trunc i11 %p_Val2_1 to i8

ST_6: tmp_21 [1/1] 0.00ns
.preheader.0:22  %tmp_21 = call i3 @_ssdm_op_PartSelect.i3.i11.i32.i32(i11 %p_Val2_1, i32 8, i32 10)

ST_6: tmp_i_i [1/1] 1.37ns
.preheader.0:23  %tmp_i_i = xor i1 %isneg, true

ST_6: not_i_i_i [1/1] 1.62ns
.preheader.0:24  %not_i_i_i = icmp ne i3 %tmp_21, 0

ST_6: overflow [1/1] 1.37ns
.preheader.0:25  %overflow = and i1 %not_i_i_i, %tmp_i_i

ST_6: p_mux_i_i [1/1] 0.00ns
.preheader.0:26  %p_mux_i_i = sext i1 %tmp_i_i to i8

ST_6: tmp_i_i_98 [1/1] 1.37ns
.preheader.0:27  %tmp_i_i_98 = or i1 %isneg, %overflow

ST_6: p_Val2_9 [1/1] 1.37ns
.preheader.0:28  %p_Val2_9 = select i1 %tmp_i_i_98, i8 %p_mux_i_i, i8 %p_Val2_2

ST_6: stg_570 [1/1] 1.70ns
.preheader.0:29  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %p_dst_data_stream_0_V, i8 %p_Val2_9)

ST_6: stg_571 [1/1] 0.00ns
.preheader.0:30  br label %.loopexit._crit_edge.i.0

ST_6: src_kernel_win_1_val_0_1_load [1/1] 0.00ns
.preheader.1:0  %src_kernel_win_1_val_0_1_load = load i8* %src_kernel_win_1_val_0_1, align 1

ST_6: src_kernel_win_1_val_0_2_load [1/1] 0.00ns
.preheader.1:1  %src_kernel_win_1_val_0_2_load = load i8* %src_kernel_win_1_val_0_2, align 1

ST_6: src_kernel_win_1_val_2_1_load [1/1] 0.00ns
.preheader.1:2  %src_kernel_win_1_val_2_1_load = load i8* %src_kernel_win_1_val_2_1, align 1

ST_6: src_kernel_win_1_val_1_1_load [1/1] 0.00ns
.preheader.1:3  %src_kernel_win_1_val_1_1_load = load i8* %src_kernel_win_1_val_1_1, align 1

ST_6: src_kernel_win_1_val_1_2_load [1/1] 0.00ns
.preheader.1:4  %src_kernel_win_1_val_1_2_load = load i8* %src_kernel_win_1_val_1_2, align 1

ST_6: src_kernel_win_1_val_2_2_load [1/1] 0.00ns
.preheader.1:5  %src_kernel_win_1_val_2_2_load = load i8* %src_kernel_win_1_val_2_2, align 1

ST_6: OP1_V_1_0_cast [1/1] 0.00ns
.preheader.1:6  %OP1_V_1_0_cast = zext i8 %src_kernel_win_1_val_2_2_load to i9

ST_6: OP1_V_1_0_2_cast [1/1] 0.00ns
.preheader.1:7  %OP1_V_1_0_2_cast = zext i8 %src_kernel_win_1_val_2_1_load to i9

ST_6: p_Val2_2_1_0_2 [1/1] 1.72ns
.preheader.1:8  %p_Val2_2_1_0_2 = sub i9 %OP1_V_1_0_2_cast, %OP1_V_1_0_cast

ST_6: p_Val2_2_1_0_2_cast [1/1] 0.00ns
.preheader.1:9  %p_Val2_2_1_0_2_cast = sext i9 %p_Val2_2_1_0_2 to i11

ST_6: p_shl1 [1/1] 0.00ns
.preheader.1:10  %p_shl1 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_1_val_1_2_load, i1 false)

ST_6: p_shl1_cast [1/1] 0.00ns
.preheader.1:11  %p_shl1_cast = zext i9 %p_shl1 to i11

ST_6: p_Val2_2_1_1 [1/1] 1.84ns
.preheader.1:12  %p_Val2_2_1_1 = sub i11 %p_Val2_2_1_0_2_cast, %p_shl1_cast

ST_6: r_V_1_1_2 [1/1] 0.00ns
.preheader.1:13  %r_V_1_1_2 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_1_val_1_1_load, i1 false)

ST_6: r_V_1_1_2_cast [1/1] 0.00ns
.preheader.1:14  %r_V_1_1_2_cast = zext i9 %r_V_1_1_2 to i11

ST_6: p_Val2_2_1_1_2 [1/1] 1.84ns
.preheader.1:15  %p_Val2_2_1_1_2 = add i11 %p_Val2_2_1_1, %r_V_1_1_2_cast

ST_6: OP1_V_1_2_cast [1/1] 0.00ns
.preheader.1:16  %OP1_V_1_2_cast = zext i8 %src_kernel_win_1_val_0_2_load to i11

ST_6: p_Val2_2_1_2 [1/1] 1.84ns
.preheader.1:17  %p_Val2_2_1_2 = sub i11 %p_Val2_2_1_1_2, %OP1_V_1_2_cast

ST_6: OP1_V_1_2_2_cast [1/1] 0.00ns
.preheader.1:18  %OP1_V_1_2_2_cast = zext i8 %src_kernel_win_1_val_0_1_load to i11

ST_6: p_Val2_4 [1/1] 1.84ns
.preheader.1:19  %p_Val2_4 = add i11 %p_Val2_2_1_2, %OP1_V_1_2_2_cast

ST_6: isneg_1 [1/1] 0.00ns
.preheader.1:20  %isneg_1 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_Val2_4, i32 10)

ST_6: p_Val2_5 [1/1] 0.00ns
.preheader.1:21  %p_Val2_5 = trunc i11 %p_Val2_4 to i8

ST_6: tmp_23 [1/1] 0.00ns
.preheader.1:22  %tmp_23 = call i3 @_ssdm_op_PartSelect.i3.i11.i32.i32(i11 %p_Val2_4, i32 8, i32 10)

ST_6: tmp_i_i1 [1/1] 1.37ns
.preheader.1:23  %tmp_i_i1 = xor i1 %isneg_1, true

ST_6: not_i_i_i1 [1/1] 1.62ns
.preheader.1:24  %not_i_i_i1 = icmp ne i3 %tmp_23, 0

ST_6: overflow_1 [1/1] 1.37ns
.preheader.1:25  %overflow_1 = and i1 %not_i_i_i1, %tmp_i_i1

ST_6: p_mux_i_i1 [1/1] 0.00ns
.preheader.1:26  %p_mux_i_i1 = sext i1 %tmp_i_i1 to i8

ST_6: tmp_i_i1_99 [1/1] 1.37ns
.preheader.1:27  %tmp_i_i1_99 = or i1 %isneg_1, %overflow_1

ST_6: p_Val2_10 [1/1] 1.37ns
.preheader.1:28  %p_Val2_10 = select i1 %tmp_i_i1_99, i8 %p_mux_i_i1, i8 %p_Val2_5

ST_6: stg_601 [1/1] 1.70ns
.preheader.1:29  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %p_dst_data_stream_1_V, i8 %p_Val2_10)

ST_6: stg_602 [1/1] 0.00ns
.preheader.1:30  br label %.loopexit._crit_edge.i.1

ST_6: src_kernel_win_2_val_0_1_load [1/1] 0.00ns
.preheader.2:0  %src_kernel_win_2_val_0_1_load = load i8* %src_kernel_win_2_val_0_1, align 1

ST_6: src_kernel_win_2_val_0_2_load [1/1] 0.00ns
.preheader.2:1  %src_kernel_win_2_val_0_2_load = load i8* %src_kernel_win_2_val_0_2, align 1

ST_6: src_kernel_win_2_val_2_1_load [1/1] 0.00ns
.preheader.2:2  %src_kernel_win_2_val_2_1_load = load i8* %src_kernel_win_2_val_2_1, align 1

ST_6: src_kernel_win_2_val_1_1_load [1/1] 0.00ns
.preheader.2:3  %src_kernel_win_2_val_1_1_load = load i8* %src_kernel_win_2_val_1_1, align 1

ST_6: src_kernel_win_2_val_1_2_load [1/1] 0.00ns
.preheader.2:4  %src_kernel_win_2_val_1_2_load = load i8* %src_kernel_win_2_val_1_2, align 1

ST_6: src_kernel_win_2_val_2_2_load [1/1] 0.00ns
.preheader.2:5  %src_kernel_win_2_val_2_2_load = load i8* %src_kernel_win_2_val_2_2, align 1

ST_6: OP1_V_2_0_cast [1/1] 0.00ns
.preheader.2:6  %OP1_V_2_0_cast = zext i8 %src_kernel_win_2_val_2_2_load to i9

ST_6: OP1_V_2_0_2_cast [1/1] 0.00ns
.preheader.2:7  %OP1_V_2_0_2_cast = zext i8 %src_kernel_win_2_val_2_1_load to i9

ST_6: p_Val2_2_2_0_2 [1/1] 1.72ns
.preheader.2:8  %p_Val2_2_2_0_2 = sub i9 %OP1_V_2_0_2_cast, %OP1_V_2_0_cast

ST_6: p_Val2_2_2_0_2_cast [1/1] 0.00ns
.preheader.2:9  %p_Val2_2_2_0_2_cast = sext i9 %p_Val2_2_2_0_2 to i11

ST_6: p_shl2 [1/1] 0.00ns
.preheader.2:10  %p_shl2 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_2_val_1_2_load, i1 false)

ST_6: p_shl2_cast [1/1] 0.00ns
.preheader.2:11  %p_shl2_cast = zext i9 %p_shl2 to i11

ST_6: p_Val2_2_2_1 [1/1] 1.84ns
.preheader.2:12  %p_Val2_2_2_1 = sub i11 %p_Val2_2_2_0_2_cast, %p_shl2_cast

ST_6: r_V_2_1_2 [1/1] 0.00ns
.preheader.2:13  %r_V_2_1_2 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %src_kernel_win_2_val_1_1_load, i1 false)

ST_6: r_V_2_1_2_cast [1/1] 0.00ns
.preheader.2:14  %r_V_2_1_2_cast = zext i9 %r_V_2_1_2 to i11

ST_6: p_Val2_2_2_1_2 [1/1] 1.84ns
.preheader.2:15  %p_Val2_2_2_1_2 = add i11 %p_Val2_2_2_1, %r_V_2_1_2_cast

ST_6: OP1_V_2_2_cast [1/1] 0.00ns
.preheader.2:16  %OP1_V_2_2_cast = zext i8 %src_kernel_win_2_val_0_2_load to i11

ST_6: p_Val2_2_2_2 [1/1] 1.84ns
.preheader.2:17  %p_Val2_2_2_2 = sub i11 %p_Val2_2_2_1_2, %OP1_V_2_2_cast

ST_6: OP1_V_2_2_2_cast [1/1] 0.00ns
.preheader.2:18  %OP1_V_2_2_2_cast = zext i8 %src_kernel_win_2_val_0_1_load to i11

ST_6: p_Val2_s [1/1] 1.84ns
.preheader.2:19  %p_Val2_s = add i11 %p_Val2_2_2_2, %OP1_V_2_2_2_cast

ST_6: isneg_2 [1/1] 0.00ns
.preheader.2:20  %isneg_2 = call i1 @_ssdm_op_BitSelect.i1.i11.i32(i11 %p_Val2_s, i32 10)

ST_6: p_Val2_7 [1/1] 0.00ns
.preheader.2:21  %p_Val2_7 = trunc i11 %p_Val2_s to i8

ST_6: tmp_24 [1/1] 0.00ns
.preheader.2:22  %tmp_24 = call i3 @_ssdm_op_PartSelect.i3.i11.i32.i32(i11 %p_Val2_s, i32 8, i32 10)

ST_6: tmp_i_i2 [1/1] 1.37ns
.preheader.2:23  %tmp_i_i2 = xor i1 %isneg_2, true

ST_6: not_i_i_i2 [1/1] 1.62ns
.preheader.2:24  %not_i_i_i2 = icmp ne i3 %tmp_24, 0

ST_6: overflow_2 [1/1] 1.37ns
.preheader.2:25  %overflow_2 = and i1 %not_i_i_i2, %tmp_i_i2

ST_6: p_mux_i_i2 [1/1] 0.00ns
.preheader.2:26  %p_mux_i_i2 = sext i1 %tmp_i_i2 to i8

ST_6: tmp_i_i2_101 [1/1] 1.37ns
.preheader.2:27  %tmp_i_i2_101 = or i1 %isneg_2, %overflow_2

ST_6: p_Val2_11 [1/1] 1.37ns
.preheader.2:28  %p_Val2_11 = select i1 %tmp_i_i2_101, i8 %p_mux_i_i2, i8 %p_Val2_7

ST_6: stg_632 [1/1] 1.70ns
.preheader.2:29  call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %p_dst_data_stream_2_V, i8 %p_Val2_11)

ST_6: stg_633 [1/1] 0.00ns
.preheader.2:30  br label %.loopexit._crit_edge.i.2

ST_6: empty_100 [1/1] 0.00ns
.loopexit._crit_edge.i.2:0  %empty_100 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1820, i32 %tmp_s)

ST_6: stg_635 [1/1] 0.00ns
.loopexit._crit_edge.i.2:1  store i8 %src_kernel_win_2_val_2_1_9, i8* %src_kernel_win_2_val_2_2, align 1

ST_6: stg_636 [1/1] 0.00ns
.loopexit._crit_edge.i.2:2  store i8 %src_kernel_win_2_val_1_1_6, i8* %src_kernel_win_2_val_1_2, align 1

ST_6: stg_637 [1/1] 0.00ns
.loopexit._crit_edge.i.2:3  store i8 %src_kernel_win_2_val_0_1_6, i8* %src_kernel_win_2_val_0_2, align 1

ST_6: stg_638 [1/1] 0.00ns
.loopexit._crit_edge.i.2:4  store i8 %src_kernel_win_1_val_2_1_9, i8* %src_kernel_win_1_val_2_2, align 1

ST_6: stg_639 [1/1] 0.00ns
.loopexit._crit_edge.i.2:5  store i8 %src_kernel_win_1_val_1_1_6, i8* %src_kernel_win_1_val_1_2, align 1

ST_6: stg_640 [1/1] 0.00ns
.loopexit._crit_edge.i.2:6  store i8 %src_kernel_win_1_val_0_1_6, i8* %src_kernel_win_1_val_0_2, align 1

ST_6: stg_641 [1/1] 0.00ns
.loopexit._crit_edge.i.2:7  store i8 %src_kernel_win_0_val_2_1_9, i8* %src_kernel_win_0_val_2_2, align 1

ST_6: stg_642 [1/1] 0.00ns
.loopexit._crit_edge.i.2:8  store i8 %src_kernel_win_0_val_1_1_6, i8* %src_kernel_win_0_val_1_2, align 1

ST_6: stg_643 [1/1] 0.00ns
.loopexit._crit_edge.i.2:9  store i8 %src_kernel_win_0_val_0_1_6, i8* %src_kernel_win_0_val_0_2, align 1

ST_6: stg_644 [1/1] 0.00ns
.loopexit._crit_edge.i.2:10  br label %2


 <State 7>: 0.00ns
ST_7: empty_102 [1/1] 0.00ns
:0  %empty_102 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1819, i32 %tmp)

ST_7: stg_646 [1/1] 0.00ns
:1  br label %0



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

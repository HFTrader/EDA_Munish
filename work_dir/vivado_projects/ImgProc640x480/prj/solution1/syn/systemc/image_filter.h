// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.1
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _image_filter_HH_
#define _image_filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "init.h"
#include "init_1.h"
#include "AXIvideo2Mat_64_1080_1920_16_s.h"
#include "Mat2AXIvideo_64_1080_1920_16_s.h"
#include "FIFO_image_filter_img_0_rows_V.h"
#include "FIFO_image_filter_img_0_rows_V_channel.h"
#include "FIFO_image_filter_img_0_cols_V.h"
#include "FIFO_image_filter_img_0_cols_V_channel.h"
#include "FIFO_image_filter_img_0_data_stream_0_V.h"
#include "FIFO_image_filter_img_0_data_stream_1_V.h"
#include "FIFO_image_filter_img_0_data_stream_2_V.h"

namespace ap_rtl {

struct image_filter : public sc_module {
    // Port declarations 50
    sc_in< sc_lv<64> > input_V_data_V_dout;
    sc_in< sc_logic > input_V_data_V_empty_n;
    sc_out< sc_logic > input_V_data_V_read;
    sc_in< sc_lv<8> > input_V_keep_V_dout;
    sc_in< sc_logic > input_V_keep_V_empty_n;
    sc_out< sc_logic > input_V_keep_V_read;
    sc_in< sc_lv<8> > input_V_strb_V_dout;
    sc_in< sc_logic > input_V_strb_V_empty_n;
    sc_out< sc_logic > input_V_strb_V_read;
    sc_in< sc_lv<1> > input_V_user_V_dout;
    sc_in< sc_logic > input_V_user_V_empty_n;
    sc_out< sc_logic > input_V_user_V_read;
    sc_in< sc_lv<1> > input_V_last_V_dout;
    sc_in< sc_logic > input_V_last_V_empty_n;
    sc_out< sc_logic > input_V_last_V_read;
    sc_in< sc_lv<1> > input_V_id_V_dout;
    sc_in< sc_logic > input_V_id_V_empty_n;
    sc_out< sc_logic > input_V_id_V_read;
    sc_in< sc_lv<1> > input_V_dest_V_dout;
    sc_in< sc_logic > input_V_dest_V_empty_n;
    sc_out< sc_logic > input_V_dest_V_read;
    sc_out< sc_lv<64> > output_V_data_V_din;
    sc_in< sc_logic > output_V_data_V_full_n;
    sc_out< sc_logic > output_V_data_V_write;
    sc_out< sc_lv<8> > output_V_keep_V_din;
    sc_in< sc_logic > output_V_keep_V_full_n;
    sc_out< sc_logic > output_V_keep_V_write;
    sc_out< sc_lv<8> > output_V_strb_V_din;
    sc_in< sc_logic > output_V_strb_V_full_n;
    sc_out< sc_logic > output_V_strb_V_write;
    sc_out< sc_lv<1> > output_V_user_V_din;
    sc_in< sc_logic > output_V_user_V_full_n;
    sc_out< sc_logic > output_V_user_V_write;
    sc_out< sc_lv<1> > output_V_last_V_din;
    sc_in< sc_logic > output_V_last_V_full_n;
    sc_out< sc_logic > output_V_last_V_write;
    sc_out< sc_lv<1> > output_V_id_V_din;
    sc_in< sc_logic > output_V_id_V_full_n;
    sc_out< sc_logic > output_V_id_V_write;
    sc_out< sc_lv<1> > output_V_dest_V_din;
    sc_in< sc_logic > output_V_dest_V_full_n;
    sc_out< sc_logic > output_V_dest_V_write;
    sc_in< sc_lv<32> > rows;
    sc_in< sc_lv<32> > cols;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;


    // Module declarations
    image_filter(sc_module_name name);
    SC_HAS_PROCESS(image_filter);

    ~image_filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    init* init_U0;
    init_1* init_1_U0;
    AXIvideo2Mat_64_1080_1920_16_s* AXIvideo2Mat_64_1080_1920_16_U0;
    Mat2AXIvideo_64_1080_1920_16_s* Mat2AXIvideo_64_1080_1920_16_U0;
    FIFO_image_filter_img_0_rows_V* img_0_rows_V;
    FIFO_image_filter_img_0_rows_V_channel* img_0_rows_V_channel;
    FIFO_image_filter_img_0_cols_V* img_0_cols_V;
    FIFO_image_filter_img_0_cols_V_channel* img_0_cols_V_channel;
    FIFO_image_filter_img_0_data_stream_0_V* img_0_data_stream_0_V;
    FIFO_image_filter_img_0_data_stream_1_V* img_0_data_stream_1_V;
    FIFO_image_filter_img_0_data_stream_2_V* img_0_data_stream_2_V;
    sc_signal< sc_logic > init_U0_ap_start;
    sc_signal< sc_logic > init_U0_ap_done;
    sc_signal< sc_logic > init_U0_ap_continue;
    sc_signal< sc_logic > init_U0_ap_idle;
    sc_signal< sc_logic > init_U0_ap_ready;
    sc_signal< sc_lv<32> > init_U0_p_rows;
    sc_signal< sc_lv<32> > init_U0_p_cols;
    sc_signal< sc_lv<12> > init_U0_ap_return_0;
    sc_signal< sc_lv<12> > init_U0_ap_return_1;
    sc_signal< sc_lv<12> > init_U0_ap_return_2;
    sc_signal< sc_lv<12> > init_U0_ap_return_3;
    sc_signal< sc_logic > ap_chn_write_init_U0_img_0_rows_V;
    sc_signal< sc_logic > img_0_rows_V_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_0_rows_V_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_0_rows_V_full_n;
    sc_signal< sc_logic > ap_chn_write_init_U0_img_0_rows_V_channel;
    sc_signal< sc_logic > img_0_rows_V_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_0_rows_V_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_0_rows_V_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_init_U0_img_0_cols_V;
    sc_signal< sc_logic > img_0_cols_V_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_0_cols_V_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_0_cols_V_full_n;
    sc_signal< sc_logic > ap_chn_write_init_U0_img_0_cols_V_channel;
    sc_signal< sc_logic > img_0_cols_V_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_img_0_cols_V_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_img_0_cols_V_channel_full_n;
    sc_signal< sc_logic > init_1_U0_ap_start;
    sc_signal< sc_logic > init_1_U0_ap_done;
    sc_signal< sc_logic > init_1_U0_ap_continue;
    sc_signal< sc_logic > init_1_U0_ap_idle;
    sc_signal< sc_logic > init_1_U0_ap_ready;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_ap_start;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_ap_done;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_ap_continue;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_ap_idle;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_ap_ready;
    sc_signal< sc_lv<64> > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_data_V_dout;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_data_V_empty_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_data_V_read;
    sc_signal< sc_lv<8> > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_keep_V_dout;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_keep_V_empty_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_keep_V_read;
    sc_signal< sc_lv<8> > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_strb_V_dout;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_strb_V_empty_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_strb_V_read;
    sc_signal< sc_lv<1> > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_user_V_dout;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_user_V_empty_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_user_V_read;
    sc_signal< sc_lv<1> > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_last_V_dout;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_last_V_empty_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_last_V_read;
    sc_signal< sc_lv<1> > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_id_V_dout;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_id_V_empty_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_id_V_read;
    sc_signal< sc_lv<1> > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_dest_V_dout;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_dest_V_empty_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_dest_V_read;
    sc_signal< sc_lv<12> > AXIvideo2Mat_64_1080_1920_16_U0_img_rows_V_read;
    sc_signal< sc_lv<12> > AXIvideo2Mat_64_1080_1920_16_U0_img_cols_V_read;
    sc_signal< sc_lv<8> > AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_0_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_0_V_full_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_0_V_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_1_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_1_V_full_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_1_V_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_2_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_2_V_full_n;
    sc_signal< sc_logic > AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_2_V_write;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_ap_start;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_ap_done;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_ap_continue;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_ap_idle;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_ap_ready;
    sc_signal< sc_lv<12> > Mat2AXIvideo_64_1080_1920_16_U0_img_rows_V_read;
    sc_signal< sc_lv<12> > Mat2AXIvideo_64_1080_1920_16_U0_img_cols_V_read;
    sc_signal< sc_lv<8> > Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_0_V_dout;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_0_V_empty_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_0_V_read;
    sc_signal< sc_lv<8> > Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_1_V_dout;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_1_V_empty_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_1_V_read;
    sc_signal< sc_lv<8> > Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_2_V_dout;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_2_V_empty_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_2_V_read;
    sc_signal< sc_lv<64> > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_data_V_din;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_data_V_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_data_V_write;
    sc_signal< sc_lv<8> > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_keep_V_din;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_keep_V_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_keep_V_write;
    sc_signal< sc_lv<8> > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_strb_V_din;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_strb_V_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_strb_V_write;
    sc_signal< sc_lv<1> > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_user_V_din;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_user_V_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_user_V_write;
    sc_signal< sc_lv<1> > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_last_V_din;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_last_V_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_last_V_write;
    sc_signal< sc_lv<1> > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_id_V_din;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_id_V_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_id_V_write;
    sc_signal< sc_lv<1> > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_dest_V_din;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_dest_V_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_dest_V_write;
    sc_signal< sc_logic > ap_sig_hs_continue;
    sc_signal< sc_logic > img_0_rows_V_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_0_rows_V_din;
    sc_signal< sc_logic > img_0_rows_V_write;
    sc_signal< sc_lv<12> > img_0_rows_V_dout;
    sc_signal< sc_logic > img_0_rows_V_empty_n;
    sc_signal< sc_logic > img_0_rows_V_read;
    sc_signal< sc_logic > img_0_rows_V_channel_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_0_rows_V_channel_din;
    sc_signal< sc_logic > img_0_rows_V_channel_write;
    sc_signal< sc_lv<12> > img_0_rows_V_channel_dout;
    sc_signal< sc_logic > img_0_rows_V_channel_empty_n;
    sc_signal< sc_logic > img_0_rows_V_channel_read;
    sc_signal< sc_logic > img_0_cols_V_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_0_cols_V_din;
    sc_signal< sc_logic > img_0_cols_V_write;
    sc_signal< sc_lv<12> > img_0_cols_V_dout;
    sc_signal< sc_logic > img_0_cols_V_empty_n;
    sc_signal< sc_logic > img_0_cols_V_read;
    sc_signal< sc_logic > img_0_cols_V_channel_ap_dummy_ce;
    sc_signal< sc_lv<12> > img_0_cols_V_channel_din;
    sc_signal< sc_logic > img_0_cols_V_channel_write;
    sc_signal< sc_lv<12> > img_0_cols_V_channel_dout;
    sc_signal< sc_logic > img_0_cols_V_channel_empty_n;
    sc_signal< sc_logic > img_0_cols_V_channel_read;
    sc_signal< sc_logic > img_0_data_stream_0_V_ap_dummy_ce;
    sc_signal< sc_lv<8> > img_0_data_stream_0_V_din;
    sc_signal< sc_logic > img_0_data_stream_0_V_full_n;
    sc_signal< sc_logic > img_0_data_stream_0_V_write;
    sc_signal< sc_lv<8> > img_0_data_stream_0_V_dout;
    sc_signal< sc_logic > img_0_data_stream_0_V_empty_n;
    sc_signal< sc_logic > img_0_data_stream_0_V_read;
    sc_signal< sc_logic > img_0_data_stream_1_V_ap_dummy_ce;
    sc_signal< sc_lv<8> > img_0_data_stream_1_V_din;
    sc_signal< sc_logic > img_0_data_stream_1_V_full_n;
    sc_signal< sc_logic > img_0_data_stream_1_V_write;
    sc_signal< sc_lv<8> > img_0_data_stream_1_V_dout;
    sc_signal< sc_logic > img_0_data_stream_1_V_empty_n;
    sc_signal< sc_logic > img_0_data_stream_1_V_read;
    sc_signal< sc_logic > img_0_data_stream_2_V_ap_dummy_ce;
    sc_signal< sc_lv<8> > img_0_data_stream_2_V_din;
    sc_signal< sc_logic > img_0_data_stream_2_V_full_n;
    sc_signal< sc_logic > img_0_data_stream_2_V_write;
    sc_signal< sc_lv<8> > img_0_data_stream_2_V_dout;
    sc_signal< sc_logic > img_0_data_stream_2_V_empty_n;
    sc_signal< sc_logic > img_0_data_stream_2_V_read;
    sc_signal< sc_logic > ap_reg_procdone_init_U0;
    sc_signal< sc_logic > ap_sig_hs_done;
    sc_signal< sc_logic > ap_reg_procdone_init_1_U0;
    sc_signal< sc_logic > ap_reg_procdone_AXIvideo2Mat_64_1080_1920_16_U0;
    sc_signal< sc_logic > ap_reg_procdone_Mat2AXIvideo_64_1080_1920_16_U0;
    sc_signal< sc_logic > ap_CS;
    sc_signal< sc_logic > ap_sig_top_allready;
    sc_signal< sc_logic > ap_reg_ready_init_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_ready_init_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_start_in_init_U0_ap_start;
    sc_signal< sc_logic > ap_reg_ready_init_1_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_ready_init_1_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_start_in_init_1_U0_ap_start;
    sc_signal< sc_logic > ap_reg_ready_AXIvideo2Mat_64_1080_1920_16_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_ready_AXIvideo2Mat_64_1080_1920_16_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_start_in_AXIvideo2Mat_64_1080_1920_16_U0_ap_start;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_1;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_data_V_dout();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_data_V_empty_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_dest_V_dout();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_dest_V_empty_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_id_V_dout();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_id_V_empty_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_keep_V_dout();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_keep_V_empty_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_last_V_dout();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_last_V_empty_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_strb_V_dout();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_strb_V_empty_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_user_V_dout();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_AXI_video_strm_V_user_V_empty_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_ap_continue();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_ap_start();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_img_cols_V_read();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_0_V_full_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_1_V_full_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_img_data_stream_2_V_full_n();
    void thread_AXIvideo2Mat_64_1080_1920_16_U0_img_rows_V_read();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_data_V_full_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_dest_V_full_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_id_V_full_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_keep_V_full_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_last_V_full_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_strb_V_full_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_AXI_video_strm_V_user_V_full_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_ap_continue();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_ap_start();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_img_cols_V_read();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_0_V_dout();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_0_V_empty_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_1_V_dout();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_1_V_empty_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_2_V_dout();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_img_data_stream_2_V_empty_n();
    void thread_Mat2AXIvideo_64_1080_1920_16_U0_img_rows_V_read();
    void thread_ap_chn_write_init_U0_img_0_cols_V();
    void thread_ap_chn_write_init_U0_img_0_cols_V_channel();
    void thread_ap_chn_write_init_U0_img_0_rows_V();
    void thread_ap_chn_write_init_U0_img_0_rows_V_channel();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_hs_continue();
    void thread_ap_sig_hs_done();
    void thread_ap_sig_ready_AXIvideo2Mat_64_1080_1920_16_U0_ap_ready();
    void thread_ap_sig_ready_img_0_cols_V_channel_full_n();
    void thread_ap_sig_ready_img_0_cols_V_full_n();
    void thread_ap_sig_ready_img_0_rows_V_channel_full_n();
    void thread_ap_sig_ready_img_0_rows_V_full_n();
    void thread_ap_sig_ready_init_1_U0_ap_ready();
    void thread_ap_sig_ready_init_U0_ap_ready();
    void thread_ap_sig_start_in_AXIvideo2Mat_64_1080_1920_16_U0_ap_start();
    void thread_ap_sig_start_in_init_1_U0_ap_start();
    void thread_ap_sig_start_in_init_U0_ap_start();
    void thread_ap_sig_top_allready();
    void thread_img_0_cols_V_ap_dummy_ce();
    void thread_img_0_cols_V_channel_ap_dummy_ce();
    void thread_img_0_cols_V_channel_din();
    void thread_img_0_cols_V_channel_read();
    void thread_img_0_cols_V_channel_write();
    void thread_img_0_cols_V_din();
    void thread_img_0_cols_V_read();
    void thread_img_0_cols_V_write();
    void thread_img_0_data_stream_0_V_ap_dummy_ce();
    void thread_img_0_data_stream_0_V_din();
    void thread_img_0_data_stream_0_V_read();
    void thread_img_0_data_stream_0_V_write();
    void thread_img_0_data_stream_1_V_ap_dummy_ce();
    void thread_img_0_data_stream_1_V_din();
    void thread_img_0_data_stream_1_V_read();
    void thread_img_0_data_stream_1_V_write();
    void thread_img_0_data_stream_2_V_ap_dummy_ce();
    void thread_img_0_data_stream_2_V_din();
    void thread_img_0_data_stream_2_V_read();
    void thread_img_0_data_stream_2_V_write();
    void thread_img_0_rows_V_ap_dummy_ce();
    void thread_img_0_rows_V_channel_ap_dummy_ce();
    void thread_img_0_rows_V_channel_din();
    void thread_img_0_rows_V_channel_read();
    void thread_img_0_rows_V_channel_write();
    void thread_img_0_rows_V_din();
    void thread_img_0_rows_V_read();
    void thread_img_0_rows_V_write();
    void thread_init_1_U0_ap_continue();
    void thread_init_1_U0_ap_start();
    void thread_init_U0_ap_continue();
    void thread_init_U0_ap_start();
    void thread_init_U0_p_cols();
    void thread_init_U0_p_rows();
    void thread_input_V_data_V_read();
    void thread_input_V_dest_V_read();
    void thread_input_V_id_V_read();
    void thread_input_V_keep_V_read();
    void thread_input_V_last_V_read();
    void thread_input_V_strb_V_read();
    void thread_input_V_user_V_read();
    void thread_output_V_data_V_din();
    void thread_output_V_data_V_write();
    void thread_output_V_dest_V_din();
    void thread_output_V_dest_V_write();
    void thread_output_V_id_V_din();
    void thread_output_V_id_V_write();
    void thread_output_V_keep_V_din();
    void thread_output_V_keep_V_write();
    void thread_output_V_last_V_din();
    void thread_output_V_last_V_write();
    void thread_output_V_strb_V_din();
    void thread_output_V_strb_V_write();
    void thread_output_V_user_V_din();
    void thread_output_V_user_V_write();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

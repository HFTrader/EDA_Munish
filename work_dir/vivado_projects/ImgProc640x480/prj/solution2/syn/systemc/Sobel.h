// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.1
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _Sobel_HH_
#define _Sobel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s.h"

namespace ap_rtl {

struct Sobel : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > src_rows_V_read;
    sc_in< sc_lv<12> > src_cols_V_read;
    sc_in< sc_lv<8> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_in< sc_lv<8> > src_data_stream_1_V_dout;
    sc_in< sc_logic > src_data_stream_1_V_empty_n;
    sc_out< sc_logic > src_data_stream_1_V_read;
    sc_in< sc_lv<8> > src_data_stream_2_V_dout;
    sc_in< sc_logic > src_data_stream_2_V_empty_n;
    sc_out< sc_logic > src_data_stream_2_V_read;
    sc_out< sc_lv<8> > dst_data_stream_0_V_din;
    sc_in< sc_logic > dst_data_stream_0_V_full_n;
    sc_out< sc_logic > dst_data_stream_0_V_write;
    sc_out< sc_lv<8> > dst_data_stream_1_V_din;
    sc_in< sc_logic > dst_data_stream_1_V_full_n;
    sc_out< sc_logic > dst_data_stream_1_V_write;
    sc_out< sc_lv<8> > dst_data_stream_2_V_din;
    sc_in< sc_logic > dst_data_stream_2_V_full_n;
    sc_out< sc_logic > dst_data_stream_2_V_write;


    // Module declarations
    Sobel(sc_module_name name);
    SC_HAS_PROCESS(Sobel);

    ~Sobel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s* grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< bool > ap_sig_bdd_52;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_ap_start;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_ap_done;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_ap_idle;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_ap_ready;
    sc_signal< sc_lv<8> > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_0_V_dout;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_0_V_empty_n;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_0_V_read;
    sc_signal< sc_lv<8> > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_1_V_dout;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_1_V_empty_n;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_1_V_read;
    sc_signal< sc_lv<8> > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_2_V_dout;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_2_V_empty_n;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_2_V_read;
    sc_signal< sc_lv<8> > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_0_V_din;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_0_V_full_n;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_0_V_write;
    sc_signal< sc_lv<8> > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_1_V_din;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_1_V_full_n;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_1_V_write;
    sc_signal< sc_lv<8> > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_2_V_din;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_2_V_full_n;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_2_V_write;
    sc_signal< sc_lv<12> > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_rows;
    sc_signal< sc_lv<12> > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_cols;
    sc_signal< sc_logic > grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_ap_start_ap_start_reg;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<1> ap_ST_st2_fsm_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_52();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_write();
    void thread_dst_data_stream_1_V_din();
    void thread_dst_data_stream_1_V_write();
    void thread_dst_data_stream_2_V_din();
    void thread_dst_data_stream_2_V_write();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_ap_start();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_cols();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_0_V_full_n();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_1_V_full_n();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_dst_data_stream_2_V_full_n();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_0_V_dout();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_0_V_empty_n();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_1_V_dout();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_1_V_empty_n();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_2_V_dout();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_p_src_data_stream_2_V_empty_n();
    void thread_grp_filter_opr_filter2d_kernel_16_16_int_int_480_640_3_3_s_fu_49_rows();
    void thread_src_data_stream_0_V_read();
    void thread_src_data_stream_1_V_read();
    void thread_src_data_stream_2_V_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

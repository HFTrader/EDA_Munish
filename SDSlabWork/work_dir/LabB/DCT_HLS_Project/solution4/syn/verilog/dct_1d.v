// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_1d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_address0,
        src_ce0,
        src_q0,
        src_address1,
        src_ce1,
        src_q1,
        tmp_1,
        dst_address0,
        dst_ce0,
        dst_we0,
        dst_d0,
        tmp_11
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] src_address0;
output   src_ce0;
input  [15:0] src_q0;
output  [5:0] src_address1;
output   src_ce1;
input  [15:0] src_q1;
input  [3:0] tmp_1;
output  [5:0] dst_address0;
output   dst_ce0;
output   dst_we0;
output  [15:0] dst_d0;
input  [3:0] tmp_11;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] src_address0;
reg src_ce0;
reg[5:0] src_address1;
reg src_ce1;
reg dst_ce0;
reg dst_we0;
reg   [2:0] ap_CS_fsm = 3'b000;
wire   [2:0] dct_coeff_table_0_address0;
reg    dct_coeff_table_0_ce0;
wire   [13:0] dct_coeff_table_0_q0;
wire   [2:0] dct_coeff_table_1_address0;
reg    dct_coeff_table_1_ce0;
wire   [14:0] dct_coeff_table_1_q0;
wire   [2:0] dct_coeff_table_2_address0;
reg    dct_coeff_table_2_ce0;
wire   [14:0] dct_coeff_table_2_q0;
wire   [2:0] dct_coeff_table_3_address0;
reg    dct_coeff_table_3_ce0;
wire   [14:0] dct_coeff_table_3_q0;
wire   [2:0] dct_coeff_table_4_address0;
reg    dct_coeff_table_4_ce0;
wire   [14:0] dct_coeff_table_4_q0;
wire   [2:0] dct_coeff_table_5_address0;
reg    dct_coeff_table_5_ce0;
wire   [14:0] dct_coeff_table_5_q0;
wire   [2:0] dct_coeff_table_6_address0;
reg    dct_coeff_table_6_ce0;
wire   [14:0] dct_coeff_table_6_q0;
wire   [2:0] dct_coeff_table_7_address0;
reg    dct_coeff_table_7_ce0;
wire   [14:0] dct_coeff_table_7_q0;
reg   [3:0] k_reg_261;
reg   [15:0] reg_273;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] exitcond1_reg_626;
reg   [5:0] src_addr_reg_586;
reg   [5:0] src_addr_1_reg_591;
reg   [5:0] src_addr_2_reg_596;
reg   [5:0] src_addr_3_reg_601;
reg   [5:0] src_addr_4_reg_606;
reg   [5:0] src_addr_5_reg_611;
reg   [5:0] src_addr_6_reg_616;
reg   [5:0] src_addr_7_reg_621;
wire   [0:0] exitcond1_fu_382_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_626_pp0_it1;
wire   [3:0] k_1_fu_388_p2;
reg   [3:0] k_1_reg_630;
wire   [63:0] tmp_fu_394_p1;
reg   [63:0] tmp_reg_635;
wire   [7:0] p_addr8_fu_415_p2;
reg   [7:0] p_addr8_reg_655;
reg   [7:0] ap_reg_ppstg_p_addr8_reg_655_pp0_it1;
reg   [14:0] dct_coeff_table_1_load_reg_670;
wire   [28:0] tmp_8_1_fu_442_p2;
reg   [28:0] tmp_8_1_reg_705;
reg   [14:0] dct_coeff_table_2_load_reg_710;
reg   [14:0] dct_coeff_table_4_load_reg_725;
reg   [14:0] dct_coeff_table_5_load_reg_730;
reg   [14:0] dct_coeff_table_6_load_reg_735;
reg   [14:0] dct_coeff_table_7_load_reg_740;
wire   [28:0] tmp_8_2_fu_469_p2;
reg   [28:0] tmp_8_2_reg_745;
wire   [28:0] tmp2_fu_488_p2;
reg   [28:0] tmp2_reg_760;
wire   [28:0] tmp_8_4_fu_500_p2;
reg   [28:0] tmp_8_4_reg_765;
wire   [28:0] tmp_8_6_fu_513_p2;
reg   [28:0] tmp_8_6_reg_770;
wire   [28:0] tmp1_fu_524_p2;
reg   [28:0] tmp1_reg_775;
wire   [28:0] tmp5_fu_542_p2;
reg   [28:0] tmp5_reg_780;
wire   [28:0] tmp7_fu_547_p2;
reg   [28:0] tmp7_reg_785;
wire   [28:0] tmp4_fu_557_p2;
reg   [28:0] tmp4_reg_790;
reg   [3:0] k_phi_fu_265_p4;
wire   [63:0] tmp_6_fu_286_p1;
wire   [63:0] tmp_9_fu_299_p1;
wire   [63:0] tmp_12_fu_312_p1;
wire   [63:0] tmp_14_fu_325_p1;
wire   [63:0] tmp_16_fu_338_p1;
wire   [63:0] tmp_18_fu_351_p1;
wire   [63:0] tmp_20_fu_364_p1;
wire   [63:0] tmp_22_fu_377_p1;
wire   [63:0] tmp_24_fu_577_p1;
wire   [6:0] tmp_5_fu_278_p3;
wire   [6:0] tmp_7_fu_291_p3;
wire   [6:0] tmp_10_fu_304_p3;
wire   [6:0] tmp_13_fu_317_p3;
wire   [6:0] tmp_15_fu_330_p3;
wire   [6:0] tmp_17_fu_343_p3;
wire   [6:0] tmp_19_fu_356_p3;
wire   [6:0] tmp_21_fu_369_p3;
wire   [6:0] tmp_23_fu_404_p3;
wire   [7:0] p_addr_cast_fu_411_p1;
wire   [7:0] tmp_trn_cast_fu_400_p1;
wire   [15:0] grp_fu_429_p0;
wire   [13:0] grp_fu_429_p1;
wire   [15:0] tmp_8_1_fu_442_p0;
wire   [14:0] tmp_8_1_fu_442_p1;
wire   [15:0] grp_fu_456_p0;
wire   [14:0] grp_fu_456_p1;
wire   [15:0] tmp_8_2_fu_469_p0;
wire   [14:0] tmp_8_2_fu_469_p1;
wire   [15:0] grp_fu_482_p0;
wire   [14:0] grp_fu_482_p1;
wire   [28:0] grp_fu_429_p2;
wire   [15:0] tmp_8_4_fu_500_p0;
wire   [14:0] tmp_8_4_fu_500_p1;
wire   [15:0] tmp_8_6_fu_513_p0;
wire   [14:0] tmp_8_6_fu_513_p1;
wire   [28:0] grp_fu_456_p2;
wire   [28:0] tmp3_fu_519_p2;
wire   [15:0] tmp_8_7_fu_536_p0;
wire   [14:0] tmp_8_7_fu_536_p1;
wire   [28:0] grp_fu_482_p2;
wire   [28:0] tmp_8_7_fu_536_p2;
wire   [28:0] tmp6_fu_553_p2;
wire   [28:0] tmp_2_fu_562_p2;
wire    grp_fu_429_ce;
wire    grp_fu_456_ce;
wire    grp_fu_482_ce;
reg   [2:0] ap_NS_fsm;
wire   [28:0] grp_fu_429_p10;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b1;
parameter    ap_ST_pp0_stg1_fsm_2 = 3'b10;
parameter    ap_ST_pp0_stg2_fsm_3 = 3'b11;
parameter    ap_ST_pp0_stg3_fsm_4 = 3'b100;
parameter    ap_ST_st10_fsm_5 = 3'b101;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv29_1000 = 29'b1000000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_true = 1'b1;


dct_1d_dct_coeff_table_0 #(
    .DataWidth( 14 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_0_address0 ),
    .ce0( dct_coeff_table_0_ce0 ),
    .q0( dct_coeff_table_0_q0 )
);

dct_1d_dct_coeff_table_1 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_1_address0 ),
    .ce0( dct_coeff_table_1_ce0 ),
    .q0( dct_coeff_table_1_q0 )
);

dct_1d_dct_coeff_table_2 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_2_address0 ),
    .ce0( dct_coeff_table_2_ce0 ),
    .q0( dct_coeff_table_2_q0 )
);

dct_1d_dct_coeff_table_3 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_3_address0 ),
    .ce0( dct_coeff_table_3_ce0 ),
    .q0( dct_coeff_table_3_q0 )
);

dct_1d_dct_coeff_table_4 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_4_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_4_address0 ),
    .ce0( dct_coeff_table_4_ce0 ),
    .q0( dct_coeff_table_4_q0 )
);

dct_1d_dct_coeff_table_5 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_5_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_5_address0 ),
    .ce0( dct_coeff_table_5_ce0 ),
    .q0( dct_coeff_table_5_q0 )
);

dct_1d_dct_coeff_table_6 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_6_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_6_address0 ),
    .ce0( dct_coeff_table_6_ce0 ),
    .q0( dct_coeff_table_6_q0 )
);

dct_1d_dct_coeff_table_7 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_7_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_7_address0 ),
    .ce0( dct_coeff_table_7_ce0 ),
    .q0( dct_coeff_table_7_q0 )
);

dct_mul_16s_14ns_29_3 #(
    .ID( 3 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mul_16s_14ns_29_3_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_429_p0 ),
    .din1( grp_fu_429_p1 ),
    .ce( grp_fu_429_ce ),
    .dout( grp_fu_429_p2 )
);

dct_mul_16s_15s_29_3 #(
    .ID( 4 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
dct_mul_16s_15s_29_3_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_456_p0 ),
    .din1( grp_fu_456_p1 ),
    .ce( grp_fu_456_ce ),
    .dout( grp_fu_456_p2 )
);

dct_mul_16s_15s_29_3 #(
    .ID( 5 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
dct_mul_16s_15s_29_3_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_482_p0 ),
    .din1( grp_fu_482_p1 ),
    .ce( grp_fu_482_ce ),
    .dout( grp_fu_482_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond1_fu_382_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm) & ~(exitcond1_reg_626 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm))) begin
        k_reg_261 <= k_1_reg_630;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        k_reg_261 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg2_fsm_3 == ap_CS_fsm)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)))) begin
        reg_273 <= src_q0;
    end else if ((((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)))) begin
        reg_273 <= src_q1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
        ap_reg_ppstg_exitcond1_reg_626_pp0_it1 <= exitcond1_reg_626;
        ap_reg_ppstg_p_addr8_reg_655_pp0_it1 <= p_addr8_reg_655;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0))) begin
        dct_coeff_table_1_load_reg_670 <= dct_coeff_table_1_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg2_fsm_3 == ap_CS_fsm))) begin
        dct_coeff_table_2_load_reg_710 <= dct_coeff_table_2_q0;
        dct_coeff_table_4_load_reg_725 <= dct_coeff_table_4_q0;
        dct_coeff_table_5_load_reg_730 <= dct_coeff_table_5_q0;
        dct_coeff_table_6_load_reg_735 <= dct_coeff_table_6_q0;
        dct_coeff_table_7_load_reg_740 <= dct_coeff_table_7_q0;
        tmp_8_1_reg_705 <= tmp_8_1_fu_442_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm))) begin
        exitcond1_reg_626 <= exitcond1_fu_382_p2;
        k_1_reg_630 <= k_1_fu_388_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_382_p2))) begin
        p_addr8_reg_655 <= p_addr8_fu_415_p2;
        tmp_reg_635[0] <= tmp_fu_394_p1[0];
tmp_reg_635[1] <= tmp_fu_394_p1[1];
tmp_reg_635[2] <= tmp_fu_394_p1[2];
tmp_reg_635[3] <= tmp_fu_394_p1[3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        src_addr_1_reg_591[3] <= tmp_9_fu_299_p1[3];
src_addr_1_reg_591[4] <= tmp_9_fu_299_p1[4];
src_addr_1_reg_591[5] <= tmp_9_fu_299_p1[5];
        src_addr_2_reg_596[3] <= tmp_12_fu_312_p1[3];
src_addr_2_reg_596[4] <= tmp_12_fu_312_p1[4];
src_addr_2_reg_596[5] <= tmp_12_fu_312_p1[5];
        src_addr_3_reg_601[3] <= tmp_14_fu_325_p1[3];
src_addr_3_reg_601[4] <= tmp_14_fu_325_p1[4];
src_addr_3_reg_601[5] <= tmp_14_fu_325_p1[5];
        src_addr_4_reg_606[3] <= tmp_16_fu_338_p1[3];
src_addr_4_reg_606[4] <= tmp_16_fu_338_p1[4];
src_addr_4_reg_606[5] <= tmp_16_fu_338_p1[5];
        src_addr_5_reg_611[3] <= tmp_18_fu_351_p1[3];
src_addr_5_reg_611[4] <= tmp_18_fu_351_p1[4];
src_addr_5_reg_611[5] <= tmp_18_fu_351_p1[5];
        src_addr_6_reg_616[3] <= tmp_20_fu_364_p1[3];
src_addr_6_reg_616[4] <= tmp_20_fu_364_p1[4];
src_addr_6_reg_616[5] <= tmp_20_fu_364_p1[5];
        src_addr_7_reg_621[3] <= tmp_22_fu_377_p1[3];
src_addr_7_reg_621[4] <= tmp_22_fu_377_p1[4];
src_addr_7_reg_621[5] <= tmp_22_fu_377_p1[5];
        src_addr_reg_586[3] <= tmp_6_fu_286_p1[3];
src_addr_reg_586[4] <= tmp_6_fu_286_p1[4];
src_addr_reg_586[5] <= tmp_6_fu_286_p1[5];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm))) begin
        tmp1_reg_775 <= tmp1_fu_524_p2;
        tmp_8_4_reg_765 <= tmp_8_4_fu_500_p2;
        tmp_8_6_reg_770 <= tmp_8_6_fu_513_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm))) begin
        tmp2_reg_760 <= tmp2_fu_488_p2;
        tmp_8_2_reg_745 <= tmp_8_2_fu_469_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_ST_pp0_stg2_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_626_pp0_it1))) begin
        tmp4_reg_790 <= tmp4_fu_557_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_626_pp0_it1))) begin
        tmp5_reg_780 <= tmp5_fu_542_p2;
        tmp7_reg_785 <= tmp7_fu_547_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st10_fsm_5 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st10_fsm_5 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// dct_coeff_table_0_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_fu_382_p2)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_382_p2))) begin
        dct_coeff_table_0_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_0_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_1_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_fu_382_p2)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_382_p2))) begin
        dct_coeff_table_1_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_1_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_2_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_reg_626)
begin
    if (((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0))) begin
        dct_coeff_table_2_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_2_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_3_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_reg_626)
begin
    if (((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0))) begin
        dct_coeff_table_3_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_3_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_4_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_reg_626)
begin
    if (((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0))) begin
        dct_coeff_table_4_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_4_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_5_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_reg_626)
begin
    if (((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0))) begin
        dct_coeff_table_5_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_5_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_6_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_reg_626)
begin
    if (((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0))) begin
        dct_coeff_table_6_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_6_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_7_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_reg_626)
begin
    if (((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0))) begin
        dct_coeff_table_7_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_7_ce0 = ap_const_logic_0;
    end
end

/// dst_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_626_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_626_pp0_it1))) begin
        dst_ce0 = ap_const_logic_1;
    end else begin
        dst_ce0 = ap_const_logic_0;
    end
end

/// dst_we0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_626_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_626_pp0_it1))) begin
        dst_we0 = ap_const_logic_1;
    end else begin
        dst_we0 = ap_const_logic_0;
    end
end

/// k_phi_fu_265_p4 assign process. ///
always @ (ap_CS_fsm or k_reg_261 or ap_reg_ppiten_pp0_it1 or exitcond1_reg_626 or k_1_reg_630)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm))) begin
        k_phi_fu_265_p4 = k_1_reg_630;
    end else begin
        k_phi_fu_265_p4 = k_reg_261;
    end
end

/// src_address0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or src_addr_reg_586 or src_addr_2_reg_596 or src_addr_4_reg_606 or src_addr_6_reg_616)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            src_address0 = src_addr_6_reg_616;
        end else if ((ap_ST_pp0_stg2_fsm_3 == ap_CS_fsm)) begin
            src_address0 = src_addr_4_reg_606;
        end else if ((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm)) begin
            src_address0 = src_addr_2_reg_596;
        end else if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            src_address0 = src_addr_reg_586;
        end else begin
            src_address0 = 'bx;
        end
    end else begin
        src_address0 = 'bx;
    end
end

/// src_address1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or src_addr_1_reg_591 or src_addr_3_reg_601 or src_addr_5_reg_611 or src_addr_7_reg_621)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) begin
            src_address1 = src_addr_7_reg_621;
        end else if ((ap_ST_pp0_stg2_fsm_3 == ap_CS_fsm)) begin
            src_address1 = src_addr_5_reg_611;
        end else if ((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm)) begin
            src_address1 = src_addr_3_reg_601;
        end else if ((ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm)) begin
            src_address1 = src_addr_1_reg_591;
        end else begin
            src_address1 = 'bx;
        end
    end else begin
        src_address1 = 'bx;
    end
end

/// src_ce0 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_reg_626 or exitcond1_fu_382_p2)
begin
    if ((((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg2_fsm_3 == ap_CS_fsm)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_382_p2)))) begin
        src_ce0 = ap_const_logic_1;
    end else begin
        src_ce0 = ap_const_logic_0;
    end
end

/// src_ce1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or exitcond1_reg_626 or exitcond1_fu_382_p2)
begin
    if ((((ap_ST_pp0_stg1_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg2_fsm_3 == ap_CS_fsm)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_reg_626 == ap_const_lv1_0) & (ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_ST_pp0_stg0_fsm_1 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_382_p2)))) begin
        src_ce1 = ap_const_logic_1;
    end else begin
        src_ce1 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or exitcond1_fu_382_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_pp0_stg0_fsm_1 : 
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_const_lv1_0 == exitcond1_fu_382_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_5;
            end
        ap_ST_pp0_stg1_fsm_2 : 
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
        ap_ST_pp0_stg2_fsm_3 : 
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
        ap_ST_pp0_stg3_fsm_4 : 
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_ST_pp0_stg3_fsm_4 == ap_CS_fsm) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_5;
            end
        ap_ST_st10_fsm_5 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign dct_coeff_table_0_address0 = tmp_fu_394_p1;
assign dct_coeff_table_1_address0 = tmp_fu_394_p1;
assign dct_coeff_table_2_address0 = tmp_reg_635;
assign dct_coeff_table_3_address0 = tmp_reg_635;
assign dct_coeff_table_4_address0 = tmp_reg_635;
assign dct_coeff_table_5_address0 = tmp_reg_635;
assign dct_coeff_table_6_address0 = tmp_reg_635;
assign dct_coeff_table_7_address0 = tmp_reg_635;
assign dst_address0 = tmp_24_fu_577_p1;
assign dst_d0 = {{tmp_2_fu_562_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
assign exitcond1_fu_382_p2 = (k_phi_fu_265_p4 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_fu_429_ce = ap_const_logic_1;
assign grp_fu_429_p0 = src_q0;
assign grp_fu_429_p1 = grp_fu_429_p10;
assign grp_fu_429_p10 = $unsigned(dct_coeff_table_0_q0);
assign grp_fu_456_ce = ap_const_logic_1;
assign grp_fu_456_p0 = src_q1;
assign grp_fu_456_p1 = dct_coeff_table_3_q0;
assign grp_fu_482_ce = ap_const_logic_1;
assign grp_fu_482_p0 = src_q1;
assign grp_fu_482_p1 = dct_coeff_table_5_load_reg_730;
assign k_1_fu_388_p2 = (k_phi_fu_265_p4 + ap_const_lv4_1);
assign p_addr8_fu_415_p2 = (p_addr_cast_fu_411_p1 + tmp_trn_cast_fu_400_p1);
assign p_addr_cast_fu_411_p1 = $unsigned(tmp_23_fu_404_p3);
assign tmp1_fu_524_p2 = (tmp3_fu_519_p2 + tmp2_reg_760);
assign tmp2_fu_488_p2 = (tmp_8_1_reg_705 + grp_fu_429_p2);
assign tmp3_fu_519_p2 = (tmp_8_2_reg_745 + grp_fu_456_p2);
assign tmp4_fu_557_p2 = (tmp6_fu_553_p2 + tmp5_reg_780);
assign tmp5_fu_542_p2 = (tmp_8_4_reg_765 + grp_fu_482_p2);
assign tmp6_fu_553_p2 = (tmp7_reg_785 + tmp_8_6_reg_770);
assign tmp7_fu_547_p2 = (tmp_8_7_fu_536_p2 + ap_const_lv29_1000);
assign tmp_10_fu_304_p3 = {{tmp_1}, {ap_const_lv3_2}};
assign tmp_12_fu_312_p1 = $unsigned(tmp_10_fu_304_p3);
assign tmp_13_fu_317_p3 = {{tmp_1}, {ap_const_lv3_3}};
assign tmp_14_fu_325_p1 = $unsigned(tmp_13_fu_317_p3);
assign tmp_15_fu_330_p3 = {{tmp_1}, {ap_const_lv3_4}};
assign tmp_16_fu_338_p1 = $unsigned(tmp_15_fu_330_p3);
assign tmp_17_fu_343_p3 = {{tmp_1}, {ap_const_lv3_5}};
assign tmp_18_fu_351_p1 = $unsigned(tmp_17_fu_343_p3);
assign tmp_19_fu_356_p3 = {{tmp_1}, {ap_const_lv3_6}};
assign tmp_20_fu_364_p1 = $unsigned(tmp_19_fu_356_p3);
assign tmp_21_fu_369_p3 = {{tmp_1}, {ap_const_lv3_7}};
assign tmp_22_fu_377_p1 = $unsigned(tmp_21_fu_369_p3);
assign tmp_23_fu_404_p3 = {{tmp_11}, {ap_const_lv3_0}};
assign tmp_24_fu_577_p1 = $unsigned(ap_reg_ppstg_p_addr8_reg_655_pp0_it1);
assign tmp_2_fu_562_p2 = (tmp4_reg_790 + tmp1_reg_775);
assign tmp_5_fu_278_p3 = {{tmp_1}, {ap_const_lv3_0}};
assign tmp_6_fu_286_p1 = $unsigned(tmp_5_fu_278_p3);
assign tmp_7_fu_291_p3 = {{tmp_1}, {ap_const_lv3_1}};
assign tmp_8_1_fu_442_p0 = reg_273;
assign tmp_8_1_fu_442_p1 = dct_coeff_table_1_load_reg_670;
assign tmp_8_1_fu_442_p2 = ($signed(tmp_8_1_fu_442_p0) * $signed(tmp_8_1_fu_442_p1));
assign tmp_8_2_fu_469_p0 = reg_273;
assign tmp_8_2_fu_469_p1 = dct_coeff_table_2_load_reg_710;
assign tmp_8_2_fu_469_p2 = ($signed(tmp_8_2_fu_469_p0) * $signed(tmp_8_2_fu_469_p1));
assign tmp_8_4_fu_500_p0 = reg_273;
assign tmp_8_4_fu_500_p1 = dct_coeff_table_4_load_reg_725;
assign tmp_8_4_fu_500_p2 = ($signed(tmp_8_4_fu_500_p0) * $signed(tmp_8_4_fu_500_p1));
assign tmp_8_6_fu_513_p0 = src_q0;
assign tmp_8_6_fu_513_p1 = dct_coeff_table_6_load_reg_735;
assign tmp_8_6_fu_513_p2 = ($signed(tmp_8_6_fu_513_p0) * $signed(tmp_8_6_fu_513_p1));
assign tmp_8_7_fu_536_p0 = reg_273;
assign tmp_8_7_fu_536_p1 = dct_coeff_table_7_load_reg_740;
assign tmp_8_7_fu_536_p2 = ($signed(tmp_8_7_fu_536_p0) * $signed(tmp_8_7_fu_536_p1));
assign tmp_9_fu_299_p1 = $unsigned(tmp_7_fu_291_p3);
assign tmp_fu_394_p1 = $unsigned(k_phi_fu_265_p4);
assign tmp_trn_cast_fu_400_p1 = $unsigned(k_phi_fu_265_p4);
always @ (posedge ap_clk)
begin
    src_addr_reg_586[2:0] <= 3'b000;
    src_addr_1_reg_591[2:0] <= 3'b001;
    src_addr_2_reg_596[2:0] <= 3'b010;
    src_addr_3_reg_601[2:0] <= 3'b011;
    src_addr_4_reg_606[2:0] <= 3'b100;
    src_addr_5_reg_611[2:0] <= 3'b101;
    src_addr_6_reg_616[2:0] <= 3'b110;
    src_addr_7_reg_621[2:0] <= 3'b111;
    tmp_reg_635[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end



endmodule //dct_1d

